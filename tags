!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#	.vim_runtime/vimrcs/basic.vim	/^vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@\/<CR><CR>$/;"	m
$$	.vim_runtime/vimrcs/extended.vim	/^vnoremap $$ <esc>`>a"<esc>`<i"<esc>$/;"	m
$1	.vim_runtime/vimrcs/extended.vim	/^inoremap $1 ()<esc>i$/;"	m
$1	.vim_runtime/vimrcs/extended.vim	/^vnoremap $1 <esc>`>a)<esc>`<i(<esc>$/;"	m
$2	.vim_runtime/vimrcs/extended.vim	/^inoremap $2 []<esc>i$/;"	m
$2	.vim_runtime/vimrcs/extended.vim	/^vnoremap $2 <esc>`>a]<esc>`<i[<esc>$/;"	m
$3	.vim_runtime/vimrcs/extended.vim	/^inoremap $3 {}<esc>i$/;"	m
$3	.vim_runtime/vimrcs/extended.vim	/^vnoremap $3 <esc>`>a}<esc>`<i{<esc>$/;"	m
$4	.vim_runtime/vimrcs/extended.vim	/^inoremap $4 {<esc>o}<esc>O$/;"	m
$LANG	.vim_runtime/vimrcs/basic.vim	/^let $LANG='en' $/;"	v
$PERL6_EXCEPTIONS_HANDLER	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^let $PERL6_EXCEPTIONS_HANDLER = 'JSON'$/;"	v
$RAKUDO_ERROR_COLOR	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^let $RAKUDO_ERROR_COLOR = 0$/;"	v
$c	.vim_runtime/vimrcs/extended.vim	/^cno $c e <C-\\>eCurrentFileDir("e")<cr>$/;"	m
$d	.vim_runtime/vimrcs/extended.vim	/^cno $d e ~\/Desktop\/$/;"	m
$e	.vim_runtime/vimrcs/extended.vim	/^inoremap $e ""<esc>i$/;"	m
$e	.vim_runtime/vimrcs/extended.vim	/^vnoremap $e <esc>`>a`<esc>`<i`<esc>$/;"	m
$h	.vim_runtime/vimrcs/extended.vim	/^cno $h e ~\/$/;"	m
$j	.vim_runtime/vimrcs/extended.vim	/^cno $j e .\/$/;"	m
$q	.vim_runtime/vimrcs/extended.vim	/^cno $q <C-\\>eDeleteTillSlash()<cr>$/;"	m
$q	.vim_runtime/vimrcs/extended.vim	/^inoremap $q ''<esc>i$/;"	m
$q	.vim_runtime/vimrcs/extended.vim	/^vnoremap $q <esc>`>a'<esc>`<i'<esc>$/;"	m
*	.vim_runtime/vimrcs/basic.vim	/^vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>\/<C-R>=@\/<CR><CR>$/;"	m
+	.vim_runtime/sources_non_forked/vim-expand-region/plugin/expand_region.vim	/^  nmap + <Plug>(expand_region_expand)$/;"	m
+	.vim_runtime/sources_non_forked/vim-expand-region/plugin/expand_region.vim	/^  vmap + <Plug>(expand_region_expand)$/;"	m
-	.vim_runtime/my_configs.vim	/^nmap - <S-$>$/;"	m
.	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
.	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^nnoremap <silent> .     :<C-U>call repeat#run(v:count)<CR>$/;"	m
0	.vim_runtime/vimrcs/basic.vim	/^map 0 ^$/;"	m
5	.vim_runtime/temp_dirs/undodir/%home%zhangyu%.vim_runtime%my_configs.vim	/^let = '<>'5Å_–/;"	v
<C-A>		<Home>	.vim_runtime/vimrcs/extended.vim	/^cnoremap <C-A>		<Home>$/;"	m
<C-E>		<End>	.vim_runtime/vimrcs/extended.vim	/^cnoremap <C-E>		<End>$/;"	m
<C-G>S	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-K>		<C-U>	.vim_runtime/vimrcs/extended.vim	/^cnoremap <C-K>		<C-U>$/;"	m
<C-N>	.vim_runtime/vimrcs/extended.vim	/^cnoremap <C-N> <Down>$/;"	m
<C-P>	.vim_runtime/vimrcs/extended.vim	/^cnoremap <C-P> <Up>$/;"	m
<C-R>	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-R>	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^nnoremap <silent> <C-R> :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<C-S>	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-W><C-F>	.vim_runtime/sources_non_forked/open_file_under_cursor.vim/plugin/open_file_under_cursor.vim	/^nnoremap <C-W><C-F> :call GotoFile("new")<CR>$/;"	m
<C-W>f	.vim_runtime/sources_non_forked/open_file_under_cursor.vim/plugin/open_file_under_cursor.vim	/^nnoremap <C-W>f :call GotoFile("new")<CR>$/;"	m
<C-h>	.vim_runtime/vimrcs/basic.vim	/^map <C-h> <C-W>h$/;"	m
<C-j>	.vim_runtime/vimrcs/basic.vim	/^map <C-j> <C-W>j$/;"	m
<C-j>	.vim_runtime/vimrcs/plugins_config.vim	/^ino <C-j> <C-r>=snipMate#TriggerSnippet()<cr>$/;"	m
<C-k>	.vim_runtime/vimrcs/basic.vim	/^map <C-k> <C-W>k$/;"	m
<C-l>	.vim_runtime/vimrcs/basic.vim	/^map <C-l> <C-W>l$/;"	m
<C-n>	.vim_runtime/vimrcs/plugins_config.vim	/^nmap <C-n> <Plug>yankstack_substitute_newer_paste$/;"	m
<C-p>	.vim_runtime/vimrcs/plugins_config.vim	/^nmap <C-p> <Plug>yankstack_substitute_older_paste$/;"	m
<C-q>	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-q> <NOP>$/;"	m
<C-space>	.vim_runtime/vimrcs/basic.vim	/^map <C-space> ?$/;"	m
<C-v>	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-v> <NOP>$/;"	m
<CR>	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <CR> :call ale#preview#OpenSelection()<CR>$/;"	m
<D-j>	.vim_runtime/vimrcs/basic.vim	/^  nmap <D-j> <M-j>$/;"	m
<D-j>	.vim_runtime/vimrcs/basic.vim	/^  vmap <D-j> <M-j>$/;"	m
<D-k>	.vim_runtime/vimrcs/basic.vim	/^  nmap <D-k> <M-k>$/;"	m
<D-k>	.vim_runtime/vimrcs/basic.vim	/^  vmap <D-k> <M-k>$/;"	m
<F5>	.vim_runtime/my_configs.vim	/^nnoremap <F5> <Esc>:w<CR>:make<CR>$/;"	m
<F5>	.vim_runtime/vimrcs/extended.vim	/^imap <F5> <Esc>:call CompileRun()<CR>$/;"	m
<F5>	.vim_runtime/vimrcs/extended.vim	/^map <F5> :call CompileRun()<CR>$/;"	m
<F5>	.vim_runtime/vimrcs/extended.vim	/^vmap <F5> <Esc>:call CompileRun()<CR>$/;"	m
<F7>	.vim_runtime/my_configs.vim	/^nmap <F7> :TlistToggle <CR>$/;"	m
<F7>	.vim_runtime/sources_non_forked/vim-flake8/ftplugin/python_flake8.vim	/^        noremap <buffer> <F7> :call flake8#Flake8()<CR>$/;"	m
<Leader>be	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^    nnoremap <script> <silent> <unique> <Leader>be :BufExplorer<CR>$/;"	m
<Leader>bs	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^    nnoremap <script> <silent> <unique> <Leader>bs :BufExplorerHorizontalSplit<CR>$/;"	m
<Leader>bt	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^    nnoremap <script> <silent> <unique> <Leader>bt :ToggleBufExplorer<CR>$/;"	m
<Leader>bv	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^    nnoremap <script> <silent> <unique> <Leader>bv :BufExplorerVerticalSplit<CR>$/;"	m
<Leader>ig	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^  nmap <silent><unique> <Leader>ig <Plug>IndentGuidesToggle$/;"	m
<Leader>ih	.vim/plugin/a.vim	/^imap <Leader>ih <ESC>:IHS<CR>$/;"	m
<Leader>ih	.vim/plugin/a.vim	/^nmap <Leader>ih :IHS<CR>$/;"	m
<Leader>ihn	.vim/plugin/a.vim	/^imap <Leader>ihn <ESC>:IHN<CR>$/;"	m
<Leader>ihn	.vim/plugin/a.vim	/^nmap <Leader>ihn :IHN<CR>$/;"	m
<Leader>is	.vim/plugin/a.vim	/^imap <Leader>is <ESC>:IHS<CR>:A<CR>$/;"	m
<Leader>is	.vim/plugin/a.vim	/^nmap <Leader>is :IHS<CR>:A<CR>$/;"	m
<Leader>m	.vim_runtime/vimrcs/basic.vim	/^noremap <Leader>m mmHmt:%s\/<C-V><cr>\/\/ge<cr>'tzt'm$/;"	m
<Leader>p	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^  map! <unique> <silent> <Leader>p <Plug>PeepOpen$/;"	m
<Leader>tl	.vim_runtime/vimrcs/basic.vim	/^nmap <Leader>tl :exe "tabn ".g:lasttab<CR>$/;"	m
<M-P>	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^  imap <M-P> <Plug>yankstack_substitute_newer_paste$/;"	m
<M-P>	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^  nmap <M-P> <Plug>yankstack_substitute_newer_paste$/;"	m
<M-j>	.vim_runtime/vimrcs/basic.vim	/^nmap <M-j> mz:m+<cr>`z$/;"	m
<M-j>	.vim_runtime/vimrcs/basic.vim	/^vmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z$/;"	m
<M-k>	.vim_runtime/vimrcs/basic.vim	/^nmap <M-k> mz:m-2<cr>`z$/;"	m
<M-k>	.vim_runtime/vimrcs/basic.vim	/^vmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z$/;"	m
<M-p>	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^  imap <M-p> <Plug>yankstack_substitute_older_paste$/;"	m
<M-p>	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^  nmap <M-p> <Plug>yankstack_substitute_older_paste$/;"	m
<Plug>(GitGutterNextHunk)	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterNextHunk) &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>(GitGutterPrevHunk)	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterPrevHunk) &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>(GitGutterPreviewHunk)	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterPreviewHunk) :GitGutterPreviewHunk<CR>$/;"	m
<Plug>(GitGutterStageHunk)	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterStageHunk)   :GitGutterStageHunk<CR>$/;"	m
<Plug>(GitGutterTextObjectInnerPending)	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectInnerPending) :<C-U>call gitgutter#hunk#text_object(1)<CR>$/;"	m
<Plug>(GitGutterTextObjectOuterPending)	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectOuterPending) :<C-U>call gitgutter#hunk#text_object(0)<CR>$/;"	m
<Plug>(GitGutterUndoHunk)	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterUndoHunk)    :GitGutterUndoHunk<CR>$/;"	m
<Plug>(RepeatDot)	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>if !repeat#run(v:count)<Bar>echoerr repeat#errmsg()<Bar>endif<CR>$/;"	m
<Plug>(RepeatRedo)	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(abolish-coerce)	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^nnoremap <expr> <Plug>(abolish-coerce) <SID>coerce(nr2char(getchar()))$/;"	m
<Plug>(abolish-coerce)	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^vnoremap <expr> <Plug>(abolish-coerce) <SID>coerce(nr2char(getchar()))$/;"	m
<Plug>(ale_code_action)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_code_action) :ALECodeAction<Return>$/;"	m
<Plug>(ale_complete)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^inoremap <silent> <Plug>(ale_complete) <C-\\><C-O>:ALEComplete<Return>$/;"	m
<Plug>(ale_detail)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail<Return>$/;"	m
<Plug>(ale_disable)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable<Return>$/;"	m
<Plug>(ale_disable_buffer)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer<Return>$/;"	m
<Plug>(ale_documentation)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_documentation) :ALEDocumentation<Return>$/;"	m
<Plug>(ale_enable)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable<Return>$/;"	m
<Plug>(ale_enable_buffer)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer<Return>$/;"	m
<Plug>(ale_find_references)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_find_references) :ALEFindReferences<Return>$/;"	m
<Plug>(ale_first)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst<Return>$/;"	m
<Plug>(ale_fix)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix<Return>$/;"	m
<Plug>(ale_go_to_definition)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition) :ALEGoToDefinition<Return>$/;"	m
<Plug>(ale_go_to_definition_in_split)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_split) :ALEGoToDefinition -split<Return>$/;"	m
<Plug>(ale_go_to_definition_in_tab)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_tab) :ALEGoToDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_definition_in_vsplit)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_vsplit) :ALEGoToDefinition -vsplit<Return>$/;"	m
<Plug>(ale_go_to_type_definition)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition) :ALEGoToTypeDefinition<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_split)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_split) :ALEGoToTypeDefinition -split<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_tab)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_tab) :ALEGoToTypeDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_vsplit)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_vsplit) :ALEGoToTypeDefinitionIn -vsplit<Return>$/;"	m
<Plug>(ale_hover)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_hover) :ALEHover<Return>$/;"	m
<Plug>(ale_import)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_import) :ALEImport<Return>$/;"	m
<Plug>(ale_last)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast<Return>$/;"	m
<Plug>(ale_lint)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint<Return>$/;"	m
<Plug>(ale_next)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext<Return>$/;"	m
<Plug>(ale_next_error)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_error) :ALENext -error<Return>$/;"	m
<Plug>(ale_next_warning)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_warning) :ALENext -warning<Return>$/;"	m
<Plug>(ale_next_wrap)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap<Return>$/;"	m
<Plug>(ale_next_wrap_error)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_error) :ALENext -wrap -error<Return>$/;"	m
<Plug>(ale_next_wrap_warning)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_warning) :ALENext -wrap -warning<Return>$/;"	m
<Plug>(ale_previous)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious<Return>$/;"	m
<Plug>(ale_previous_error)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_error) :ALEPrevious -error<Return>$/;"	m
<Plug>(ale_previous_warning)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_warning) :ALEPrevious -warning<Return>$/;"	m
<Plug>(ale_previous_wrap)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap<Return>$/;"	m
<Plug>(ale_previous_wrap_error)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_error) :ALEPrevious -wrap -error<Return>$/;"	m
<Plug>(ale_previous_wrap_warning)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_warning) :ALEPrevious -wrap -warning<Return>$/;"	m
<Plug>(ale_rename)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_rename) :ALERename<Return>$/;"	m
<Plug>(ale_repeat_selection)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_repeat_selection) :ALERepeatSelection<Return>$/;"	m
<Plug>(ale_reset)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset<Return>$/;"	m
<Plug>(ale_reset_buffer)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer<Return>$/;"	m
<Plug>(ale_show_completion_menu)	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^cnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^inoremap <silent> <Plug>(ale_show_completion_menu) <C-x><C-o><C-p>$/;"	m
<Plug>(ale_show_completion_menu)	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^nnoremap <silent> <Plug>(ale_show_completion_menu) :call ale#completion#RestoreCompletionOptions()<CR>$/;"	m
<Plug>(ale_show_completion_menu)	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^onoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^vnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_toggle)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle<Return>$/;"	m
<Plug>(ale_toggle_buffer)	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer<Return>$/;"	m
<Plug>(expand_region_expand)	.vim_runtime/sources_non_forked/vim-expand-region/plugin/expand_region.vim	/^nnoremap <silent> <Plug>(expand_region_expand)$/;"	m
<Plug>(multiple-cursors-apply)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-apply) <C-o>:call <SID>apply_user_input_next('i')<CR>$/;"	m
<Plug>(multiple-cursors-apply)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-apply) :call <SID>apply_user_input_next('n')<CR>$/;"	m
<Plug>(multiple-cursors-detect)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-detect) <C-o>:call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-detect)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-detect) :call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-input) <C-o>:call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-input) :call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-new)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new) :<C-u>call multiple_cursors#new('v', 0)<CR>$/;"	m
<Plug>(multiple-cursors-new-word)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new-word) :<C-u>call multiple_cursors#new('v', 1)<CR>$/;"	m
<Plug>(multiple-cursors-prev)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-prev) :<C-u>call multiple_cursors#prev()<CR>$/;"	m
<Plug>(multiple-cursors-skip)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-skip) :<C-u>call multiple_cursors#skip()<CR>$/;"	m
<Plug>(multiple-cursors-wait)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-wait) <C-o>:call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(multiple-cursors-wait)	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-wait) :call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug><cfile>	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><ctag>	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><ctag> substitute(RubyCursorTag(),'^$',"\\022\\027",'')$/;"	m
<Plug>AutoPairsReturn	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>CSurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Commentary	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==# 'c')<CR>$/;"	m
<Plug>CommentaryLine	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>$/;"	m
<Plug>Csurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk   &diff ? ']c' : ":\\<C-U>call gitgutter#utility#warn('Please change your map \\<lt>Plug>GitGutterNextHunk to \\<lt>Plug>(GitGutterNextHunk)')\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk   &diff ? '[c' : ":\\<C-U>call gitgutter#utility#warn('Please change your map \\<lt>Plug>GitGutterPrevHunk to \\<lt>Plug>(GitGutterPrevHunk)')\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk   :call gitgutter#utility#warn('Please change your map <lt>Plug>GitGutterPreviewHunk to <lt>Plug>(GitGutterPreviewHunk)')<CR>$/;"	m
<Plug>GitGutterStageHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk     :call gitgutter#utility#warn('Please change your map <lt>Plug>GitGutterStageHunk to <lt>Plug>(GitGutterStageHunk)')<CR>$/;"	m
<Plug>GitGutterUndoHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk      :call gitgutter#utility#warn('Please change your map <lt>Plug>GitGutterUndoHunk to <lt>Plug>(GitGutterUndoHunk)')<CR>$/;"	m
<Plug>ISurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>IndentGuidesDisable	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesDisable :IndentGuidesDisable<CR>$/;"	m
<Plug>IndentGuidesEnable	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesEnable  :IndentGuidesEnable<CR>$/;"	m
<Plug>IndentGuidesToggle	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesToggle  :IndentGuidesToggle<CR>$/;"	m
<Plug>Isurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>Markdown_EditUrlUnderCursor	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>$/;"	m
<Plug>Markdown_OpenUrlUnderCursor	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>$/;"	m
<Plug>PeepOpen	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^noremap <unique> <script> <Plug>PeepOpen <SID>Launch$/;"	m
<Plug>SuperTabBackward	.vim/bundle/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabBackward	.vim/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	.vim/bundle/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<Plug>SuperTabForward	.vim/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<Plug>SurroundRepeat	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>ToggleBackground	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>VSurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround '^'.v:count1.<SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<Plug>snipMateBack	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateBack           <C-R>=snipMate#BackwardsSnippet()<CR>$/;"	m
<Plug>snipMateNextOrTrigger	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateNextOrTrigger  <C-R>=snipMate#TriggerSnippet()<CR>$/;"	m
<Plug>snipMateShow	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateShow           <C-R>=snipMate#ShowAvailableSnips()<CR>$/;"	m
<Plug>snipMateTrigger	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateTrigger        <C-R>=snipMate#TriggerSnippet(1)<CR>$/;"	m
<Plug>yankstack_after_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^inoremap <silent> <Plug>yankstack_after_paste <C-o>:call <SID>after_paste()<CR>$/;"	m
<Plug>yankstack_after_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^nnoremap <silent> <Plug>yankstack_after_paste :call <SID>after_paste()<CR>$/;"	m
<Plug>yankstack_substitute_newer_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^inoremap <silent> <Plug>yankstack_substitute_newer_paste <C-r>=<SID>substitute_paste(-v:count1, 'i')<CR>$/;"	m
<Plug>yankstack_substitute_newer_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^nnoremap <silent> <Plug>yankstack_substitute_newer_paste :<C-u>call <SID>substitute_paste(-v:count1, 'n')<CR>$/;"	m
<Plug>yankstack_substitute_older_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^inoremap <silent> <Plug>yankstack_substitute_older_paste <C-r>=<SID>substitute_paste(v:count1, 'i')<CR>$/;"	m
<Plug>yankstack_substitute_older_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^nnoremap <silent> <Plug>yankstack_substitute_older_paste :<C-u>call <SID>substitute_paste(v:count1, 'n')<CR>$/;"	m
<S-v>	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <S-v> <NOP>$/;"	m
<SID>:	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>:	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>AutoPairsReturn	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>Launch	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^noremap <SID>Launch :call <SID>LaunchPeepOpenViaVim()<CR>$/;"	m
<SID>TogBG	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>c:	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>tagzv	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<SID>xx	.vim/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<c-x>	.vim/bundle/supertab/plugin/supertab.vim	/^  inoremap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<c-x>	.vim/plugin/supertab.vim	/^  imap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	.vim/bundle/supertab/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<cr>	.vim/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<leader><cr>	.vim_runtime/vimrcs/basic.vim	/^map <silent> <leader><cr> :noh<cr>$/;"	m
<leader>a	.vim_runtime/vimrcs/plugins_config.vim	/^nmap <silent> <leader>a <Plug>(ale_next_wrap)$/;"	m
<leader>b	.vim_runtime/vimrcs/plugins_config.vim	/^map <leader>b :CtrlPBuffer<cr>$/;"	m
<leader>ba	.vim_runtime/vimrcs/basic.vim	/^map <leader>ba :bufdo bd<cr>$/;"	m
<leader>bd	.vim_runtime/vimrcs/basic.vim	/^map <leader>bd :Bclose<cr>:tabclose<cr>gT$/;"	m
<leader>cc	.vim_runtime/vimrcs/extended.vim	/^map <leader>cc :botright cope<cr>$/;"	m
<leader>cd	.vim_runtime/vimrcs/basic.vim	/^map <leader>cd :cd %:p:h<cr>:pwd<cr>$/;"	m
<leader>co	.vim_runtime/vimrcs/extended.vim	/^map <leader>co ggVGy:tabnew<cr>:set syntax=qf<cr>pgg$/;"	m
<leader>d	.vim_runtime/vimrcs/plugins_config.vim	/^nnoremap <silent> <leader>d :GitGutterToggle<cr>$/;"	m
<leader>e	.vim_runtime/vimrcs/extended.vim	/^map <leader>e :e! ~\/.vim_runtime\/my_configs.vim<cr>$/;"	m
<leader>f	.vim_runtime/vimrcs/plugins_config.vim	/^map <leader>f :MRU<CR>$/;"	m
<leader>g	.vim_runtime/vimrcs/extended.vim	/^map <leader>g :Ack $/;"	m
<leader>h	.vim_runtime/vimrcs/basic.vim	/^map <leader>h :bprevious<cr>$/;"	m
<leader>j	.vim_runtime/vimrcs/plugins_config.vim	/^map <leader>j :CtrlP<cr>$/;"	m
<leader>l	.vim_runtime/vimrcs/basic.vim	/^map <leader>l :bnext<cr>$/;"	m
<leader>n	.vim_runtime/vimrcs/extended.vim	/^map <leader>n :cn<cr>$/;"	m
<leader>nb	.vim_runtime/vimrcs/plugins_config.vim	/^map <leader>nb :NERDTreeFromBookmark<Space>$/;"	m
<leader>nf	.vim_runtime/vimrcs/plugins_config.vim	/^map <leader>nf :NERDTreeFind<cr>$/;"	m
<leader>nn	.vim_runtime/vimrcs/plugins_config.vim	/^map <leader>nn :NERDTreeToggle<cr>$/;"	m
<leader>o	.vim_runtime/vimrcs/plugins_config.vim	/^map <leader>o :BufExplorer<cr>$/;"	m
<leader>p	.vim_runtime/vimrcs/extended.vim	/^map <leader>p :cp<cr>$/;"	m
<leader>pp	.vim_runtime/vimrcs/basic.vim	/^map <leader>pp :setlocal paste!<cr>$/;"	m
<leader>q	.vim_runtime/vimrcs/basic.vim	/^map <leader>q :e ~\/buffer<cr>$/;"	m
<leader>r	.vim_runtime/vimrcs/extended.vim	/^vnoremap <silent> <leader>r :call VisualSelection('replace', '')<CR>$/;"	m
<leader>s?	.vim_runtime/vimrcs/basic.vim	/^map <leader>s? z=$/;"	m
<leader>sa	.vim_runtime/vimrcs/basic.vim	/^map <leader>sa zg$/;"	m
<leader>sn	.vim_runtime/vimrcs/basic.vim	/^map <leader>sn ]s$/;"	m
<leader>sp	.vim_runtime/vimrcs/basic.vim	/^map <leader>sp [s$/;"	m
<leader>ss	.vim_runtime/vimrcs/basic.vim	/^map <leader>ss :setlocal spell!<cr>$/;"	m
<leader>t<leader>	.vim_runtime/vimrcs/basic.vim	/^map <leader>t<leader> :tabnext $/;"	m
<leader>tc	.vim_runtime/vimrcs/basic.vim	/^map <leader>tc :tabclose<cr>$/;"	m
<leader>te	.vim_runtime/vimrcs/basic.vim	/^map <leader>te :tabedit <C-r>=expand("%:p:h")<cr>\/$/;"	m
<leader>tm	.vim_runtime/vimrcs/basic.vim	/^map <leader>tm :tabmove $/;"	m
<leader>tn	.vim_runtime/vimrcs/basic.vim	/^map <leader>tn :tabnew<cr>$/;"	m
<leader>to	.vim_runtime/vimrcs/basic.vim	/^map <leader>to :tabonly<cr>$/;"	m
<leader>w	.vim_runtime/vimrcs/basic.vim	/^nmap <leader>w :w!<cr>$/;"	m
<leader>x	.vim_runtime/vimrcs/basic.vim	/^map <leader>x :e ~\/buffer.md<cr>$/;"	m
<leader>z	.vim_runtime/vimrcs/plugins_config.vim	/^nnoremap <silent> <leader>z :Goyo<cr>$/;"	m
<plug>(abolish-coerce-word)	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^nnoremap <expr> <plug>(abolish-coerce-word) <SID>coerce(nr2char(getchar())).'iw'$/;"	m
<plug>(goyo-resize)	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^nnoremap <silent> <plug>(goyo-resize) :<c-u>call <sid>resize_pads()<cr>$/;"	m
<space>	.vim_runtime/vimrcs/basic.vim	/^map <space> \/$/;"	m
A	.vim/plugin/a.vim	/^comm! -nargs=? -bang A call AlternateFile("n<bang>", <f-args>)$/;"	c
A	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> A <NOP>$/;"	m
A	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.h	/^/;"	v
ADDONS	.vim_runtime/sources_non_forked/vim-markdown/Makefile	/^ADDONS=${VIMDIR}\/addons$/;"	m
ALEBufferFixGroup	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^augroup ALEBufferFixGroup$/;"	a
ALECleanupGroup	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^augroup ALECleanupGroup$/;"	a
ALECodeAction	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -range ALECodeAction :call ale#codefix#Execute(<range>)$/;"	c
ALEComplete	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEComplete :call ale#completion#GetCompletions('ale-manual')$/;"	c
ALECompletionActions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^augroup ALECompletionActions$/;"	a
ALEDetail	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEDetail :call ale#cursor#ShowCursorDetail()$/;"	c
ALEDisable	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEDisable :call ale#toggle#Disable()$/;"	c
ALEDisableBuffer	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEDisableBuffer :call ale#toggle#DisableBuffer(bufnr(''))$/;"	c
ALEDocumentation	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEDocumentation :call ale#hover#ShowDocumentationAtCursor()$/;"	c
ALEEnable	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEEnable :call ale#toggle#Enable()$/;"	c
ALEEnableBuffer	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEEnableBuffer :call ale#toggle#EnableBuffer(bufnr(''))$/;"	c
ALEFindReferences	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEFindReferences :call ale#references#Find(<f-args>)$/;"	c
ALEFirst	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEFirst :call ale#loclist_jumping#JumpToIndex(0)$/;"	c
ALEFix	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -bang -nargs=* -complete=customlist,ale#fix#registry#CompleteFixers ALEFix :call ale#fix#Fix(bufnr(''), '<bang>', <f-args>)$/;"	c
ALEFixSuggest	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEFixSuggest :call ale#fix#registry#Suggest(&filetype)$/;"	c
ALEGoToDefinition	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToDefinition :call ale#definition#GoToCommandHandler('', <f-args>)$/;"	c
ALEGoToTypeDefinition	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToTypeDefinition :call ale#definition#GoToCommandHandler('type', <f-args>)$/;"	c
ALEHighlightBufferGroup	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^augroup ALEHighlightBufferGroup$/;"	a
ALEHover	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEHover :call ale#hover#ShowAtCursor()$/;"	c
ALEImport	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEImport :call ale#completion#Import()$/;"	c
ALEInfo	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEInfo :call ale#debugging#Info()$/;"	c
ALEInfoToClipboard	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEInfoToClipboard :call ale#debugging#InfoToClipboard()$/;"	c
ALEInfoToFile	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -nargs=1 ALEInfoToFile :call ale#debugging#InfoToFile(<f-args>)$/;"	c
ALELast	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALELast :call ale#loclist_jumping#JumpToIndex(-1)$/;"	c
ALELint	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALELint :call ale#Queue(0, 'lint_file')$/;"	c
ALELintStop	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALELintStop :call ale#engine#Stop(bufnr(''))$/;"	c
ALENext	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -nargs=* ALENext$/;"	c
ALENextWrap	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALENextWrap :call ale#loclist_jumping#Jump('after', 1)$/;"	c
ALEOrganizeImports	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEOrganizeImports :call ale#organize_imports#Execute()$/;"	c
ALEPrevious	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEPrevious$/;"	c
ALEPreviousWrap	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEPreviousWrap :call ale#loclist_jumping#Jump('before', 1)$/;"	c
ALERename	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar -bang ALERename :call ale#rename#Execute()$/;"	c
ALERepeatSelection	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALERepeatSelection :call ale#preview#RepeatSelection()$/;"	c
ALEReset	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEReset :call ale#toggle#Reset()$/;"	c
ALEResetBuffer	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEResetBuffer :call ale#toggle#ResetBuffer(bufnr(''))$/;"	c
ALEStopAllLSPs	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEStopAllLSPs :call ale#lsp#reset#StopAllLSPs()$/;"	c
ALESymbolSearch	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -nargs=1 ALESymbolSearch :call ale#symbol#Search(<q-args>)$/;"	c
ALEToggle	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEToggle :call ale#toggle#Toggle()$/;"	c
ALEToggleBuffer	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^command! -bar ALEToggleBuffer :call ale#toggle#ToggleBuffer(bufnr(''))$/;"	c
ALWAYS	.vim_runtime/sources_non_forked/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
AN	.vim/plugin/a.vim	/^comm! -nargs=? -bang AN call NextAlternate("<bang>")$/;"	c
ARCHIVE	.vim_runtime/sources_non_forked/vim-coffee-script/Makefile	/^ARCHIVE = vim-coffee-script-$(VERSION).zip$/;"	m
ARCHIVE_DIRS	.vim_runtime/sources_non_forked/vim-coffee-script/Makefile	/^ARCHIVE_DIRS = after autoload compiler doc ftdetect ftplugin indent syntax$/;"	m
AS	.vim/plugin/a.vim	/^comm! -nargs=? -bang AS call AlternateFile("h<bang>", <f-args>)$/;"	c
AT	.vim/plugin/a.vim	/^comm! -nargs=? -bang AT call AlternateFile("t<bang>", <f-args>)$/;"	c
AV	.vim/plugin/a.vim	/^comm! -nargs=? -bang AV call AlternateFile("v<bang>", <f-args>)$/;"	c
AbbreviateMessage	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/elvis.vim	/^function! s:AbbreviateMessage(text) abort$/;"	f
Abolish	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^  let Abolish = {}$/;"	v
Abolish	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish$/;"	c
Abolished	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! Abolished()$/;"	f
AcceptSelection	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
AccessModifier	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
Ack	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack           call ack#Ack('grep<bang>', <q-args>)$/;"	c
AckAdd	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd        call ack#Ack('grepadd<bang>', <q-args>)$/;"	c
AckFile	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile       call ack#Ack('grep<bang> -g', <q-args>)$/;"	c
AckFromSearch	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call ack#AckFromSearch('grep<bang>', <q-args>)$/;"	c
AckHelp	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help AckHelp       call ack#AckHelp('grep<bang>', <q-args>)$/;"	c
AckWindow	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=*                AckWindow     call ack#AckWindow('grep<bang>', <q-args>)$/;"	c
Action	.vim/src/vjde/completion/Struts2Simple.java	/^interface Action {$/;"	i
Action.results	.vim/src/vjde/completion/Struts2Simple.java	/^        public Result[] results() ;$/;"	m	interface:Action	access:public	signature:()
Action.value	.vim/src/vjde/completion/Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Action	access:public	signature:()
ActionImpl	.vim/src/vjde/completion/Struts2Configure.java	/^	public ActionImpl(String n,Result[] r) {$/;"	m	class:ActionImpl	access:public	signature:(String n,Result[] r)
ActionImpl	.vim/src/vjde/completion/Struts2Configure.java	/^class ActionImpl implements Action {$/;"	c	inherits:Action
ActionImpl.ActionImpl	.vim/src/vjde/completion/Struts2Configure.java	/^	public ActionImpl(String n,Result[] r) {$/;"	m	class:ActionImpl	access:public	signature:(String n,Result[] r)
ActionImpl.annotationType	.vim/src/vjde/completion/Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.exceptionMappings	.vim/src/vjde/completion/Struts2Configure.java	/^				public ExceptionMapping[] exceptionMappings() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.interceptorRefs	.vim/src/vjde/completion/Struts2Configure.java	/^				public InterceptorRef[] interceptorRefs() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.name	.vim/src/vjde/completion/Struts2Configure.java	/^	String name ;$/;"	f	class:ActionImpl	access:default
ActionImpl.params	.vim/src/vjde/completion/Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.res	.vim/src/vjde/completion/Struts2Configure.java	/^	Result[] res;$/;"	f	class:ActionImpl	access:default
ActionImpl.results	.vim/src/vjde/completion/Struts2Configure.java	/^				public Result[] results() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl.value	.vim/src/vjde/completion/Struts2Configure.java	/^				public String value() {$/;"	m	class:ActionImpl	access:public	signature:()
ActionImpl2	.vim/src/vjde/completion/Struts2Simple.java	/^	public ActionImpl2(String n,Result[] r) {$/;"	m	class:ActionImpl2	access:public	signature:(String n,Result[] r)
ActionImpl2	.vim/src/vjde/completion/Struts2Simple.java	/^class ActionImpl2 implements Action {$/;"	c	inherits:Action
ActionImpl2.ActionImpl2	.vim/src/vjde/completion/Struts2Simple.java	/^	public ActionImpl2(String n,Result[] r) {$/;"	m	class:ActionImpl2	access:public	signature:(String n,Result[] r)
ActionImpl2.annotationType	.vim/src/vjde/completion/Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl2	access:public	signature:()
ActionImpl2.name	.vim/src/vjde/completion/Struts2Simple.java	/^	String name ;$/;"	f	class:ActionImpl2	access:default
ActionImpl2.params	.vim/src/vjde/completion/Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ActionImpl2	access:public	signature:()
ActionImpl2.res	.vim/src/vjde/completion/Struts2Simple.java	/^	Result[] res;$/;"	f	class:ActionImpl2	access:default
ActionImpl2.results	.vim/src/vjde/completion/Struts2Simple.java	/^				public Result[] results() {$/;"	m	class:ActionImpl2	access:public	signature:()
ActionImpl2.value	.vim/src/vjde/completion/Struts2Simple.java	/^				public String value() {$/;"	m	class:ActionImpl2	access:public	signature:()
ActivateBuffer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ActivateBuffer()$/;"	f
Add	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^fun! Add(a,b)$/;"	f
Add	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate_python_demo.vim	/^fun! s:Add(dict, line, source, trigger) abort$/;"	f
AddAlternateExtensionMapping	.vim/plugin/a.vim	/^function! <SID>AddAlternateExtensionMapping(extension, alternates)$/;"	f
AddBufToCurrentTab	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:AddBufToCurrentTab(bufnr)$/;"	f
AddHeader	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
AddHintsForTypeScriptParsingErrors	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! s:AddHintsForTypeScriptParsingErrors(output) abort$/;"	f
AddProblemsFromOtherBuffers	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:AddProblemsFromOtherBuffers(buffer, linters) abort$/;"	f
AddScopeAliases	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! s:AddScopeAliases(list) abort$/;"	f
AddSection	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
AddSubCallbacks	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! s:AddSubCallbacks(full_list, callbacks) abort$/;"	f
AddTabularPattern	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AdjustPos	.vim/src/lex.yy.c	/^int AdjustPos(LPRECT rect,char *in)$/;"	f	signature:(LPRECT rect,char *in)
AdjustPos	.vim/src/tipswnd.c	/^int AdjustPos(LPRECT rect,char *in)$/;"	f	signature:(LPRECT rect,char *in)
AdjustPosEx	.vim/src/lex.yy.c	/^int AdjustPosEx(LPRECT rect, int w,int h)$/;"	f	signature:(LPRECT rect, int w,int h)
AdjustPosEx	.vim/src/tipswnd.c	/^int AdjustPosEx(LPRECT rect, int w,int h)$/;"	f	signature:(LPRECT rect, int w,int h)
AfterAccessModifier	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
AfterBlockOpening	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
AfterEndKeyword	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
AfterHangingSplat	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
AfterIndentKeyword	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
AfterLeadingOperator	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
AfterTag	.vim/ftplugin/xml.vim	/^fun! s:AfterTag()$/;"	f
AfterUnbalancedBracket	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
Align	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
AlternateFile	.vim/plugin/a.vim	/^function! AlternateFile(splitWindow, ...)$/;"	f
AlternateOpenFileUnderCursor	.vim/plugin/a.vim	/^function! AlternateOpenFileUnderCursor(splitWindow,...)$/;"	f
AlternateOpenNextFile	.vim/plugin/a.vim	/^function! AlternateOpenNextFile(bang)$/;"	f
AlternatePair	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
ApplyConfig	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ApplyConfig(config) abort " Set the buffer options {{{1$/;"	f
ApplyMappings	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:ApplyMappings() "{{{$/;"	f
ApplyPartialTimer	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! s:ApplyPartialTimer(timer_id) abort$/;"	f
ArgSplit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ArgSplit(string) abort$/;"	f
AskPassArgs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
AssociatedTab	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:AssociatedTab(bufnr)$/;"	f
AutoPairsBackInsert	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsBackInsert()$/;"	f
AutoPairsDefaultPairs	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefaultPairs()$/;"	f
AutoPairsDefine	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefine(pairs, ...)$/;"	f
AutoPairsDelete	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsFastWrap()$/;"	f
AutoPairsInit	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInit()$/;"	f
AutoPairsInsert	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInsert(key)$/;"	f
AutoPairsJump	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsJump()$/;"	f
AutoPairsMap	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsReturn()$/;"	f
AutoPairsSpace	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsSpace()$/;"	f
AutoPairsToggle	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsToggle()$/;"	f
AutoPairsTryInit	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsTryInit()$/;"	f
BEGIN	.vim/src/lex.yy.c	79;"	d	file:
BMRU_Push	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! s:BMRU_Push(bnr) "{{{3$/;"	f
Balanced	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:Balanced(lnum)$/;"	f
Balanced	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
Base	.vim_runtime/sources_non_forked/ale/rplugin/python3/deoplete/sources/ale.py	/^    class Base(object):$/;"	c	inherits:object
Bclose	.vim_runtime/vimrcs/basic.vim	/^command! Bclose call <SID>BufcloseCloseIt()$/;"	c
BeforeTag	.vim/ftplugin/xml.vim	/^fun! s:BeforeTag()$/;"	f
BitwiseComparison	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! s:BitwiseComparison(num1, num2, rtype, expr) "{{{3$/;"	f
BlameBufnr	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
BlameCommit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
BlameCommitFileLnum	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
BlameJump	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
BlameLeave	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
BlameQuit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
BlameRehighlight	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
BlameSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, options) abort$/;"	f
BlobTemp	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
BlockComment	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
BlockTag	.vim/ftplugin/xml.vim	/^fun! s:BlockTag(multi)$/;"	f
BlockWith	.vim/ftplugin/xml.vim	/^fun! s:BlockWith(open,close)$/;"	f
BlurStatus	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
Bookmark.AddBookmark	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.Edit	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
Bookmark.GetNodeForName	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BrowserOpen	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BrowserOpen(url, mods, echo_copy) abort$/;"	f
BufExplorer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^command! BufExplorer :call BufExplorer()$/;"	c
BufExplorer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! BufExplorer()$/;"	f
BufExplorerHorizontalSplit	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^command! BufExplorerHorizontalSplit :call BufExplorerHorizontalSplit()$/;"	c
BufExplorerHorizontalSplit	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! BufExplorerHorizontalSplit()$/;"	f
BufExplorerVerticalSplit	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^command! BufExplorerVerticalSplit :call BufExplorerVerticalSplit()$/;"	c
BufExplorerVerticalSplit	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! BufExplorerVerticalSplit()$/;"	f
BufExplorer_IsValid	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! BufExplorer_IsValid()$/;"	f
BufExplorer_ReSize	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! BufExplorer_ReSize()$/;"	f
BufExplorer_Refresh	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! BufExplorer_Refresh()$/;"	f
BufExplorer_Start	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! BufExplorer_Start()$/;"	f
BufName	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
BufcloseCloseIt	.vim_runtime/vimrcs/basic.vim	/^function! <SID>BufcloseCloseIt()$/;"	f
BufferCacheExists	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! s:BufferCacheExists(buffer) abort$/;"	f
BufferOrFileExists	.vim/plugin/a.vim	/^function! <SID>BufferOrFileExists(fileName)$/;"	f
BuildBufferList	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:BuildBufferList()$/;"	f
BuildClassPathOption	.vim_runtime/sources_non_forked/ale/ale_linters/java/javac.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
BuildClassPathOption	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
BuildContextStack	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:BuildContextStack(namespaces, szCurrentScope)$/;"	f
BuildEnvPrefix	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildEnvPrefix(env) abort$/;"	f
BuildItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:BuildItem(menu, def) "{{{3$/;"	f
BuildMenu	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:BuildMenu(world) "{{{3$/;"	f
BuildPrompt	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
BuildShell	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, git, args) abort$/;"	f
BuildSignMap	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! s:BuildSignMap(buffer, current_sign_list, grouped_items) abort$/;"	f
BuildText	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/reek.vim	/^function! s:BuildText(buffer, error) abort$/;"	f
Bundle	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+                                                Bundle        call vundle#config#bundle(<args>)$/;"	c
BundleClean	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          BundleClean   PluginClean<bang>$/;"	c
BundleDocs	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                BundleDocs    PluginDocs$/;"	c
BundleInstall	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall PluginInstall<bang> <args>$/;"	c
BundleList	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang                                          BundleList    PluginList<bang>$/;"	c
BundleSearch	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch  PluginSearch<bang> <args>$/;"	c
BundleUpdate	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         BundleUpdate  PluginInstall!$/;"	c
CC	.vim/src/Makefile	/^CC = gcc -DYYDEBUG=1$/;"	m
CC	Makefile	/^CC		:= g++ -std=c++11 -g3 -Wall -pthread$/;"	m
CLASS_FILE_TYPE	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String CLASS_FILE_TYPE = "class";$/;"	f	class:DynamicClassLoader	access:public
CLASS_PATH	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String CLASS_PATH$/;"	f	class:DynamicClassLoader	access:public
COLUM	.vim/src/previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	g	file:
COMMA	.vim/src/vjde/completion/Completion.java	/^  public static final String COMMA = ",";$/;"	f	class:Completion	access:public
COMMENT	.vim/src/previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
CSParser	.vim/src/CSParser.cs	/^	public class CSParser {$/;"	c	namespace:Wangfc	access:public
CTOR_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int CTOR_INFO = 1;$/;"	f	class:ClassInfo	access:public
CachedSnips	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:CachedSnips(file) abort$/;"	f
CallAgent	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:CallAgent(handler, world, list) abort "{{{3$/;"	f
Callback	.vim/ftplugin/xml.vim	/^function! s:Callback( xml_tag, isHtml )$/;"	f
CanParseMakefile	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! s:CanParseMakefile(buffer) abort$/;"	f
CanUseOmnicompletion	.vim/autoload/omni/cpp/maycomplete.vim	/^function! s:CanUseOmnicompletion()$/;"	f
CaptureKeyMap	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:CaptureKeyMap(key) " {{{$/;"	f
CaptureKeyPresses	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
CaptureKeyPresses	.vim/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
Cargo	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=+ Cargo call cargo#cmd(<q-args>)$/;"	c
CatalogBuffers	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:CatalogBuffers()$/;"	f
Cbench	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cbench call cargo#bench(<q-args>)$/;"	c
Cbuild	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cbuild call cargo#build(<q-args>)$/;"	c
Ccheck	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Ccheck call cargo#check(<q-args>)$/;"	c
Cclean	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cclean call cargo#clean(<q-args>)$/;"	c
Cdoc	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cdoc call cargo#doc(<q-args>)$/;"	c
CeilingDirectories	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! s:CeilingDirectories() abort$/;"	f
Center	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
Change	.vim/ftplugin/xml.vim	/^fun! s:Change()$/;"	f
ChangeCmp	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! s:ChangeCmp(left, right) abort$/;"	f
ChangeWholeTag	.vim/ftplugin/xml.vim	/^fun! s:ChangeWholeTag()$/;"	f
CheckAgentReturnValue	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:CheckAgentReturnValue(name, value) "{{{3$/;"	f
CheckForBadConfig	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! s:CheckForBadConfig(buffer, lines) abort$/;"	f
CheckList	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        function! CheckList(list)$/;"	f
CheckWithLSP	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:CheckWithLSP(linter, details) abort$/;"	f
ChompDefault	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
ChompError	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompError(...) abort$/;"	f
ChooseCommandMap	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
ChooseSnippet	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! s:ChooseSnippet(snippets) abort$/;"	f
Cinit	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cinit call cargo#init(<q-args>)$/;"	c
Cinstall	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cinstall call cargo#install(<q-args>)$/;"	c
ClassInfo	.vim/src/vjde/completion/ClassInfo.java	/^public class ClassInfo {$/;"	c
ClassInfo.CTOR_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int CTOR_INFO = 1;$/;"	f	class:ClassInfo	access:public
ClassInfo.DOUBLE_QUOTE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:ClassInfo	access:public
ClassInfo.END_PAREN	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String END_PAREN = ")";$/;"	f	class:ClassInfo	access:public
ClassInfo.FIELD_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int FIELD_INFO = 0;$/;"	f	class:ClassInfo	access:public
ClassInfo.INNER_CLASS_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int INNER_CLASS_INFO = 3;$/;"	f	class:ClassInfo	access:public
ClassInfo.LIST	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String LIST = "list";$/;"	f	class:ClassInfo	access:public
ClassInfo.METHOD_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int METHOD_INFO = 2;$/;"	f	class:ClassInfo	access:public
ClassInfo.NIL	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String NIL = "nil";$/;"	f	class:ClassInfo	access:public
ClassInfo.NL	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String NL = "\\n";$/;"	f	class:ClassInfo	access:public
ClassInfo.PACKAGE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PACKAGE   = 2;$/;"	f	class:ClassInfo	access:public
ClassInfo.PRIVATE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:ClassInfo	access:public
ClassInfo.PROTECTED	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PROTECTED = 1;$/;"	f	class:ClassInfo	access:public
ClassInfo.PUBLIC	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:ClassInfo	access:public
ClassInfo.SPACE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String SPACE = " ";$/;"	f	class:ClassInfo	access:public
ClassInfo.START_LIST	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String START_LIST;$/;"	f	class:ClassInfo	access:public
ClassInfo.START_PAREN	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String START_PAREN = "(";$/;"	f	class:ClassInfo	access:public
ClassInfo.T	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String T = "t";$/;"	f	class:ClassInfo	access:public
ClassInfo.accessLevel	.vim/src/vjde/completion/ClassInfo.java	/^  private static String accessLevel(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
ClassInfo.className	.vim/src/vjde/completion/ClassInfo.java	/^  static String className(Class c) {$/;"	m	class:ClassInfo	access:default	signature:(Class c)
ClassInfo.getClassInfo	.vim/src/vjde/completion/ClassInfo.java	/^  public static void getClassInfo(String className,$/;"	m	class:ClassInfo	access:public	signature:(String className, String[]imports,String path)
ClassInfo.getClassInfo	.vim/src/vjde/completion/ClassInfo.java	/^  public static void getClassInfo(String className,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className,String path)
ClassInfo.getInheritedInnerClasses	.vim/src/vjde/completion/ClassInfo.java	/^ private static void getInheritedInnerClasses(Class c, StringBuffer sb)  {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
ClassInfo.getInnerClasses	.vim/src/vjde/completion/ClassInfo.java	/^  private static void getInnerClasses(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
ClassInfo.getMemberInfo	.vim/src/vjde/completion/ClassInfo.java	/^  private static void getMemberInfo(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
ClassInfo.hasMember	.vim/src/vjde/completion/ClassInfo.java	/^  public static void hasMember(String className, String memberName,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className, String memberName,String path)
ClassInfo.innerClassInfo	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer innerClassInfo(Class ic) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class ic)
ClassInfo.isAccessible	.vim/src/vjde/completion/ClassInfo.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers, int level)
ClassInfo.isAncestorOf	.vim/src/vjde/completion/ClassInfo.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:ClassInfo	access:public	signature:(String ancestor, String child)
ClassInfo.listClasses	.vim/src/vjde/completion/ClassInfo.java	/^  static StringBuffer listClasses(Class[] classes) {$/;"	m	class:ClassInfo	access:default	signature:(Class[] classes)
ClassInfo.listExceptions	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer listExceptions(Class[] classes) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class[] classes)
ClassInfo.listModifiers	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer listModifiers(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
ClassInfo.main	.vim/src/vjde/completion/ClassInfo.java	/^  public static void main (String[] args) {$/;"	m	class:ClassInfo	access:public	signature:(String[] args)
ClassInfo.printWithinQuotes	.vim/src/vjde/completion/ClassInfo.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:ClassInfo	file:	access:private	signature:(String item)
ClassInfo.tokenizeCtor	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer tokenizeCtor(Constructor ctor) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Constructor ctor)
ClassInfo.tokenizeField	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer tokenizeField(Field field) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Field field)
ClassInfo.tokenizeMethod	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer tokenizeMethod(Method method) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Method method)
ClassPathDir	.vim/src/vjde/completion/ClassPathDir.java	/^    ClassPathDir (File directory) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory)
ClassPathDir	.vim/src/vjde/completion/ClassPathDir.java	/^class ClassPathDir extends ClassPathEntry {$/;"	c	inherits:ClassPathEntry
ClassPathDir.ClassPathDir	.vim/src/vjde/completion/ClassPathDir.java	/^    ClassPathDir (File directory) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory)
ClassPathDir.addRecursively	.vim/src/vjde/completion/ClassPathDir.java	/^    void addRecursively(File directory, File rootDir) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory, File rootDir)
ClassPathDir.directory	.vim/src/vjde/completion/ClassPathDir.java	/^    private File directory;$/;"	f	class:ClassPathDir	file:	access:private
ClassPathDir.load	.vim/src/vjde/completion/ClassPathDir.java	/^    void load() {$/;"	m	class:ClassPathDir	access:default	signature:()
ClassPathDir.toString	.vim/src/vjde/completion/ClassPathDir.java	/^    public String toString() {$/;"	m	class:ClassPathDir	access:public	signature:()
ClassPathEntry	.vim/src/vjde/completion/ClassPathEntry.java	/^    ClassPathEntry () {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry	.vim/src/vjde/completion/ClassPathEntry.java	/^abstract class ClassPathEntry {$/;"	c
ClassPathEntry.ClassPathEntry	.vim/src/vjde/completion/ClassPathEntry.java	/^    ClassPathEntry () {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.addClass	.vim/src/vjde/completion/ClassPathEntry.java	/^    protected void addClass(String qualifiedName) {$/;"	m	class:ClassPathEntry	access:protected	signature:(String qualifiedName)
ClassPathEntry.clear	.vim/src/vjde/completion/ClassPathEntry.java	/^    void clear() {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.entryMap	.vim/src/vjde/completion/ClassPathEntry.java	/^    private static Map entryMap = new HashMap();$/;"	f	class:ClassPathEntry	file:	access:private
ClassPathEntry.getClassNames	.vim/src/vjde/completion/ClassPathEntry.java	/^    List getClassNames(String unqualifiedName)$/;"	m	class:ClassPathEntry	access:default	signature:(String unqualifiedName)
ClassPathEntry.instanceForEntry	.vim/src/vjde/completion/ClassPathEntry.java	/^    static ClassPathEntry instanceForEntry(File resource)$/;"	m	class:ClassPathEntry	access:default	signature:(File resource)
ClassPathEntry.isLoaded	.vim/src/vjde/completion/ClassPathEntry.java	/^    public boolean isLoaded() {$/;"	m	class:ClassPathEntry	access:public	signature:()
ClassPathEntry.load	.vim/src/vjde/completion/ClassPathEntry.java	/^    abstract void load() throws IOException;$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.loaded	.vim/src/vjde/completion/ClassPathEntry.java	/^    protected boolean loaded = false;$/;"	f	class:ClassPathEntry	access:protected
ClassPathEntry.nameToClassMap	.vim/src/vjde/completion/ClassPathEntry.java	/^    protected MultiValueMap nameToClassMap = new MultiValueMap();$/;"	f	class:ClassPathEntry	access:protected
ClassPathEntry.reload	.vim/src/vjde/completion/ClassPathEntry.java	/^    void reload() throws IOException {$/;"	m	class:ClassPathEntry	access:default	signature:()
ClassPathEntry.setLoaded	.vim/src/vjde/completion/ClassPathEntry.java	/^    public void setLoaded(boolean loaded) {$/;"	m	class:ClassPathEntry	access:public	signature:(boolean loaded)
ClassPathZip	.vim/src/vjde/completion/ClassPathZip.java	/^    ClassPathZip (File zipOrJar) {$/;"	m	class:ClassPathZip	access:default	signature:(File zipOrJar)
ClassPathZip	.vim/src/vjde/completion/ClassPathZip.java	/^class ClassPathZip extends ClassPathEntry {$/;"	c	inherits:ClassPathEntry
ClassPathZip.ClassPathZip	.vim/src/vjde/completion/ClassPathZip.java	/^    ClassPathZip (File zipOrJar) {$/;"	m	class:ClassPathZip	access:default	signature:(File zipOrJar)
ClassPathZip.load	.vim/src/vjde/completion/ClassPathZip.java	/^    void load() throws IOException {$/;"	m	class:ClassPathZip	access:default	signature:()
ClassPathZip.toString	.vim/src/vjde/completion/ClassPathZip.java	/^    public String toString() {$/;"	m	class:ClassPathZip	access:public	signature:()
ClassPathZip.zipOrJar	.vim/src/vjde/completion/ClassPathZip.java	/^    private File zipOrJar;$/;"	f	class:ClassPathZip	file:	access:private
ClassesByName	.vim/src/vjde/completion/ClassesByName.java	/^public class ClassesByName {$/;"	c
ClassesByName.main	.vim/src/vjde/completion/ClassesByName.java	/^	public static void main(String[] args) {$/;"	m	class:ClassesByName	access:public	signature:(String[] args)
CleanExtraSpaces	.vim_runtime/vimrcs/basic.vim	/^fun! CleanExtraSpaces()$/;"	f
Cleanup	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Cleanup()$/;"	f
ClearAllCtrlPCaches	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCtrlPCache	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	.vim_runtime/sources_non_forked/ale/autoload/ale/floating_preview.vim	/^function! s:Close() abort$/;"	f
Close	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Close()$/;"	f
Close	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
Close	.vim_runtime/sources_non_forked/vim-snipmate/ftplugin/html_snip_helper.vim	/^fun! Close() abort$/;"	f
CloseCustomFuncs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CloseCustomFuncs()$/;"	f
ClosePreview	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
ClosePreview	.vim/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CloseTagFun	.vim/ftplugin/xml.vim	/^fun! s:CloseTagFun()	$/;"	f
CloseWindowIfNeeded	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! s:CloseWindowIfNeeded(buffer) abort$/;"	f
ClosingBracketOnEmptyLine	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
ClosingHeredocDelimiter	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
CmdLine	.vim_runtime/vimrcs/basic.vim	/^function! CmdLine(str)$/;"	f
CmpPatterns	.vim_runtime/sources_non_forked/ale/autoload/ale/pattern_options.vim	/^function! s:CmpPatterns(left_item, right_item) abort$/;"	f
Cnew	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=+ Cnew call cargo#new(<q-args>)$/;"	c
CodeComplete	.vim/plugin/code_complete.vim	/^function! CodeComplete()$/;"	f
CodeCompleteStart	.vim/plugin/code_complete.vim	/^function! CodeCompleteStart()$/;"	f
CodeCompleteStop	.vim/plugin/code_complete.vim	/^function! CodeCompleteStop()$/;"	f
CoffeeBufNew	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeScriptFold	.vim_runtime/vimrcs/filetypes.vim	/^function! CoffeeScriptFold()$/;"	f
CoffeeUpdateMakePrg	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
ColoredText	.vim/src/lex.yy.c	/^void ColoredText(int r , int g, int b ,char *p , int l) ;$/;"	p	file:	signature:(int r , int g, int b ,char *p , int l)
ColoredText	.vim/src/lex.yy.c	/^void ColoredText(int r , int g, int b ,char *p , int l) {$/;"	f	signature:(int r , int g, int b ,char *p , int l)
CommandLineCompletion	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommandLineCompletion	.vim/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommentTag	.vim/ftplugin/xml.vim	/^fun! s:CommentTag()$/;"	f
Commentary	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
CommitInteractive	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, options, patch) abort$/;"	f
CommitSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
CompareAge	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CompareAge(mine, theirs) abort$/;"	f
CompareBufferNrByMRU	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! s:CompareBufferNrByMRU(a, b) "{{{3$/;"	f
CompareBuffernameByBasename	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! s:CompareBuffernameByBasename(a, b) "{{{3$/;"	f
CompileRun	.vim_runtime/vimrcs/extended.vim	/^func! CompileRun()$/;"	f
CompilerSet	.vim/compiler/javac_ex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/rust.vim/compiler/cargo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/rust.vim/compiler/rustc.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/typescript-vim/compiler/typescript.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/vim-javascript/compiler/eslint.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/vim-ruby/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.vim_runtime/sources_non_forked/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompletableSubcommands	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletableSubcommands(dir) abort$/;"	f
Complete	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:Complete(A,L,P)$/;"	f
CompleteArgs	.vim_runtime/sources_non_forked/gist-vim/plugin/gist.vim	/^function! s:CompleteArgs(arg_lead,cmdline,cursor_pos)$/;"	f
CompleteArgs	.vim_runtime/sources_non_forked/vim-gist/plugin/gist.vim	/^function! s:CompleteArgs(arg_lead,cmdline,cursor_pos)$/;"	f
CompleteHeads	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteHeads(dir) abort$/;"	f
CompleteRemote	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P, ...) abort$/;"	f
CompleteRevision	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P, ...) abort$/;"	f
CompleteSub	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
CompleteTabularizeCommand	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
Completion	.vim/src/vjde/completion/Completion.java	/^public class Completion {$/;"	c
Completion.COMMA	.vim/src/vjde/completion/Completion.java	/^  public static final String COMMA = ",";$/;"	f	class:Completion	access:public
Completion.DEFAULT	.vim/src/vjde/completion/Completion.java	/^  public static final int DEFAULT   = 2;$/;"	f	class:Completion	access:public
Completion.DOUBLE_QUOTE	.vim/src/vjde/completion/Completion.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:Completion	access:public
Completion.END_PAREN	.vim/src/vjde/completion/Completion.java	/^  public static final String END_PAREN = "]";$/;"	f	class:Completion	access:public
Completion.LIST	.vim/src/vjde/completion/Completion.java	/^  public static final String LIST = "";$/;"	f	class:Completion	access:public
Completion.NIL	.vim/src/vjde/completion/Completion.java	/^  public static final String NIL = "[]";$/;"	f	class:Completion	access:public
Completion.NL	.vim/src/vjde/completion/Completion.java	/^  public static final String NL = "\\n";$/;"	f	class:Completion	access:public
Completion.PRIVATE	.vim/src/vjde/completion/Completion.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:Completion	access:public
Completion.PROTECTED	.vim/src/vjde/completion/Completion.java	/^  public static final int PROTECTED = 1;$/;"	f	class:Completion	access:public
Completion.PUBLIC	.vim/src/vjde/completion/Completion.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:Completion	access:public
Completion.SPACE	.vim/src/vjde/completion/Completion.java	/^  public static final String SPACE = " ";$/;"	f	class:Completion	access:public
Completion.START_LIST	.vim/src/vjde/completion/Completion.java	/^  public static final String START_LIST;$/;"	f	class:Completion	access:public
Completion.START_PAREN	.vim/src/vjde/completion/Completion.java	/^  public static final String START_PAREN = "[";$/;"	f	class:Completion	access:public
Completion.T	.vim/src/vjde/completion/Completion.java	/^  public static final String T = "t";$/;"	f	class:Completion	access:public
Completion.className	.vim/src/vjde/completion/Completion.java	/^  static String className(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
Completion.componentName	.vim/src/vjde/completion/Completion.java	/^  static String componentName(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
Completion.getClass	.vim/src/vjde/completion/Completion.java	/^  private static Class getClass(DynamicClassLoader dcl,String path,String name,String[] imports) {$/;"	m	class:Completion	file:	access:private	signature:(DynamicClassLoader dcl,String path,String name,String[] imports)
Completion.getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className) {$/;"	m	class:Completion	access:public	signature:(String path,String className)
Completion.getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className, int level) {$/;"	m	class:Completion	access:public	signature:(String path,String className, int level)
Completion.getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports)
Completion.getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports,int level)
Completion.getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports)
Completion.getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports,int level) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports,int level)
Completion.isAccessible	.vim/src/vjde/completion/Completion.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:Completion	file:	access:private	signature:(int modifiers, int level)
Completion.isAncestorOf	.vim/src/vjde/completion/Completion.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:Completion	access:public	signature:(String ancestor, String child)
Completion.listClassArray	.vim/src/vjde/completion/Completion.java	/^  static String listClassArray(Class[] classes) {$/;"	m	class:Completion	access:default	signature:(Class[] classes)
Completion.listClassInfo	.vim/src/vjde/completion/Completion.java	/^  private static void listClassInfo(Class c, int level, StringBuffer sb) {$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.listConstructors	.vim/src/vjde/completion/Completion.java	/^  private static void listConstructors(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.main	.vim/src/vjde/completion/Completion.java	/^  public static void main (String[] args) {$/;"	m	class:Completion	access:public	signature:(String[] args)
Completion.printClass	.vim/src/vjde/completion/Completion.java	/^  private static String printClass(String name) {$/;"	m	class:Completion	file:	access:private	signature:(String name)
Completion.printConstructor	.vim/src/vjde/completion/Completion.java	/^  private static String printConstructor(String name, Class[] params) {$/;"	m	class:Completion	file:	access:private	signature:(String name, Class[] params)
Completion.printExceptions	.vim/src/vjde/completion/Completion.java	/^  private static String printExceptions(Class[] exceptions) {$/;"	m	class:Completion	file:	access:private	signature:(Class[] exceptions)
Completion.printField	.vim/src/vjde/completion/Completion.java	/^   private static String printField(String leader,String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String leader,String name, String type)
Completion.printField	.vim/src/vjde/completion/Completion.java	/^  private static String printField(String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String name, String type)
Completion.printMethod	.vim/src/vjde/completion/Completion.java	/^  private static String printMethod(String name,$/;"	m	class:Completion	file:	access:private	signature:(String name, String returnType, Class[] args)
Completion.printWithinQuotes	.vim/src/vjde/completion/Completion.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:Completion	file:	access:private	signature:(String item)
Completion.recursiveListFields	.vim/src/vjde/completion/Completion.java	/^  private static void recursiveListFields(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.recursiveListInnerClasses	.vim/src/vjde/completion/Completion.java	/^  private static void recursiveListInnerClasses(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
Completion.recursiveListMethods	.vim/src/vjde/completion/Completion.java	/^  private static void recursiveListMethods(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
CompletionMode	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:CompletionMode() " {{{$/;"	f
CompletionReset	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
CompletionReset	.vim/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
CompletionStillValid	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:CompletionStillValid(request_id) abort$/;"	f
Config	rainbow/config.h	/^class Config {$/;"	c	namespace:rainbow
ConfigTimestamps	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
ConfigVar	rainbow/config.h	/^    ConfigVar(const std::string& name$/;"	f	class:rainbow::ConfigVar	access:public	signature:(const std::string& name , const T& default_value , const std::string& description = ”)
ConfigVar	rainbow/config.h	/^class ConfigVar : public ConfigVarBase {$/;"	c	namespace:rainbow	inherits:ConfigVarBase
ConfigVarBase	rainbow/config.h	/^    ConfigVarBase(const std::string& name, const std::string& description = "") $/;"	f	class:rainbow::ConfigVarBase	access:public	signature:(const std::string& name, const std::string& description = ”)
ConfigVarBase	rainbow/config.h	/^class ConfigVarBase {$/;"	c	namespace:rainbow
ConfigVarMap	rainbow/config.h	/^    typedef std::unordered_map<std::string, ConfigVarBase::ptr> ConfigVarMap;$/;"	t	class:rainbow::Config	access:public
ContainingCommit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
ContextCompletion	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextCompletion	.vim/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextDiscover	.vim/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextText	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
ContextText	.vim/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
ContinuedHangingOperator	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
ContinuedLine	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
Continues	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:Continues()$/;"	f
ConvertLanguageName	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! s:ConvertLanguageName(language) abort$/;"	f
CountHelper	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! s:CountHelper() "{{{3$/;"	f
Cpublish	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cpublish call cargo#publish(<q-args>)$/;"	c
Create	.vim_runtime/sources_non_forked/ale/autoload/ale/floating_preview.vim	/^function! s:Create(options) abort$/;"	f
CreateCountDict	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! s:CreateCountDict() abort$/;"	f
CreateHelp	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:CreateHelp()$/;"	f
CreateNewFile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
CreateTSServerMessageData	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! s:CreateTSServerMessageData(message) abort$/;"	f
CreateTabTreeVCS	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
Creator.BufNamePrefix	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
Crun	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Crun call cargo#run(<q-args>)$/;"	c
Cruntarget	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cruntarget call cargo#runtarget(<q-args>)$/;"	c
Csearch	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Csearch  call cargo#search(<q-args>)$/;"	c
Ctest	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Ctest call cargo#test(<q-args>)$/;"	c
CtrlP	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir -bang CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init('buf')$/;"	c
CtrlPChange	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init('fil', { 'mode': 'c' })$/;"	c
CtrlPCurWD	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init('fil', { 'mode': '' })$/;"	c
CtrlPDir	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init('mru', { 'dir': <q-args> })$/;"	c
CtrlPMixed	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init('fil', { 'mode': 'r' })$/;"	c
CtrlPTag	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
Cupdate	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^command! -nargs=* Cupdate call cargo#update(<q-args>)$/;"	c
CurTypeName	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CurTypeName()$/;"	f
CurrentFileDir	.vim_runtime/vimrcs/extended.vim	/^func! CurrentFileDir(cmd)$/;"	f
Cursor.column	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.column() dict$/;"	f
Cursor.line	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.line() dict$/;"	f
Cursor.move	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.move(line, column) dict$/;"	f
Cursor.new	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.new(position)$/;"	f
Cursor.remove_visual_selection	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.remove_visual_selection() dict$/;"	f
Cursor.restore_unnamed_register	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.restore_unnamed_register() dict$/;"	f
Cursor.save_unnamed_register	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.save_unnamed_register() dict$/;"	f
Cursor.update_highlight	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_highlight() dict$/;"	f
Cursor.update_line_length	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_line_length() dict$/;"	f
Cursor.update_position	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_position(pos) dict$/;"	f
Cursor.update_visual_selection	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_visual_selection(region) dict$/;"	f
CursorHasGroup	.vim_runtime/sources_non_forked/vim-ruby/spec/vim/plugin/syntax_test.vim	/^function! s:CursorHasGroup(group) abort$/;"	f
CursorManager.add	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.add(pos, ...) dict$/;"	f
CursorManager.debug	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.debug() dict$/;"	f
CursorManager.delete_current	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.delete_current() dict$/;"	f
CursorManager.get	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get(i) dict$/;"	f
CursorManager.get_current	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get_current() dict$/;"	f
CursorManager.initialize	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.initialize() dict$/;"	f
CursorManager.is_empty	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.is_empty() dict$/;"	f
CursorManager.loop_done	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.loop_done() dict$/;"	f
CursorManager.new	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.new()$/;"	f
CursorManager.next	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.next() dict$/;"	f
CursorManager.reapply_visual_selection	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reapply_visual_selection() dict$/;"	f
CursorManager.remove_highlight	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.remove_highlight(hi_id) dict$/;"	f
CursorManager.reposition_all_within_region	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reposition_all_within_region(start) dict$/;"	f
CursorManager.reset	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reset(restore_view, restore_setting, ...) dict$/;"	f
CursorManager.restore_user_settings	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.restore_user_settings() dict$/;"	f
CursorManager.size	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.size() dict$/;"	f
CursorManager.start_loop	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.start_loop() dict$/;"	f
CursorManager.update_current	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.update_current() dict$/;"	f
Custom2	.vim/bundle/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom2	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom2	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom3	.vim/bundle/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
Custom3	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
Custom3	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
CustomizedTabLine	.vim_runtime/sources_forked/set_tabline/plugin/set_tabline.vim	/^function! CustomizedTabLine()$/;"	f
DEBUG	rainbow/log.h	/^        DEBUG = 1,$/;"	e	enum:rainbow::LogLevel::Level
DEFAULT	.vim/src/vjde/completion/Completion.java	/^  public static final int DEFAULT   = 2;$/;"	f	class:Completion	access:public
DEFINES	Makefile	/^DEFINES := -lyaml-cpp$/;"	m
DOCKER_IMAGE	.vim_runtime/sources_non_forked/vim-python-pep8-indent/Makefile	/^DOCKER_IMAGE:=$(DOCKER_REPO):$(DOCKER_TAG)$/;"	m
DOCKER_REPO	.vim_runtime/sources_non_forked/vim-python-pep8-indent/Makefile	/^DOCKER_REPO:=blueyed\/vim-python-pep8-indent-vims-for-test$/;"	m
DOCKER_TAG	.vim_runtime/sources_non_forked/vim-python-pep8-indent/Makefile	/^DOCKER_TAG:=3$/;"	m
DOC_LENGTH	.vim/src/previewwindow.cpp	13;"	d	file:
DOUBLE_QUOTE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:ClassInfo	access:public
DOUBLE_QUOTE	.vim/src/vjde/completion/Completion.java	/^  public static final String DOUBLE_QUOTE = "\\"";$/;"	f	class:Completion	access:public
DateTimeFormatItem	rainbow/log.cpp	/^    DateTimeFormatItem(const std::string& format = "%Y-%m-%d %H:%M:%s")$/;"	f	class:rainbow::DateTimeFormatItem	access:public	signature:(const std::string& format = ”)
DateTimeFormatItem	rainbow/log.cpp	/^class DateTimeFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
DeactivateBuffer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:DeactivateBuffer(remove)$/;"	f
DeclareOption	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! s:DeclareOption(name, globalPrefix, default)  " {{{$/;"	f
Deduplicate	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! s:Deduplicate(list) abort$/;"	f
DefRuby	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefaultOption	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/shfmt.vim	/^function! s:DefaultOption(buffer) abort$/;"	f
DeindentingKeyword	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
DelCData	.vim/ftplugin/xml.vim	/^fun! s:DelCData()$/;"	f
DelCDataSection	.vim/ftplugin/xml.vim	/^fun! s:DelCDataSection()$/;"	f
DelComment	.vim/ftplugin/xml.vim	/^fun! s:DelComment()$/;"	f
DelCommentSection	.vim/ftplugin/xml.vim	/^fun! s:DelCommentSection()$/;"	f
Delete	.vim/ftplugin/xml.vim	/^fun! s:Delete()$/;"	f
DeleteBuffer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:DeleteBuffer(buf, mode)$/;"	f
DeleteLines	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! s:DeleteLines(start, end) abort$/;"	f
DeleteSection	.vim/ftplugin/xml.vim	/^fun! s:DeleteSection()$/;"	f
DeleteTillSlash	.vim_runtime/vimrcs/extended.vim	/^func! DeleteTillSlash()$/;"	f
DetectCoffee	.vim_runtime/sources_non_forked/vim-coffee-script/ftdetect/coffee.vim	/^function! s:DetectCoffee()$/;"	f
DetectFileType	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:DetectFileType(type, ft)$/;"	f
DetermineExtension	.vim/plugin/a.vim	/^function! DetermineExtension(path) $/;"	f
DifftoolSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DifftoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
Dir	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
DirCheck	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
DirCommitFile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
DirRev	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
DisablePostamble	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! s:DisablePostamble() abort$/;"	f
DisableShellSlash	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:DisableShellSlash() " {{{2$/;"	f
DisplayBufferList	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:DisplayBufferList()$/;"	f
DisplayIncludeTree	.vim/autoload/omni/cpp/includes.vim	/^function! s:DisplayIncludeTree(szFilePath, indent, ...)$/;"	f
Do	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
DoAutocmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmd(cmd) abort$/;"	f
DoAutocmdChanged	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmdChanged(dir) abort$/;"	f
DoStagePushHeader	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStagePushHeader(value) abort$/;"	f
DoStageUnpushed	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
DoStageUnpushedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
DoStageUnstaged	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
DoStageUnstagedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
DoStageUntracked	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
DoStageUntrackedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
DoToggleHeadHeader	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
DoToggleHelpHeader	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHelpHeader(value) abort$/;"	f
DoTogglePushHeader	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoTogglePushHeader(value) abort$/;"	f
DoToggleStaged	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
DoToggleStagedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
DoToggleUnpulled	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
DoToggleUnpulledHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
DoToggleUnpushed	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
DoToggleUnpushedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
DoToggleUnstaged	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
DoToggleUnstagedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
DoToggleUntracked	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
DoToggleUntrackedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
DoUnstageStaged	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
DoUnstageStagedHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
DoUnstageUnpulled	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
DoUnstageUnpulledHeading	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
DoUnstageUnpushed	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
DoUnstageUnstaged	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
DoWhile	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:DoWhile()$/;"	f
Document	.vim/src/vjde/completion/Document.java	/^	public Document(String ps,String src,String cname,String m) {$/;"	m	class:Document	access:public	signature:(String ps,String src,String cname,String m)
Document	.vim/src/vjde/completion/Document.java	/^public class Document {$/;"	c
Document.Document	.vim/src/vjde/completion/Document.java	/^	public Document(String ps,String src,String cname,String m) {$/;"	m	class:Document	access:public	signature:(String ps,String src,String cname,String m)
Document.className	.vim/src/vjde/completion/Document.java	/^	String className;$/;"	f	class:Document	access:default
Document.getTags	.vim/src/vjde/completion/Document.java	/^	private String getTags(String old) {$/;"	m	class:Document	file:	access:private	signature:(String old)
Document.main	.vim/src/vjde/completion/Document.java	/^        public static void main(String[] args) {$/;"	m	class:Document	access:public	signature:(String[] args)
Document.member	.vim/src/vjde/completion/Document.java	/^	String member;$/;"	f	class:Document	access:default
Document.paths	.vim/src/vjde/completion/Document.java	/^	String paths;$/;"	f	class:Document	access:default
Document.read	.vim/src/vjde/completion/Document.java	/^	public String read() throws Exception {$/;"	m	class:Document	access:public	signature:()
Document.readFile	.vim/src/vjde/completion/Document.java	/^	private String readFile(File f) throws IOException {$/;"	m	class:Document	file:	access:private	signature:(File f)
Document.readSource	.vim/src/vjde/completion/Document.java	/^	private String readSource(File f ) throws Exception {$/;"	m	class:Document	file:	access:private	signature:(File f )
Document.src	.vim/src/vjde/completion/Document.java	/^	String src;$/;"	f	class:Document	access:default
Document.tagMaps	.vim/src/vjde/completion/Document.java	/^	static HashMap tagMaps= new HashMap();$/;"	f	class:Document	access:default
Document.useHTML	.vim/src/vjde/completion/Document.java	/^        boolean useHTML = true;$/;"	f	class:Document	access:default
DotRelative	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
DynamicClassLoader	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public DynamicClassLoader(String path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String path)
DynamicClassLoader	.vim/src/vjde/completion/DynamicClassLoader.java	/^public class DynamicClassLoader extends ClassLoader {$/;"	c	inherits:ClassLoader
DynamicClassLoader.CLASS_FILE_TYPE	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String CLASS_FILE_TYPE = "class";$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.CLASS_PATH	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String CLASS_PATH$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.DynamicClassLoader	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public DynamicClassLoader(String path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String path)
DynamicClassLoader.FILE_SEPARATOR	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String FILE_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.PACKAGE_SEPARATOR	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final char PACKAGE_SEPARATOR = '.'; $/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.PATH_SEPARATOR	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String PATH_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
DynamicClassLoader.getClass4Name	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public String[] getClass4Name(String name) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String name)
DynamicClassLoader.getClassNames	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public String[] getClassNames(String pkg_path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String pkg_path)
DynamicClassLoader.getPackageNames	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public String[] getPackageNames() {$/;"	m	class:DynamicClassLoader	access:public	signature:()
DynamicClassLoader.list4Class	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private void list4Class(String argFile,String fullname,Vector v,int length) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,String fullname,Vector v,int length)
DynamicClassLoader.listClass	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private void listClass(String argFile,Vector v) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,Vector v)
DynamicClassLoader.listDir	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private void listDir(File argFile,Vector v,String pre) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile,Vector v,String pre)
DynamicClassLoader.loadClass	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public Class loadClass(String argClassName) throws ClassNotFoundException {$/;"	m	class:DynamicClassLoader	access:public	signature:(String argClassName)
DynamicClassLoader.loadFile	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private byte[] loadFile(File argFile) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile)
DynamicClassLoader.loadFile	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private byte[] loadFile(ZipFile argFile, String argClassName) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(ZipFile argFile, String argClassName)
DynamicClassLoader.load_path	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private String load_path = null;$/;"	f	class:DynamicClassLoader	file:	access:private
DynamicClassLoader.loaded	.vim/src/vjde/completion/DynamicClassLoader.java	/^    HashMap loaded = new HashMap();$/;"	f	class:DynamicClassLoader	access:default
DynamicClassLoader.read	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private static byte[] read (InputStream is, int size) throws IOException {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(InputStream is, int size)
ECHO	.vim/src/lex.yy.c	816;"	d	file:
END_PAREN	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String END_PAREN = ")";$/;"	f	class:ClassInfo	access:public
END_PAREN	.vim/src/vjde/completion/Completion.java	/^  public static final String END_PAREN = "]";$/;"	f	class:Completion	access:public
EOB_ACT_CONTINUE_SCAN	.vim/src/lex.yy.c	104;"	d	file:
EOB_ACT_END_OF_FILE	.vim/src/lex.yy.c	105;"	d	file:
EOB_ACT_LAST_MATCH	.vim/src/lex.yy.c	106;"	d	file:
ERROR	rainbow/log.h	/^        ERROR = 4,$/;"	e	enum:rainbow::LogLevel::Level
Echo	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:Echo(message) abort$/;"	f
Echo	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/debugging.vim	/^function! s:Echo(message) abort$/;"	f
EchoCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:EchoCommand(item) abort$/;"	f
EchoCommandHistory	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:EchoCommandHistory() abort$/;"	f
EchoExec	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:EchoExec(...) abort$/;"	f
EchoExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:EchoExecutable(item) abort$/;"	f
EchoGlobalVariables	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
EchoGlobalVariables	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
EchoLSPErrorMessages	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:EchoLSPErrorMessages(all_linter_names) abort$/;"	f
EchoLinterAliases	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterAliases(all_linters) abort$/;"	f
EchoLinterVariables	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterVariables(variable_list) abort$/;"	f
EditCallback	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:EditCallback(...) "{{{3$/;"	f
EditUrlUnderCursor	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^    function s:EditUrlUnderCursor()$/;"	f
EditorConfigDisable	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigDisable call s:EditorConfigEnable(0)$/;"	c
EditorConfigEnable	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigEnable call s:EditorConfigEnable(1)$/;"	c
EditorConfigEnable	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:EditorConfigEnable(should_enable)$/;"	f
EditorConfigReload	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigReload call s:UseConfigFiles() " Reload EditorConfig files$/;"	c
ElapseFormatItem	rainbow/log.cpp	/^    ElapseFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::ElapseFormatItem	access:public	signature:(const std::string str = ”)
ElapseFormatItem	rainbow/log.cpp	/^class ElapseFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
Emit	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
EmptyInsideString	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
EmptyString	.vim/src/readtags.c	/^const char *const EmptyString = "";$/;"	v
EnableLongestEnhancement	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EnableLongestEnhancement	.vim/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EnableNoCompleteAfterReset	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:EnableNoCompleteAfterReset() " {{{$/;"	f
EnableNoCompleteAfterReset	.vim/plugin/supertab.vim	/^function! s:EnableNoCompleteAfterReset() " {{{$/;"	f
EnablePreamble	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! s:EnablePreamble() abort$/;"	f
EncodeChar	.vim_runtime/sources_non_forked/ale/autoload/ale/uri.vim	/^function! s:EncodeChar(char) abort$/;"	f
EndTag	.vim/ftplugin/xml.vim	/^fun! s:EndTag()$/;"	f
EnumWndProc	.vim/src/lex.yy.c	/^BOOL CALLBACK EnumWndProc(HWND hWnd,LPARAM lParam)$/;"	f	signature:(HWND hWnd,LPARAM lParam)
EnumWndProc	.vim/src/previewwindow.cpp	/^	BOOL CALLBACK EnumWndProc(HWND hWnd,LPARAM lParam)$/;"	f	signature:(HWND hWnd,LPARAM lParam)
EnumWndProc	.vim/src/tipswnd.c	/^BOOL CALLBACK EnumWndProc(HWND hWnd,LPARAM lParam)$/;"	f	signature:(HWND hWnd,LPARAM lParam)
EnumerateFilesByExtension	.vim/plugin/a.vim	/^function! EnumerateFilesByExtension(path, baseName, extension)$/;"	f
EnumerateFilesByExtensionInPath	.vim/plugin/a.vim	/^function! EnumerateFilesByExtensionInPath(baseName, extension, pathList, relPathBase)$/;"	f
EqualFilePaths	.vim/plugin/a.vim	/^function! <SID>EqualFilePaths(path1, path2)$/;"	f
ErrMsg	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Error	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Error(msg)$/;"	f
ErubyAtCursor	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^function! ErubyAtCursor() abort$/;"	f
EscapeMenuName	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! s:EscapeMenuName(text) abort$/;"	f
EscapeSignText	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! s:EscapeSignText(sign_text) abort$/;"	f
Event.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
Exception	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExecPath	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
ExecuteGetCodeFix	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! s:ExecuteGetCodeFix(linter, range, MenuCallback) abort$/;"	f
ExecuteRename	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! s:ExecuteRename(linter, options) abort$/;"	f
ExitCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! s:ExitCallback(buffer, line_list, Callback, data) abort$/;"	f
ExitIfSingleCandidate	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ExitIfSingleCandidate()$/;"	f
Expand	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
Expand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
ExpandAlternatePath	.vim/plugin/a.vim	/^function! <SID>ExpandAlternatePath(pathSpec, sfPath) $/;"	f
ExpandMap	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExpandMap	.vim/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExpandMap	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:ExpandMap(map)$/;"	f
ExpandTemplate	.vim/plugin/code_complete.vim	/^function! ExpandTemplate(cword)$/;"	f
ExpandVar	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
ExpandVarLegacy	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
ExpireStatus	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
ExprCol	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:ExprCol()$/;"	f
ExtendKeyMap	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:ExtendKeyMap(world, key_mode, key_handlers) "{{{3$/;"	f
ExtendTagItemToPopupItem	.vim/autoload/omni/cpp/complete.vim	/^function! s:ExtendTagItemToPopupItem(tagItem, szTypeName)$/;"	f
ExtraBrackets	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
ExtraErrorMsg	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/flow.vim	/^function! s:ExtraErrorMsg(current, new) abort$/;"	f
ExtractScopeFromTypeInfo	.vim/autoload/omni/cpp/utils.vim	/^function! s:ExtractScopeFromTypeInfo(szTypeInfo)$/;"	f
ExtractTypeInfoFromDecl	.vim/autoload/omni/cpp/items.vim	/^function! s:ExtractTypeInfoFromDecl(tokens)$/;"	f
FATAL	rainbow/log.h	/^        FATAL = 5$/;"	e	enum:rainbow::LogLevel::Level
FIELD_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int FIELD_INFO = 0;$/;"	f	class:ClassInfo	access:public
FILE_SEPARATOR	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String FILE_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
FLEX_SCANNER	.vim/src/lex.yy.c	7;"	d	file:
FiberIdFormatItem	rainbow/log.cpp	/^    FiberIdFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::FiberIdFormatItem	access:public	signature:(const std::string str = ”)
FiberIdFormatItem	rainbow/log.cpp	/^class FiberIdFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
FileIgnoreCase	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:FileIgnoreCase(for_completion) abort$/;"	f
FileLogAppender	rainbow/log.cpp	/^FileLogAppender::FileLogAppender(const std::string& name) : m_filename(name) {}$/;"	f	class:rainbow::FileLogAppender	signature:(const std::string& name)
FileLogAppender	rainbow/log.h	/^    FileLogAppender(const std::string& filename);$/;"	p	class:rainbow::FileLogAppender	access:public	signature:(const std::string& filename)
FileLogAppender	rainbow/log.h	/^class FileLogAppender : public LogAppender {$/;"	c	namespace:rainbow	inherits:LogAppender
FileNameFormatItem	rainbow/log.cpp	/^    FileNameFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::FileNameFormatItem	access:public	signature:(const std::string str = ”)
FileNameFormatItem	rainbow/log.cpp	/^class FileNameFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
Filename	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! Filename(...) abort$/;"	f
FilterClassMembers	.vim/autoload/omni/cpp/complete.vim	/^function! s:FilterClassMembers(tagPopupList, szAccessFilter)$/;"	f
FilterClassScopeMembers	.vim/autoload/omni/cpp/complete.vim	/^function! s:FilterClassScopeMembers(tagPopupList, szAccessFilter)$/;"	f
FilterEscape	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
FilterNamespaceScopeMembers	.vim/autoload/omni/cpp/complete.vim	/^function! s:FilterNamespaceScopeMembers(tagPopupList)$/;"	f
FilterOverloadedFunctions	.vim/autoload/omni/cpp/complete.vim	/^function! s:FilterOverloadedFunctions(tagPopupList)$/;"	f
FilterResult	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! s:FilterResult(buffer, obj) abort$/;"	f
FilterStaticClassMembers	.vim/autoload/omni/cpp/complete.vim	/^function! s:FilterStaticClassMembers(tagPopupList, szAccessFilter)$/;"	f
FilterString	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
FindConfig	.vim_runtime/sources_non_forked/ale/ale_linters/pug/puglint.vim	/^function! s:FindConfig(buffer) abort$/;"	f
FindContainingClass	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
FindCornerOfSyntax	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:FindCornerOfSyntax(lnum, col, step)$/;"	f
FindCornersOfSyntax	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:FindCornersOfSyntax(lnum, col)$/;"	f
FindError	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! s:FindError(buffer, line, column, end_line, end_column) abort$/;"	f
FindFileInSearchPath	.vim/plugin/a.vim	/^function! <SID>FindFileInSearchPath(fileName, pathList, relPathBase)$/;"	f
FindFileInSearchPathEx	.vim/plugin/a.vim	/^function! <SID>FindFileInSearchPathEx(fileName, pathList, relPathBase, count)$/;"	f
FindHistoryItem	.vim_runtime/sources_non_forked/ale/autoload/ale/history.vim	/^function! s:FindHistoryItem(buffer, job_id) abort$/;"	f
FindLeftOfSyntax	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:FindLeftOfSyntax(lnum, col)$/;"	f
FindNextSyntax	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:FindNextSyntax(lnum, col, name)$/;"	f
FindOrCreateBuffer	.vim/plugin/a.vim	/^function! <SID>FindOrCreateBuffer(fileName, doSplit, findSimilar)$/;"	f
FindParentVCSRoot	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
FindRightOfSyntax	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:FindRightOfSyntax(lnum, col)$/;"	f
FindSpan	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/rust.vim	/^function! s:FindSpan(buffer, span) abort$/;"	f
FindStartPositionOfCompletion	.vim/autoload/omni/cpp/complete.vim	/^function! s:FindStartPositionOfCompletion()$/;"	f
FindVimWindow	.vim/src/lex.yy.c	/^void FindVimWindow()$/;"	f
FindVimWindow	.vim/src/tipswnd.c	/^void FindVimWindow()$/;"	f
Findcomplete	.vim_runtime/autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P)$/;"	f
FixList	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! s:FixList(buffer, list) abort$/;"	f
FlagSet.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
Flake8	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! s:Flake8()  " {{{$/;"	f
Flake8	.vim_runtime/sources_non_forked/vim-flake8/ftplugin/python_flake8.vim	/^function! Flake8()$/;"	f
FoldTag	.vim/ftplugin/xml.vim	/^fun! s:FoldTag()$/;"	f
FoldTagAll	.vim/ftplugin/xml.vim	/^fun! s:FoldTagAll()$/;"	f
Foldexpr_markdown	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^    function! Foldexpr_markdown(lnum)$/;"	f
Foldtext_markdown	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^    function! Foldtext_markdown()$/;"	f
Foo	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/method_definitions_spec.rb	/^      class Foo$/;"	c
Foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        class Foo < Bar$/;"	c
ForceUpdate	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
Format	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
FormatEntry	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! s:FormatEntry(key, entry) abort$/;"	f
FormatExe	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! s:FormatExe(command, executable) abort$/;"	f
FormatFile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
FormatFilename	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! s:FormatFilename(filename, mappings, modifiers) abort$/;"	f
FormatHelp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:FormatHelp(help) "{{{3$/;"	f
FormatHelpItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:FormatHelpItem(item, fmt) "{{{3$/;"	f
FormatItem	rainbow/log.h	/^        FormatItem(const std::string& fmt = ""){};$/;"	f	class:rainbow::LogFormatter::FormatItem	access:public	signature:(const std::string& fmt = ”)
FormatItem	rainbow/log.h	/^    class FormatItem {$/;"	c	class:rainbow::LogFormatter	access:public
FormatLog	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
FormatRebase	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
FormatTag	.vim/ftplugin/xml.vim	/^fun! s:FormatTag()$/;"	f
FormatTagAll	.vim/ftplugin/xml.vim	/^fun! s:FormatTagAll()$/;"	f
FriendlyName	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
FromString	rainbow/log.cpp	/^LogLevel::Level LogLevel::FromString(const std::string& str) {$/;"	f	class:rainbow::LogLevel	signature:(const std::string& str)
FromString	rainbow/log.h	/^    static LogLevel::Level FromString(const std::string& str);$/;"	p	class:rainbow::LogLevel	access:public	signature:(const std::string& str)
FugitiveCommonDir	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveConfigGet	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGet(name, ...) abort$/;"	f
FugitiveConfigGetAll	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetAll(name, ...) abort$/;"	f
FugitiveConfigGetRegexp	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetRegexp(pattern, ...) abort$/;"	f
FugitiveDetect	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveHead	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveParse	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemoteUrl	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveResult	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveResult(...) abort$/;"	f
FugitiveStatusline	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
FunctionComplete	.vim/plugin/code_complete.vim	/^function! FunctionComplete(fun)$/;"	f
G	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^  command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)$/;"	c
GF	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GITHUB_ZIP	.vim_runtime/update_plugins.py	/^GITHUB_ZIP = "%s\/archive\/master.zip"$/;"	v
GTabularize	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^   \\ GTabularize <line1>,<line2>$/;"	c
GatherOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! s:GatherOutput(line_list, job_id, line) abort$/;"	f
Generate	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(object, ...) abort$/;"	f
GetALEProjectDir	.vim_runtime/sources_non_forked/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! s:GetALEProjectDir(buffer) abort$/;"	f
GetAccessFilter	.vim/autoload/omni/cpp/complete.vim	/^function! s:GetAccessFilter(szFilter, szAccessFilter)$/;"	f
GetAlarm	.vim_runtime/sources_non_forked/ale/ale_linters/prolog/swipl.vim	/^function! s:GetAlarm(buffer, timeout) abort$/;"	f
GetAliasedFiletype	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! s:GetAliasedFiletype(original_filetype) abort$/;"	f
GetAllUsingNamespaceMapFromCurrentBuffer	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromCurrentBuffer(...)$/;"	f
GetAllUsingNamespaceMapFromFile	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromFile(szFilePath, ...)$/;"	f
GetArguments	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! s:GetArguments(json_item) abort$/;"	f
GetBufferInfo	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:GetBufferInfo(bufnr)$/;"	f
GetBufferRubyClass	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCachedExtensionMap	.vim_runtime/sources_non_forked/ale/autoload/ale/filetypes.vim	/^function! s:GetCachedExtensionMap() abort$/;"	f
GetCallbacks	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! s:GetCallbacks(buffer, fixing_flag, fixers) abort$/;"	f
GetClassScopeAtCursor	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetClassScopeAtCursor()$/;"	f
GetCmd	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^function! s:GetCmd(vcstype, cmd)$/;"	f
GetCodeActions	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! s:GetCodeActions(linter, options) abort$/;"	f
GetCoffeeHtmlIndent	.vim_runtime/sources_non_forked/vim-coffee-script/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/elvis.vim	/^function! s:GetCommand(buffer) abort$/;"	f
GetConfig	.vim_runtime/sources_non_forked/ale/ale_linters/java/checkstyle.vim	/^function! s:GetConfig(buffer, config) abort$/;"	f
GetCounts	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! s:GetCounts(buffer) abort$/;"	f
GetDUBCommand	.vim_runtime/sources_non_forked/ale/ale_linters/d/dmd.vim	/^function! s:GetDUBCommand(buffer) abort$/;"	f
GetDatas	rainbow/config.h	/^    static ConfigVarMap& GetDatas() {$/;"	f	class:rainbow::Config	access:private	signature:()
GetDefaultPolicy	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetDetails	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/flow.vim	/^function! s:GetDetails(error) abort$/;"	f
GetDir	.vim_runtime/sources_non_forked/ale/ale_linters/python/vulture.vim	/^function! s:GetDir(buffer) abort$/;"	f
GetDocLocations	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:GetDocLocations() "{{{$/;"	f
GetErrMsg	.vim_runtime/sources_non_forked/ale/ale_linters/prolog/swipl.vim	/^function! s:GetErrMsg(i, lines, text) abort$/;"	f
GetErubyIndent	.vim_runtime/sources_non_forked/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/sml.vim	/^function! s:GetExecutable(buffer, source) abort$/;"	f
GetFiberId	rainbow/util.cpp	/^uint32_t GetFiberId() {$/;"	f	namespace:rainbow	signature:()
GetFiberId	rainbow/util.h	/^uint32_t GetFiberId();$/;"	p	namespace:rainbow	signature:()
GetFileName	.vim/plugin/code_complete.vim	/^function! GetFileName()$/;"	f
GetFilenames	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:GetFilenames(path, filename) " {{{1$/;"	f
GetFiletypeValue	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:GetFiletypeValue(map, filetype) abort$/;"	f
GetFirstProblems	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! s:GetFirstProblems(buffer) abort$/;"	f
GetHeaderLevel	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:GetHeaderLevel(...)$/;"	f
GetHeaderLineNum	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:GetHeaderLineNum(...)$/;"	f
GetHeaderList	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:GetHeaderList()$/;"	f
GetHelpStatus	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:GetHelpStatus()$/;"	f
GetIncludeListFromCurrentBuffer	.vim/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromCurrentBuffer()$/;"	f
GetIncludeListFromFile	.vim/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromFile(szFilePath, bUpdate) $/;"	f
GetInstance	rainbow/singleton.h	/^    static T* GetInstance() {$/;"	f	class:rainbow::Singleton	access:public	signature:()
GetInstance	rainbow/singleton.h	/^    static std::shared_ptr<T> GetInstance() {$/;"	f	class:rainbow::Singletonptr	access:public	signature:()
GetJSONLines	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/flow.vim	/^function! s:GetJSONLines(lines) abort$/;"	f
GetJavascriptIndent	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetLevelOfHeaderAtLine	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:GetLevelOfHeaderAtLine(linenum)$/;"	f
GetLintFileSlots	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:GetLintFileSlots(buffer, linters) abort$/;"	f
GetLintFileValues	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:GetLintFileValues(slots, Callback) abort$/;"	f
GetLinter	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! s:GetLinter() abort$/;"	f
GetLinterNames	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! s:GetLinterNames(original_filetype) abort$/;"	f
GetLinterVariables	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! s:GetLinterVariables(filetype, exclude_linter_names) abort$/;"	f
GetLitCoffeeIndent	.vim_runtime/sources_non_forked/vim-coffee-script/indent/litcoffee.vim	/^function GetLitCoffeeIndent()$/;"	f
GetLookupFromCompileCommandsFile	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! s:GetLookupFromCompileCommandsFile(compile_commands_file) abort$/;"	f
GetMSL	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
GetMakePrg	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakoIndent	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^function GetMakoIndent()$/;"	f
GetMarkdownIndent	.vim_runtime/sources_non_forked/vim-markdown/indent/markdown.vim	/^function GetMarkdownIndent()$/;"	f
GetModdedChar	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:GetModdedChar(world) "{{{3$/;"	f
GetName	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	p	signature:()
GetName	rainbow/thread.cpp	/^const std::string& Thread::GetName() {$/;"	f	class:rainbow::Thread	signature:()
GetName	rainbow/thread.h	/^    static const std::string& GetName();$/;"	p	class:rainbow::Thread	access:public	signature:()
GetNamespaceAliasListFromLine	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasListFromLine(szLine)$/;"	f
GetNamespaceAliasMap	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasMap()$/;"	f
GetNamespaceListFromLine	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceListFromLine(szLine)$/;"	f
GetNextChar	.vim/src/lex.yy.c	/^int GetNextChar(char* buf,int max_size) {$/;"	f	signature:(char* buf,int max_size)
GetNextChar	.vim/src/lex.yy.c	/^int GetNextChar(char* buf,int max_size);$/;"	p	file:	signature:(char* buf,int max_size)
GetNextHeaderLineNumberAtLevel	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:GetNextHeaderLineNumberAtLevel(level, ...)$/;"	f
GetNthElement	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! s:GetNthElement(n, lists, default) "{{{3$/;"	f
GetNthItemFromList	.vim/plugin/a.vim	/^function! <SID>GetNthItemFromList(list, n) $/;"	f
GetPair	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,...)$/;"	f
GetPair	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,time,...)$/;"	f
GetPair	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
GetParentHeaderLineNumber	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:GetParentHeaderLineNumber(...)$/;"	f
GetPrevNormalLine	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetPreviousHeaderLineNumberAtLevel	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)$/;"	f
GetPugIndent	.vim_runtime/sources_non_forked/vim-pug/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetPythonPEPIndent	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetRubyIndent	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
GetRubyVarType	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetRustIndent	.vim_runtime/sources_non_forked/rust.vim/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
GetScopes	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:GetScopes() abort$/;"	f
GetSnippetIndent	.vim_runtime/sources_non_forked/vim-snipmate/indent/snippets.vim	/^function! GetSnippetIndent()$/;"	f
GetStopPositionForLocalSearch	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetStopPositionForLocalSearch()$/;"	f
GetSymbol	.vim/autoload/omni/cpp/items.vim	/^function! s:GetSymbol(tokens)$/;"	f
GetTabNbr	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:GetTabNbr(bufNbr)$/;"	f
GetTagName	.vim/ftplugin/xml.vim	/^fun! s:GetTagName(from)$/;"	f
GetTagOfSameScope	.vim/autoload/omni/cpp/utils.vim	/^function! s:GetTagOfSameScope(listTags, szScopeToMatch)$/;"	f
GetThis	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.cpp	/^&ø/;"	f	signature:()
GetThis	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	p	signature:()
GetThis	rainbow/thread.cpp	/^Thread* Thread::GetThis() {$/;"	f	class:rainbow::Thread	signature:()
GetThis	rainbow/thread.h	/^    static Thread* GetThis();$/;"	p	class:rainbow::Thread	access:public	signature:()
GetThreadId	rainbow/util.cpp	/^pid_t GetThreadId() {$/;"	f	namespace:rainbow	signature:()
GetThreadId	rainbow/util.h	/^pid_t GetThreadId();$/;"	p	namespace:rainbow	signature:()
GetTrimmedLine	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetTypeInfoOfReturnedType	.vim/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfReturnedType(contextStack, szFunctionName)$/;"	f
GetTypeInfoOfVariable	.vim/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfVariable(contextStack, szVariable, bSearchDecl)$/;"	f
GetTypescriptIndent	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetUsingNamespaceListFromMap	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:GetUsingNamespaceListFromMap(namespaceMap, ...)$/;"	f
GetValueType	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! s:GetValueType(def) abort "{{{3$/;"	f
GetVars	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:GetVars()$/;"	f
GetVersion	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
GetVersion	.vim_runtime/sources_non_forked/ale/autoload/ale/semver.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
GetWinNbr	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:GetWinNbr(tabNbr, bufNbr)$/;"	f
Gist	.vim_runtime/sources_non_forked/gist-vim/plugin/gist.vim	/^command! -nargs=? -range=% -bang -complete=customlist,s:CompleteArgs Gist :call gist#Gist(<count>, "<bang>", <line1>, <line2>, <f-args>)$/;"	c
Gist	.vim_runtime/sources_non_forked/vim-gist/plugin/gist.vim	/^command! -nargs=? -range=% -bang -complete=customlist,s:CompleteArgs Gist :call gist#Gist(<count>, "<bang>", <line1>, <line2>, <f-args>)$/;"	c
GistDelete	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistDelete(gistid) abort$/;"	f
GistDelete	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistDelete(gistid) abort$/;"	f
GistDetectFiletype	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistDetectFiletype(gistid) abort$/;"	f
GistDetectFiletype	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistDetectFiletype(gistid) abort$/;"	f
GistGet	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistGet(gistid, clipboard) abort$/;"	f
GistGet	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistGet(gistid, clipboard) abort$/;"	f
GistGetAuthHeader	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistGetAuthHeader() abort$/;"	f
GistGetAuthHeader	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistGetAuthHeader() abort$/;"	f
GistGetFileName	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistGetFileName(gistid) abort$/;"	f
GistGetFileName	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistGetFileName(gistid) abort$/;"	f
GistList	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistList(gistls, page) abort$/;"	f
GistList	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistList(gistls, page) abort$/;"	f
GistListAction	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistListAction(mode) abort$/;"	f
GistListAction	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistListAction(mode) abort$/;"	f
GistPost	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistPost(content, private, desc, anonymous) abort$/;"	f
GistPost	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistPost(content, private, desc, anonymous) abort$/;"	f
GistPostBuffers	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistPostBuffers(private, desc, anonymous) abort$/;"	f
GistPostBuffers	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistPostBuffers(private, desc, anonymous) abort$/;"	f
GistUpdate	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistUpdate(content, gistid, gistnm, desc) abort$/;"	f
GistUpdate	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistUpdate(content, gistid, gistnm, desc) abort$/;"	f
GistWrite	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:GistWrite(fname) abort$/;"	f
GistWrite	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:GistWrite(fname) abort$/;"	f
Git	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)$/;"	c
GitCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:GitCmd() abort$/;"	f
GitGutter	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterBufferDisable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferDisable call gitgutter#buffer_disable()$/;"	c
GitGutterBufferEnable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferEnable  call gitgutter#buffer_enable()$/;"	c
GitGutterBufferToggle	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferToggle  call gitgutter#buffer_toggle()$/;"	c
GitGutterCursorHold	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterCursorHold(timer)$/;"	f
GitGutterDebug	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterFold	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterFold call gitgutter#fold#toggle()$/;"	c
GitGutterGetHunkSummary	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterLineNrHighlightsDisable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsDisable call gitgutter#highlight#linenr_disable()$/;"	c
GitGutterLineNrHighlightsEnable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsEnable  call gitgutter#highlight#linenr_enable()$/;"	c
GitGutterLineNrHighlightsToggle	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsToggle  call gitgutter#highlight#linenr_toggle()$/;"	c
GitGutterNextHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterQuickFix	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFix call gitgutter#quickfix()$/;"	c
GitGutterSignsDisable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -range=% GitGutterStageHunk call gitgutter#hunk#stage(<line1>,<line2>)$/;"	c
GitGutterToggle	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GitShellCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:GitShellCmd() abort$/;"	f
Glob	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^	function! s:Glob(path, expr)$/;"	f
GlobComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern, ...) abort$/;"	f
GlobPath	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^	fu! s:GlobPath(dirs, depth)$/;"	f
GoToLSPDefinition	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! s:GoToLSPDefinition(linter, options, capability) abort$/;"	f
GotoFile	.vim_runtime/sources_non_forked/open_file_under_cursor.vim/plugin/open_file_under_cursor.vim	/^function! GotoFile(w)$/;"	f
Goyo	.vim_runtime/sources_non_forked/goyo.vim/plugin/goyo.vim	/^command! -nargs=? -bar -bang Goyo call goyo#execute(<bang>0, <q-args>)$/;"	c
GrepParseLine	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(prefix, name_only, dir, line) abort$/;"	f
GrepSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
Grep_Skip_Dirs	.vim_runtime/vimrcs/plugins_config.vim	/^let Grep_Skip_Dirs = 'RCS CVS SCCS .svn generated'$/;"	v
GroupCmd	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! s:GroupCmd() abort$/;"	f
GroupLoclistItems	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! s:GroupLoclistItems(buffer, loclist) abort$/;"	f
GruvboxHlsHideCursor	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
HL	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
HandleESLintOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! s:HandleESLintOutput(buffer, lines, type) abort$/;"	f
HandleExit	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:HandleExit(job_info, buffer, output, data) abort$/;"	f
HandleExit	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! s:HandleExit(job_info, buffer, job_output, data) abort$/;"	f
HandleLSPDiagnostics	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPDiagnostics(conn_id, response) abort$/;"	f
HandleLSPErrorMessage	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPErrorMessage(linter_name, response) abort$/;"	f
HandleLSPResponseToCustomRequests	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPResponseToCustomRequests(conn_id, response) abort$/;"	f
HandleSyntaxError	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ruby.vim	/^function! s:HandleSyntaxError(buffer, lines) abort$/;"	f
HandleTSServerDiagnostics	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleTSServerDiagnostics(response, error_type) abort$/;"	f
HandleTextObjectMapping	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^function! <Sid>HandleTextObjectMapping(inner, incbelow, vis, range)$/;"	f
HandleUnixFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/unix.vim	/^function! s:HandleUnixFormat(buffer, lines, type) abort$/;"	f
HasATagFileOrTagEnvChanged	.vim/autoload/omni/cpp/complete.vim	/^function! s:HasATagFileOrTagEnvChanged()$/;"	f
HasOpt	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
HasPaste	.vim_runtime/vimrcs/basic.vim	/^function! HasPaste()$/;"	f
HasTagEnvChanged	.vim/autoload/omni/cpp/complete.vim	/^function! s:HasTagEnvChanged()$/;"	f
HeaderDecrease	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)$/;"	c
HeaderDecrease	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:HeaderDecrease(line1, line2, ...)$/;"	f
HeaderIncrease	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)$/;"	c
Helptags	.vim_runtime/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiLink	.vim_runtime/sources_non_forked/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-bundle-mako/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-bundle-mako/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim_runtime/sources_non_forked/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlight	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:Highlight(args) "{{{$/;"	f
HtmlAttribCallback	.vim/ftplugin/xml.vim	/^  function HtmlAttribCallback( xml_tag )$/;"	f
HtmlHiLink	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
HtmlIndentCloseAlt	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentOpen	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentOpenAlt	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
I	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> I <NOP>$/;"	m
IH	.vim/plugin/a.vim	/^comm! -nargs=? -bang IH call AlternateOpenFileUnderCursor("n<bang>", <f-args>)$/;"	c
IHN	.vim/plugin/a.vim	/^comm! -nargs=? -bang IHN call AlternateOpenNextFile("<bang>")$/;"	c
IHS	.vim/plugin/a.vim	/^comm! -nargs=? -bang IHS call AlternateOpenFileUnderCursor("h<bang>", <f-args>)$/;"	c
IHT	.vim/plugin/a.vim	/^comm! -nargs=? -bang IHT call AlternateOpenFileUnderCursor("t<bang>", <f-args>)$/;"	c
IHV	.vim/plugin/a.vim	/^comm! -nargs=? -bang IHV call AlternateOpenFileUnderCursor("v<bang>", <f-args>)$/;"	c
INCDIR	Makefile	/^INCDIR := $(patsubst %, -I %, $(incdirs))$/;"	m
INCLUDE	Makefile	/^INCLUDE := -I\/usr\/local\/include$/;"	m
INFO	rainbow/log.h	/^        INFO = 2,$/;"	e	enum:rainbow::LogLevel::Level
INITIAL	.vim/src/lex.yy.c	689;"	d	file:
INNER_CLASS_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int INNER_CLASS_INFO = 3;$/;"	f	class:ClassInfo	access:public
Ignore	.vim_runtime/sources_non_forked/ale/ale_linters/prolog/swipl.vim	/^function! s:Ignore(item) abort$/;"	f
IgnoreFixers	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! s:IgnoreFixers(callback_list, filetype, config) abort$/;"	f
InCData	.vim/ftplugin/xml.vim	/^fun! s:InCData()$/;"	f
InComment	.vim/ftplugin/xml.vim	/^fun! s:InComment()$/;"	f
IndentAll	.vim/ftplugin/xml.vim	/^fun! s:IndentAll()$/;"	f
IndentGuidesDisable	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesDisable call s:IndentGuidesDisable()$/;"	c
IndentGuidesDisable	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesDisable()$/;"	f
IndentGuidesEnable	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesEnable  call s:IndentGuidesEnable()$/;"	c
IndentGuidesEnable	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesEnable()$/;"	f
IndentGuidesToggle	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesToggle  call s:IndentGuidesToggle()$/;"	c
IndentGuidesToggle	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesToggle()$/;"	f
IndentingKeywordInMSL	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
Init	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
Init	.vim/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
Init	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:Init(cmd) "{{{$/;"	f
Init	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:Init(world, cmd) "{{{3$/;"	f
InitBuffer	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
InitBuffer	.vim/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
InitComplete	.vim/autoload/omni/cpp/complete.vim	/^function! s:InitComplete()$/;"	f
InitCustomFuncs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:InitCustomFuncs()$/;"	f
InitVariable	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^function s:InitVariable(var, value)$/;"	f
Initialize	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Initialize()$/;"	f
Initialize	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:Initialize() " Initialize the plugin.  {{{1$/;"	f
InitializeExternalCommand	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeExternalCommand()$/;"	f
InitializeVimCore	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeVimCore()$/;"	f
InnerClass	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        class InnerClass$/;"	c	class:OuterClass
InsertNToc	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)$/;"	c
InsertSelectedItems	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:InsertSelectedItems(rv, current) "{{{3$/;"	f
InsertToc	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)$/;"	c
InsertToc	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:InsertToc(format, ...)$/;"	f
InstanceFound	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        function! InstanceFound(list)$/;"	f
Intersection	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! s:Intersection(a, b)$/;"	f
IsAssignment	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
IsBlankLine	.vim_runtime/sources_non_forked/vim-markdown/indent/markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
IsBlock	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:IsBlock()$/;"	f
IsBlock	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:IsBlock()$/;"	f
IsBoolean	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! s:IsBoolean(value) abort$/;"	f
IsBuiltin	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:IsBuiltin()$/;"	f
IsCached	.vim/autoload/omni/cpp/complete.vim	/^function! s:IsCached(cache, szKey1, szKey2)$/;"	f
IsCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! s:IsCallback(value) abort$/;"	f
IsComment	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsCommentOrString	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsConflicted	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
IsContOne	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
IsGenericFixer	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! s:IsGenericFixer(suggested_filetypes) abort$/;"	f
IsHeaderFile	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^function! s:IsHeaderFile(filename) abort$/;"	f
IsHeaderLine	.vim_runtime/sources_non_forked/vim-markdown/indent/markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
IsInClassDef	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInComment	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInComment(pos)$/;"	f
IsInCurrentTab	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:IsInCurrentTab(bufnr)$/;"	f
IsInRubyGroup	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
IsInString	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
IsInStringDelimiter	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
IsInStringOrComment	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
IsInStringOrDocumentation	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
IsInsidePythonBlock	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
IsLiStart	.vim_runtime/sources_non_forked/vim-markdown/indent/markdown.vim	/^function! s:IsLiStart(line)$/;"	f
IsMkdCode	.vim_runtime/sources_non_forked/vim-markdown/indent/markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
IsNoCompleteAfterReset	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:IsNoCompleteAfterReset() " {{{$/;"	f
IsNoCompleteAfterReset	.vim/plugin/supertab.vim	/^function! s:IsNoCompleteAfterReset() " {{{$/;"	f
IsPosInClassDef	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPreviewOpen	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
IsPreviewOpen	.vim/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
IsRuleActive	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:IsRuleActive(name, config) " {{{1$/;"	f
IsSbt	.vim_runtime/sources_non_forked/ale/ale_linters/scala/fsc.vim	/^function! s:IsSbt(buffer) abort$/;"	f
IsSbt	.vim_runtime/sources_non_forked/ale/ale_linters/scala/scalac.vim	/^function! s:IsSbt(buffer) abort$/;"	f
IsString	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsSwitch	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
IsTypeInfoResolved	.vim/autoload/omni/cpp/utils.vim	/^function! s:IsTypeInfoResolved(szTypeInfo)$/;"	f
IsUnnamedType	.vim/autoload/omni/cpp/items.vim	/^function! s:IsUnnamedType(tagItem)$/;"	f
JUMP_BACK	.vim/src/readtags.c	564;"	d	file:
JavaScriptFold	.vim_runtime/vimrcs/filetypes.vim	/^function! JavaScriptFold() $/;"	f
JobOpts	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:JobOpts(cmd, env) abort$/;"	f
Join	.vim/ftplugin/xml.vim	/^fun! s:Join()$/;"	f
Jump_Back	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
Jump_Forward	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
Key	.vim/src/readtags.c	/^static const char *Key=NULL; $/;"	v	file:
KeyLoop	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Compare	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
KeyMap.Create	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
Keywordprg	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
KillHandler	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! s:KillHandler(timer) abort$/;"	f
Kind	.vim/src/readtags.c	/^static const char *Kind=NULL; $/;"	v	file:
LAck	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck          call ack#Ack('lgrep<bang>', <q-args>)$/;"	c
LAckAdd	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd       call ack#Ack('lgrepadd<bang>', <q-args>)$/;"	c
LAckHelp	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help LAckHelp      call ack#AckHelp('lgrep<bang>', <q-args>)$/;"	c
LAckWindow	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^command! -bang -nargs=*                LAckWindow    call ack#AckWindow('lgrep<bang>', <q-args>)$/;"	c
LEX	.vim/src/Makefile	/^LEX = flex -I$/;"	m
LIBS	Makefile	/^LIBS	:= -L\/usr\/local\/lib$/;"	m
LIST	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String LIST = "list";$/;"	f	class:ClassInfo	access:public
LIST	.vim/src/vjde/completion/Completion.java	/^  public static final String LIST = "";$/;"	f	class:Completion	access:public
LaunchPeepOpenViaVim	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^function s:LaunchPeepOpenViaVim()$/;"	f
LeadingOperator	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
Left	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
Level	rainbow/log.h	/^    enum Level {$/;"	g	class:rainbow::LogLevel	access:public
LevelFormatItem	rainbow/log.cpp	/^    LevelFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::LevelFormatItem	access:public	signature:(const std::string str = ”)
LevelFormatItem	rainbow/log.cpp	/^class LevelFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
LexicalCast	rainbow/config.h	/^class LexicalCast {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::list<T>, std::string> {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::map<std::string, T>, std::string> {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::set<T>, std::string> {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::list<T> > {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::map<std::string, T> > {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::set<T> > {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::unordered_map<std::string, T> > {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::unordered_set<T> > {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::vector<T> > {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::unordered_map<std::string, T>, std::string> {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::unordered_set<T>, std::string> {$/;"	c	namespace:rainbow
LexicalCast	rainbow/config.h	/^class LexicalCast<std::vector<T>, std::string> {$/;"	c	namespace:rainbow
LexicalCast	rainbow/log.cpp	/^class LexicalCast<std::set<LogDefine>, std::string> {$/;"	c	namespace:rainbow	file:
LexicalCast	rainbow/log.cpp	/^class LexicalCast<std::string, std::set<LogDefine> > {$/;"	c	namespace:rainbow	file:
LexicalCast	tests/test_config.cpp	/^class LexicalCast<Person, std::string> {$/;"	c	namespace:rainbow	file:
LexicalCast	tests/test_config.cpp	/^class LexicalCast<std::string, Person> {$/;"	c	namespace:rainbow	file:
LightlineFileformat	.vim_runtime/my_configs.vim	/^function! LightlineFileformat()$/;"	f
LightlineFiletype	.vim_runtime/my_configs.vim	/^function! LightlineFiletype()$/;"	f
LineFormatItem	rainbow/log.cpp	/^    LineFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::LineFormatItem	access:public	signature:(const std::string str = ”)
LineFormatItem	rainbow/log.cpp	/^class LineFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
LinesError	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
Lint	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! s:Lint(buffer, should_lint_file, timer_id) abort$/;"	f
ListAllMember	rainbow/config.cpp	/^static void ListAllMember(const std::string& prefix, $/;"	f	namespace:rainbow	signature:(const std::string& prefix, const YAML::Node& node, std::list<std::pair<std::string, const YAML::Node> >& output)
ListedAndCurrentTab	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ListedAndCurrentTab(buf)$/;"	f
LoadArgCount	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! s:LoadArgCount(function) abort$/;"	f
LoadFromYaml	rainbow/config.cpp	/^void Config::LoadFromYaml(const YAML::Node& root) {$/;"	f	class:rainbow::Config	signature:(const YAML::Node& root)
LoadFromYaml	rainbow/config.h	/^    static void LoadFromYaml(const YAML::Node& root);$/;"	p	class:rainbow::Config	access:public	signature:(const YAML::Node& root)
LocalSearchDecl	.vim/autoload/omni/cpp/items.vim	/^function! s:LocalSearchDecl(name)$/;"	f
Log	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
LogAppender	rainbow/log.cpp	/^LogAppender::LogAppender() {$/;"	f	class:rainbow::LogAppender	signature:()
LogAppender	rainbow/log.h	/^    LogAppender();$/;"	p	class:rainbow::LogAppender	access:public	signature:()
LogAppender	rainbow/log.h	/^class LogAppender {$/;"	c	namespace:rainbow
LogAppenderDefine	rainbow/log.cpp	/^struct LogAppenderDefine {$/;"	s	namespace:rainbow	file:
LogDefine	rainbow/log.cpp	/^struct LogDefine {$/;"	s	namespace:rainbow	file:
LogEvent	rainbow/log.cpp	/^LogEvent::LogEvent(const std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, $/;"	f	class:rainbow::LogEvent	signature:(const std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, int32_t line, uint32_t elapse, uint32_t thread_id, uint32_t fiber_id, uint64_t time)
LogEvent	rainbow/log.h	/^    LogEvent(std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, $/;"	p	class:rainbow::LogEvent	access:public	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, int32_t m_line, uint32_t elapse, uint32_t thread_id, uint32_t fiber_id, uint64_t time)
LogEvent	rainbow/log.h	/^class LogEvent {$/;"	c	namespace:rainbow
LogEventWrap	rainbow/log.cpp	/^LogEventWrap::LogEventWrap(LogEvent::ptr e) : m_event(e) {$/;"	f	class:rainbow::LogEventWrap	signature:(LogEvent::ptr e)
LogEventWrap	rainbow/log.h	/^    LogEventWrap(LogEvent::ptr e);$/;"	p	class:rainbow::LogEventWrap	access:public	signature:(LogEvent::ptr e)
LogEventWrap	rainbow/log.h	/^class LogEventWrap {$/;"	c	namespace:rainbow
LogFlushQueue	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state, dir) abort$/;"	f
LogFormatter	rainbow/log.cpp	/^LogFormatter::LogFormatter(const std::string& pattern) : m_pattern(pattern) {$/;"	f	class:rainbow::LogFormatter	signature:(const std::string& pattern)
LogFormatter	rainbow/log.h	/^    LogFormatter(const std::string& pattern);$/;"	p	class:rainbow::LogFormatter	access:public	signature:(const std::string& pattern)
LogFormatter	rainbow/log.h	/^class LogFormatter {$/;"	c	namespace:rainbow
LogIniter	rainbow/log.cpp	/^    LogIniter() {$/;"	f	struct:rainbow::LogIniter	access:public	signature:()
LogIniter	rainbow/log.cpp	/^struct LogIniter {$/;"	s	namespace:rainbow	file:
LogLevel	rainbow/log.h	/^class LogLevel {$/;"	c	namespace:rainbow
LogParse	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, line) abort$/;"	f
Logger	rainbow/log.cpp	/^Logger::Logger(const std::string& name)$/;"	f	class:rainbow::Logger	signature:(const std::string& name)
Logger	rainbow/log.h	/^    Logger(const std::string& name = "root");$/;"	p	class:rainbow::Logger	access:public	signature:(const std::string& name = ”)
Logger	rainbow/log.h	/^class Logger : public std::enable_shared_from_this<Logger> {$/;"	c	namespace:rainbow	inherits:std::enable_shared_from_this
LoggerManager	rainbow/log.cpp	/^LoggerManager::LoggerManager() {$/;"	f	class:rainbow::LoggerManager	signature:()
LoggerManager	rainbow/log.h	/^    LoggerManager();$/;"	p	class:rainbow::LoggerManager	access:public	signature:()
LoggerManager	rainbow/log.h	/^class LoggerManager {$/;"	c	namespace:rainbow
LoggerMgr	rainbow/log.h	/^typedef rainbow::Singleton<LoggerManager> LoggerMgr;$/;"	t	namespace:rainbow
LookUpBase	rainbow/config.cpp	/^ConfigVarBase::ptr Config::LookUpBase(const std::string& name) {$/;"	f	class:rainbow::Config	signature:(const std::string& name)
LookUpBase	rainbow/config.h	/^    static ConfigVarBase::ptr LookUpBase(const std::string& name);$/;"	p	class:rainbow::Config	access:public	signature:(const std::string& name)
LookingAt	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:LookingAt()$/;"	f
Lookup	rainbow/config.h	/^    static typename ConfigVar<T>::ptr Lookup(const std::string& name) {$/;"	f	class:rainbow::Config	access:public	signature:(const std::string& name)
Lookup	rainbow/config.h	/^    static typename ConfigVar<T>::ptr Lookup(const std::string& name,$/;"	f	class:rainbow::Config	access:public	signature:(const std::string& name, const T& default_value, const std::string& description = ”)
METHOD_INFO	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int METHOD_INFO = 2;$/;"	f	class:ClassInfo	access:public
MRU	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete MRU$/;"	c
MRUCmp	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:MRUCmp(line1, line2)$/;"	f
MRUListShow	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:MRUListShow()$/;"	f
MRUPop	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:MRUPop(bufnr)$/;"	f
MRUPush	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:MRUPush(buf)$/;"	f
MRU_AddFile	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_AddFile(acmd_bufnr)$/;"	f
MRU_Add_Menu	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Add_Menu = 1$/;"	v
MRU_Auto_Close	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Auto_Close = 1$/;"	v
MRU_Cmd	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Cmd(pat)$/;"	f
MRU_Complete	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Complete(ArgLead, CmdLine, CursorPos)$/;"	f
MRU_Edit_File	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Edit_File(filename, sanitized)$/;"	f
MRU_Exclude_Files	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Exclude_Files = ''$/;"	v
MRU_File	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^                let MRU_File = $USERPROFILE . '\\_vim_mru_files'$/;"	v
MRU_File	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^        let MRU_File = $HOME . '\/.vim_mru_files'$/;"	v
MRU_File	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^        let MRU_File = $VIM . '\/_vim_mru_files'$/;"	v
MRU_Filename_Format	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Filename_Format = {$/;"	v
MRU_Include_Files	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Include_Files = ''$/;"	v
MRU_LoadList	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_LoadList()$/;"	f
MRU_Max_Entries	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Max_Entries = 100$/;"	v
MRU_Max_Entries	.vim_runtime/vimrcs/plugins_config.vim	/^let MRU_Max_Entries = 400$/;"	v
MRU_Max_Menu_Entries	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Max_Menu_Entries = 10$/;"	v
MRU_Max_Submenu_Entries	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Max_Submenu_Entries = 10$/;"	v
MRU_Open_File_In_Tab	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Open_File_In_Tab(fname, esc_fname)$/;"	f
MRU_Open_File_Use_Tabs	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Open_File_Use_Tabs = 0$/;"	v
MRU_Open_Window	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Open_Window(...)$/;"	f
MRU_Refresh_Menu	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Refresh_Menu()$/;"	f
MRU_SaveList	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_SaveList()$/;"	f
MRU_Select_File_Cmd	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Select_File_Cmd(opt) range$/;"	f
MRU_Use_Current_Window	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Use_Current_Window = 0$/;"	v
MRU_Warn_Msg	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Warn_Msg(msg)$/;"	f
MRU_Window_Edit_File	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_Window_Edit_File(fname, multi, edit_type, open_type)$/;"	f
MRU_Window_Height	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Window_Height = 8$/;"	v
MRU_Window_Open_Always	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^    let MRU_Window_Open_Always = 0$/;"	v
MRU_add_files_to_menu	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_add_files_to_menu(prefix, file_list)$/;"	f
MRU_escape_filename	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^function! s:MRU_escape_filename(fname)$/;"	f
MRectangle	.vim/src/previewwindow.cpp	/^	typedef GdkRectangle MRectangle;$/;"	t	file:
MRectangle	.vim/src/previewwindow.cpp	/^	} MRectangle;$/;"	t	typeref:struct:_Rectangle	file:
MYLIST	.vim/src/lex.yy.c	730;"	d	file:
MYLISTEX	.vim/src/lex.yy.c	732;"	d	file:
MY_SYSTEM_H	.vim/src/my_system.h	2;"	d
Main	.vim/src/CSParser.cs	/^		public static void Main(string[] argv) {$/;"	m	class:Wangfc.CSParser	access:public	signature:(string[] argv)
Main	.vim/src/TypeFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.TypeFinder	access:public	signature:(string[] argv)
Main	.vim/src/UsingFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.UsingFinder	access:public	signature:(string[] argv)
MakoIndentClose	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
MakoIndentOpen	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentPush	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
ManualCompletionEnter	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
ManualCompletionEnter	.vim/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
Map	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
Map	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
MapKeys	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:MapKeys()$/;"	f
MapMotion	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
MapNormVis	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MapNormVis(rhs,lhs)$/;"	f
MapNorms	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapNotHasmapto	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MapNotHasmapto(lhs, rhs)$/;"	f
MapSpecs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
MarkdownClearSyntaxVariables	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MarkdownClearSyntaxVariables()$/;"	f
MarkdownHighlightSources	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MarkdownHighlightSources(force)$/;"	f
MarkdownRefreshSyntax	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MarkdownRefreshSyntax(force)$/;"	f
MarkdownSetupFoldLevel	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^function! s:MarkdownSetupFoldLevel()$/;"	f
MarkdownSetupFolding	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^function! s:MarkdownSetupFolding()$/;"	f
Markdown_GetUrlForPosition	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:Markdown_GetUrlForPosition(lnum, col)$/;"	f
Match	.vim/ftplugin/xml.vim	/^fun! s:Match(name)$/;"	f
Match	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
MatchCount	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
MatchIt	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchedItems	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
Matches	.vim/ftplugin/xml.vim	/^fun! s:Matches()	$/;"	f
MatchesVisual	.vim/ftplugin/xml.vim	/^fun! s:MatchesVisual()	$/;"	f
MenuController.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.isMinimal	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
MenuController.showMenu	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MergeHead	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeHead(...) abort$/;"	f
MergeSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
MergetoolSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:MergetoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
MessageCfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:MessageCfile(...) abort$/;"	f
MessageFormatItem	rainbow/log.cpp	/^    MessageFormatItem(const std::string& str = "") {}$/;"	f	class:rainbow::MessageFormatItem	access:public	signature:(const std::string& str = ”)
MessageFormatItem	rainbow/log.cpp	/^class MessageFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
Mkd	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
Mkd	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
Modified	.vim/bundle/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
Modified	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
Modified	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
Mods	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
Move	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
MoveToCurHeader	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToCurHeader()$/;"	f
MoveToNextHeader	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToNextHeader()$/;"	f
MoveToNextSiblingHeader	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToNextSiblingHeader()$/;"	f
MoveToParentHeader	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToParentHeader()$/;"	f
MoveToPreviousHeader	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToPreviousHeader()$/;"	f
MoveToPreviousSiblingHeader	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToPreviousSiblingHeader()$/;"	f
Mru	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete Mru$/;"	c
MultiValueMap	.vim/src/vjde/completion/MultiValueMap.java	/^    public MultiValueMap () {$/;"	m	class:MultiValueMap	access:public	signature:()
MultiValueMap	.vim/src/vjde/completion/MultiValueMap.java	/^public class MultiValueMap extends HashMap {$/;"	c	inherits:HashMap
MultiValueMap.MultiValueMap	.vim/src/vjde/completion/MultiValueMap.java	/^    public MultiValueMap () {$/;"	m	class:MultiValueMap	access:public	signature:()
MultiValueMap.getAsList	.vim/src/vjde/completion/MultiValueMap.java	/^    public List getAsList(Object key) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key)
MultiValueMap.put	.vim/src/vjde/completion/MultiValueMap.java	/^    public Object put(Object key, Object value) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key, Object value)
MultilineStringOrLineComment	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
MultipleCursorsFind	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^command! -nargs=1 -range=% MultipleCursorsFind$/;"	c
MyAction	.vim/src/vjde/completion/Struts2Configure.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Configure.MyAction	access:public	signature:(Action a, String sp,String m,String k)
MyAction	.vim/src/vjde/completion/Struts2Configure.java	/^	private static class MyAction {$/;"	c	class:Struts2Configure	access:private
MyAction	.vim/src/vjde/completion/Struts2Simple.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Simple.MyAction	access:public	signature:(Action a, String sp,String m,String k)
MyAction	.vim/src/vjde/completion/Struts2Simple.java	/^	private static class MyAction {$/;"	c	class:Struts2Simple	access:private
MyTextOut	.vim/src/lex.yy.c	/^void MyTextOut(char *p , int l) ;$/;"	p	file:	signature:(char *p , int l)
MyTextOut	.vim/src/lex.yy.c	/^void MyTextOut(char *p,int l) {$/;"	f	signature:(char *p,int l)
NERDTree	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CursorToBookmarkTable	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
NERDTree.ExistsForBuf	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeCopyNode	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFocus	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeIgnore	.vim_runtime/vimrcs/plugins_config.vim	/^let NERDTreeIgnore = ['\\.pyc$', '__pycache__']$/;"	v
NERDTreeListNode	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeShowHidden	.vim_runtime/vimrcs/plugins_config.vim	/^let NERDTreeShowHidden=0$/;"	v
NERDTreeSystemCommand	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeSystemCommand()$/;"	f
NERDTreeToggleVCS	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NEVER	.vim_runtime/sources_non_forked/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
NIL	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String NIL = "nil";$/;"	f	class:ClassInfo	access:public
NIL	.vim/src/vjde/completion/Completion.java	/^  public static final String NIL = "[]";$/;"	f	class:Completion	access:public
NL	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String NL = "\\n";$/;"	f	class:ClassInfo	access:public
NL	.vim/src/vjde/completion/Completion.java	/^  public static final String NL = "\\n";$/;"	f	class:Completion	access:public
NameFormatItem	rainbow/log.cpp	/^    NameFormatItem(const std::string& str = "") {}$/;"	f	class:rainbow::NameFormatItem	access:public	signature:(const std::string& str = ”)
NameFormatItem	rainbow/log.cpp	/^class NameFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
Nat	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:Nat(int)$/;"	f
NavigateUp	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
NeoVimCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! s:NeoVimCallback(job, data, event) abort$/;"	f
NeoVimOutputCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^function! s:NeoVimOutputCallback(channel_id, data, event) abort$/;"	f
NewFileXML	.vim/ftplugin/xml.vim	/^function! NewFileXML( )$/;"	f
NewLineFormatItem	rainbow/log.cpp	/^    NewLineFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::NewLineFormatItem	access:public	signature:(const std::string str = ”)
NewLineFormatItem	rainbow/log.cpp	/^class NewLineFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
NextAlternate	.vim/plugin/a.vim	/^function! NextAlternate(bang)$/;"	f
NextExpandedHunk	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
NextFile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
NextHunk	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
NextItem	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
NextSection	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
NextSectionEnd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
Notifier.AddListener	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
NotifySearch	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:NotifySearch()$/;"	f
NullError	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(...) abort$/;"	f
O	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> O <NOP>$/;"	m
OmniCpp_DefaultNamespaces	.vim_runtime/my_configs.vim	/^let OmniCpp_DefaultNamespaces=["std","_GLIBCXX_STD"]$/;"	v
OmniCpp_GlobalScopeSearch	.vim_runtime/my_configs.vim	/^let OmniCpp_GlobalScopeSearch=2$/;"	v
OmniCpp_MayCompleteArrow	.vim_runtime/my_configs.vim	/^let OmniCpp_MayCompleteArrow=1$/;"	v
OmniCpp_MayCompleteDot	.vim_runtime/my_configs.vim	/^let OmniCpp_MayCompleteDot=1$/;"	v
OmniCpp_MayCompleteScope	.vim_runtime/my_configs.vim	/^let OmniCpp_MayCompleteScope=1$/;"	v
OmniCpp_NamespaceSearch	.vim_runtime/my_configs.vim	/^let OmniCpp_NamespaceSearch=1$/;"	v
OmniCpp_ShowAccess	.vim_runtime/my_configs.vim	/^let OmniCpp_ShowAccess=1$/;"	v
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! s:OnReady($/;"	f
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! s:OnReady(line, column, options, capability, linter, lsp_details) abort$/;"	f
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! s:OnReady(line, column, opt, linter, lsp_details) abort$/;"	f
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/organize_imports.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
OnReady	.vim_runtime/sources_non_forked/ale/autoload/ale/symbol.vim	/^function! s:OnReady(query, options, linter, lsp_details) abort$/;"	f
OnReadyForCustomRequests	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:OnReadyForCustomRequests(args, linter, lsp_details) abort$/;"	f
OneScope	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:OneScope(lnum)$/;"	f
OneScope	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:OneScope()$/;"	f
Open	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! s:Open(open_in) abort$/;"	f
Open	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenCompletionMenu	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:OpenCompletionMenu(...) abort$/;"	f
OpenMulti	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
OpenParse	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(string, wants_cmd) abort$/;"	f
OpenUrlUnderCursor	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:OpenUrlUnderCursor()$/;"	f
Opener.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
OrganizeImports	.vim_runtime/sources_non_forked/ale/autoload/ale/organize_imports.vim	/^function! s:OrganizeImports(linter) abort$/;"	f
OuterClass	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^      class OuterClass$/;"	c
Owner	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
PACKAGE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PACKAGE   = 2;$/;"	f	class:ClassInfo	access:public
PACKAGE_SEPARATOR	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final char PACKAGE_SEPARATOR = '.'; $/;"	f	class:DynamicClassLoader	access:public
PARAMETER	.vim/src/lex.yy.c	734;"	d	file:
PATH_SEPARATOR	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public static final String PATH_SEPARATOR$/;"	f	class:DynamicClassLoader	access:public
PRIVATE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:ClassInfo	access:public
PRIVATE	.vim/src/vjde/completion/Completion.java	/^  public static final int PRIVATE   = 3;$/;"	f	class:Completion	access:public
PROTECTED	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PROTECTED = 1;$/;"	f	class:ClassInfo	access:public
PROTECTED	.vim/src/vjde/completion/Completion.java	/^  public static final int PROTECTED = 1;$/;"	f	class:Completion	access:public
PUBLIC	.vim/src/vjde/completion/ClassInfo.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:ClassInfo	access:public
PUBLIC	.vim/src/vjde/completion/Completion.java	/^  public static final int PUBLIC    = 0;$/;"	f	class:Completion	access:public
PackageClasses	.vim/src/vjde/completion/PackageClasses.java	/^public class PackageClasses {$/;"	c
PackageClasses.main	.vim/src/vjde/completion/PackageClasses.java	/^	public static void main(String[] args) {$/;"	m	class:PackageClasses	access:public	signature:(String[] args)
PackageCompletion	.vim/src/vjde/completion/PackageCompletion.java	/^public class PackageCompletion {$/;"	c
PackageCompletion.main	.vim/src/vjde/completion/PackageCompletion.java	/^    public static void main(String[] args) {$/;"	m	class:PackageCompletion	access:public	signature:(String[] args)
PaintText	.vim/src/lex.yy.c	/^void PaintText(HDC hdc) $/;"	f	signature:(HDC hdc)
PaintText	.vim/src/tipswnd.c	/^void PaintText(HDC hdc) $/;"	f	signature:(HDC hdc)
Parse	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        function! Parse(snippet, ...)$/;"	f
ParseCino	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
ParseCoffeeError	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParseInlinedFunctionProblems	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^function! s:ParseInlinedFunctionProblems(buffer, lines) abort$/;"	f
ParsePattern	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
ParseProblemsInHeaders	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^function! s:ParseProblemsInHeaders(buffer, lines) abort$/;"	f
PatchSearchExpr	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
Path.AbsolutePathFor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
Path.CopyingSupported	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
Path.Resolve	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.WinToUnixPath	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.addDelimiter	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
Path.bookmarkNames	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.copy	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
Path.isHiddenUnder	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
Path.isUnder	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
Path.isUnixHiddenFile	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PathInfo	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
PeepOpen	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^command! PeepOpen :call <SID>LaunchPeepOpenViaVim()$/;"	c
PeepQuit	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^command! PeepQuit :call <SID>QuitPeepOpenViaVim()$/;"	c
Person	tests/test_config.cpp	/^    Person() {}$/;"	f	class:Person	access:public	signature:()
Person	tests/test_config.cpp	/^class Person {$/;"	c	file:
Person::Person	tests/test_config.cpp	/^    Person() {}$/;"	f	class:Person	access:public	signature:()
Person::m_age	tests/test_config.cpp	/^    int m_age = 0;$/;"	m	class:Person	file:	access:public
Person::m_name	tests/test_config.cpp	/^    std::string m_name;$/;"	m	class:Person	file:	access:public
Person::m_sex	tests/test_config.cpp	/^    bool m_sex = 0;$/;"	m	class:Person	file:	access:public
Person::operator ==	tests/test_config.cpp	/^    bool operator==(const Person& oth) const {$/;"	f	class:Person	access:public	signature:(const Person& oth) const
Person::toString	tests/test_config.cpp	/^    std::string toString() const {$/;"	f	class:Person	access:public	signature:() const
PlaceMarkers	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! s:PlaceMarkers(results)  " {{{$/;"	f
Plugin	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+  -bar   Plugin$/;"	c
PluginClean	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang   PluginClean$/;"	c
PluginDocs	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0         PluginDocs$/;"	c
PluginInstall	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=* -bang -complete=custom,vundle#scripts#complete PluginInstall$/;"	c
PluginList	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang PluginList$/;"	c
PluginSearch	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginSearch$/;"	c
PluginUpdate	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=* -complete=custom,vundle#scripts#complete PluginUpdate PluginInstall! <args>$/;"	c
PopupmenuExists	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:PopupmenuExists()$/;"	f
PreparePathArgs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal) abort$/;"	f
PrepareWindowContent	.vim_runtime/sources_non_forked/ale/autoload/ale/floating_preview.vim	/^function! s:PrepareWindowContent(lines) abort$/;"	f
PrepareWrappedCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! s:PrepareWrappedCommand(original_wrapper, command) abort$/;"	f
PrevCodeLine	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
PrevNonBlank	.vim_runtime/sources_non_forked/vim-markdown/indent/markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
PrevNonBlankNonString	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
PreviousFile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
PreviousHunk	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
PreviousItem	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
PreviousNotMSL	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
PreviousSection	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
PreviousSectionEnd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
PreviousToken	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
PrintFormat	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! s:PrintFormat(format, string) "{{{3$/;"	f
PriorityCmd	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! s:PriorityCmd() abort$/;"	f
ProcessDeferredCommands	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! s:ProcessDeferredCommands(initial_result) abort$/;"	f
ProcessDeferredCwds	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! s:ProcessDeferredCwds(initial_command, initial_cwd) abort$/;"	f
ProgramName	.vim/src/readtags.c	/^static const char *ProgramName;$/;"	v	file:
ProjectionistDetect	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
PrtAdd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
PseudoTagPrefix	.vim/src/readtags.c	/^const char *const PseudoTagPrefix = "!_";$/;"	v
Pure	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
PurgeTimestamp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! s:PurgeTimestamp(dir) "{{{3$/;"	f
QueryLog	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec) abort$/;"	f
QuickHelp	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:QuickHelp() "{{{$/;"	f
QuickfixCreate	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
QuickfixGet	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
QuickfixSet	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
QuickfixStream	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, event, title, cmd, first, mods, callback, ...) abort$/;"	f
QuitPeepOpenViaVim	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^function s:QuitPeepOpenViaVim()$/;"	f
RAINBOW_LOG_DEBUG	rainbow/log.h	24;"	d
RAINBOW_LOG_ERROR	rainbow/log.h	27;"	d
RAINBOW_LOG_FATAL	rainbow/log.h	28;"	d
RAINBOW_LOG_FMT_DEBUG	rainbow/log.h	36;"	d
RAINBOW_LOG_FMT_ERROR	rainbow/log.h	39;"	d
RAINBOW_LOG_FMT_FATAL	rainbow/log.h	40;"	d
RAINBOW_LOG_FMT_INFO	rainbow/log.h	37;"	d
RAINBOW_LOG_FMT_LEVEL	rainbow/log.h	30;"	d
RAINBOW_LOG_FMT_WARN	rainbow/log.h	38;"	d
RAINBOW_LOG_INFO	rainbow/log.h	25;"	d
RAINBOW_LOG_LEVEL	rainbow/log.h	20;"	d
RAINBOW_LOG_NAME	rainbow/log.h	44;"	d
RAINBOW_LOG_ROOT	rainbow/log.h	43;"	d
RAINBOW_LOG_WARN	rainbow/log.h	26;"	d
READTAGS_H	.vim/src/readtags.h	22;"	d
REF	.vim_runtime/sources_non_forked/vim-coffee-script/Makefile	/^REF = HEAD$/;"	m
REGISTRY	.vim_runtime/sources_non_forked/vim-markdown/Makefile	/^REGISTRY=${VIMDIR}\/registry$/;"	m
REJECT	.vim/src/lex.yy.c	683;"	d	file:
RET_VAL	.vim/src/previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
RWMutex	rainbow/thread.h	/^    RWMutex() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
RWMutex	rainbow/thread.h	/^class RWMutex {$/;"	c	namespace:rainbow
Random	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
ReSortListing	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ReSortListing()$/;"	f
ReadAutocmds	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            function! ReadAutocmds()$/;"	f
ReadExec	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadExec(line1, count, range, mods, env, args, options) abort$/;"	f
ReadInt	.vim/src/lex.yy.c	/^int ReadInt(char *in,int l)$/;"	f	signature:(char *in,int l)
ReadInt	.vim/src/tipswnd.c	/^int ReadInt(char *in,int l)$/;"	f	signature:(char *in,int l)
ReadLock	rainbow/thread.h	/^    typedef ReadScopedLockImpl<RWMutex> ReadLock;$/;"	t	class:rainbow::RWMutex	access:public
ReadPrepare	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadPrepare(line1, count, range, mods) abort$/;"	f
ReadScopedLockImpl	rainbow/thread.h	/^    ReadScopedLockImpl(T& mutex)$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:(T& mutex)
ReadScopedLockImpl	rainbow/thread.h	/^struct ReadScopedLockImpl {$/;"	s	namespace:rainbow
RebaseArgument	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
RebaseSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
RebuildBufferList	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:RebuildBufferList(...)$/;"	f
Relative	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
ReleaseKeyPresses	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
ReleaseKeyPresses	.vim/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
ReloadStatus	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
ReloadStatusBuffer	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatusBuffer(...) abort$/;"	f
ReloadTabStatus	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
ReloadWinStatus	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
RemapItemTypes	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:RemapItemTypes(type_map, loclist) abort$/;"	f
Remote	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir) abort$/;"	f
Remove	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
RemoveBufFromOtherTabs	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:RemoveBufFromOtherTabs(bufnr)$/;"	f
RemoveBuffer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:RemoveBuffer(mode)$/;"	f
RemoveCComments	.vim/autoload/omni/cpp/utils.vim	/^function! s:RemoveCComments(szLine)$/;"	f
RemoveModule	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! s:RemoveModule(results) abort$/;"	f
RemoveProblemsForDisabledLinters	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:RemoveProblemsForDisabledLinters(buffer, linters) abort$/;"	f
RemoveUnicodeQuotes	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/flawfinder.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
RemoveUnicodeQuotes	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
RemoveUnicodeQuotes	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/pony.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
Render	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
ReplaceCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
ReplaceCompletionOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:ReplaceCompletionOptions(source) abort$/;"	f
Reset	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Reset()$/;"	f
Reset	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
ResetShellSlash	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ResetShellSlash() " {{{2$/;"	f
Resolve	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
ResolveAliasInNamespaceList	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasInNamespaceList(mapNamespaceAlias, listNamespaces)$/;"	f
ResolveAliasKey	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKey(mapNamespaceAlias, szAlias)$/;"	f
ResolveAliasKeys	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKeys(mapNamespaceAlias)$/;"	f
ResolveCCast	.vim/autoload/omni/cpp/items.vim	/^function! s:ResolveCCast(tokens)$/;"	f
ResolveCast	.vim/autoload/omni/cpp/items.vim	/^function! s:ResolveCast(tokens, startChar, endChar)$/;"	f
ResolveCppCast	.vim/autoload/omni/cpp/items.vim	/^function! s:ResolveCppCast(tokens)$/;"	f
ResolveNamespace	.vim/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveNamespace(namespace, mapCurrentContexts)$/;"	f
ResolveSymbol	.vim/autoload/omni/cpp/items.vim	/^function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)$/;"	f
RestoreFrameParams	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^function! s:RestoreFrameParams() "{{{3$/;"	f
RestoreViewIfNeeded	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! s:RestoreViewIfNeeded(buffer) abort$/;"	f
Result	.vim/src/vjde/completion/Struts2Simple.java	/^interface Result {$/;"	i
Result.location	.vim/src/vjde/completion/Struts2Simple.java	/^        public String location() ;$/;"	m	interface:Result	access:public	signature:()
Result.name	.vim/src/vjde/completion/Struts2Simple.java	/^        public String name() ;$/;"	m	interface:Result	access:public	signature:()
Result.value	.vim/src/vjde/completion/Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Result	access:public	signature:()
ResultImpl	.vim/src/vjde/completion/Struts2Configure.java	/^	public ResultImpl(String n,String l) {$/;"	m	class:ResultImpl	access:public	signature:(String n,String l)
ResultImpl	.vim/src/vjde/completion/Struts2Configure.java	/^class ResultImpl implements Result {$/;"	c	inherits:Result
ResultImpl.ResultImpl	.vim/src/vjde/completion/Struts2Configure.java	/^	public ResultImpl(String n,String l) {$/;"	m	class:ResultImpl	access:public	signature:(String n,String l)
ResultImpl.annotationType	.vim/src/vjde/completion/Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.location	.vim/src/vjde/completion/Struts2Configure.java	/^				public String location() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.location	.vim/src/vjde/completion/Struts2Configure.java	/^	String location;$/;"	f	class:ResultImpl	access:default
ResultImpl.name	.vim/src/vjde/completion/Struts2Configure.java	/^				public String name() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.name	.vim/src/vjde/completion/Struts2Configure.java	/^	String name;$/;"	f	class:ResultImpl	access:default
ResultImpl.params	.vim/src/vjde/completion/Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl.type	.vim/src/vjde/completion/Struts2Configure.java	/^				public String type() {$/;"	m	class:ResultImpl	access:public	signature:()
ResultImpl2	.vim/src/vjde/completion/Struts2Simple.java	/^	public ResultImpl2(String n,String l) {$/;"	m	class:ResultImpl2	access:public	signature:(String n,String l)
ResultImpl2	.vim/src/vjde/completion/Struts2Simple.java	/^class ResultImpl2 implements Result {$/;"	c	inherits:Result
ResultImpl2.ResultImpl2	.vim/src/vjde/completion/Struts2Simple.java	/^	public ResultImpl2(String n,String l) {$/;"	m	class:ResultImpl2	access:public	signature:(String n,String l)
ResultImpl2.annotationType	.vim/src/vjde/completion/Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.location	.vim/src/vjde/completion/Struts2Simple.java	/^				public String location() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.location	.vim/src/vjde/completion/Struts2Simple.java	/^	String location;$/;"	f	class:ResultImpl2	access:default
ResultImpl2.name	.vim/src/vjde/completion/Struts2Simple.java	/^				public String name() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.name	.vim/src/vjde/completion/Struts2Simple.java	/^	String name;$/;"	f	class:ResultImpl2	access:default
ResultImpl2.params	.vim/src/vjde/completion/Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.type	.vim/src/vjde/completion/Struts2Simple.java	/^				public String type() {$/;"	m	class:ResultImpl2	access:public	signature:()
ResultImpl2.value	.vim/src/vjde/completion/Struts2Simple.java	/^    public String value() {$/;"	m	class:ResultImpl2	access:public	signature:()
RetabSnip	.vim_runtime/sources_non_forked/vim-snipmate/ftplugin/snippets.vim	/^command! -buffer -range=% RetabSnip$/;"	c
RetriveTextSize	.vim/src/lex.yy.c	/^BOOL RetriveTextSize(HDC hdc)$/;"	f	signature:(HDC hdc)
RetriveTextSize	.vim/src/tipswnd.c	/^BOOL RetriveTextSize(HDC hdc)$/;"	f	signature:(HDC hdc)
ReverseSortSelect	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ReverseSortSelect()$/;"	f
RevertSubcommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
RewriteFormatString	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! s:RewriteFormatString(format, pattern, string) "{{{3$/;"	f
Right	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
RmDir	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
RubyBalloonexpr	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyCursorFile	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorIdentifier	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
RubyCursorTag	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorTag() abort$/;"	f
Run	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
RunBufDelete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunBufDelete(bufnr) abort$/;"	f
RunClose	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunClose(state, tmp, job, ...) abort$/;"	f
RunCloseIn	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunCloseIn(job) abort$/;"	f
RunEcho	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEcho(tmp) abort$/;"	f
RunEdit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEdit(state, tmp, job) abort$/;"	f
RunExit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunExit(state, tmp, job, exit_status) abort$/;"	f
RunFinished	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunFinished(state, ...) abort$/;"	f
RunFixer	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! s:RunFixer(options) abort$/;"	f
RunIfExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:RunIfExecutable(buffer, linter, lint_file, executable) abort$/;"	f
RunJob	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:RunJob(command, options) abort$/;"	f
RunJob	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! s:RunJob(result, options) abort$/;"	f
RunJobs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunJobs() abort$/;"	f
RunLinter	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:RunLinter(buffer, linter, lint_file) abort$/;"	f
RunLinters	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:RunLinters($/;"	f
RunReceive	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunReceive(state, tmp, type, job, data, ...) abort$/;"	f
RunRustfmt	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, tmpname, from_writepre)$/;"	f
RunSave	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSave(state) abort$/;"	f
RunSend	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSend(job, str) abort$/;"	f
RunStateHandlers	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:RunStateHandlers(world) "{{{3$/;"	f
RunTest	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
RunTick	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunTick(job) abort$/;"	f
RunWait	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:RunWait(state, tmp, job, ...) abort$/;"	f
RustCargoQuickFixHooks	.vim_runtime/sources_non_forked/rust.vim/compiler/cargo.vim	/^augroup RustCargoQuickFixHooks$/;"	a
RustEmitAsm	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Expand(<bang>0, <q-args>)$/;"	c
RustFmt	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -bar -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustInfo	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -bar RustInfo call rust#debugging#Info()$/;"	c
RustInfoToClipboard	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -bar RustInfoToClipboard call rust#debugging#InfoToClipboard()$/;"	c
RustInfoToFile	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -bar -nargs=1 RustInfoToFile call rust#debugging#InfoToFile(<f-args>)$/;"	c
RustPlay	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
RustTest	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^command! -buffer -nargs=* -count -bang RustTest call rust#Test(<q-mods>, <count>, <bang>0, <q-args>)$/;"	c
RustfmtCommand	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! s:RustfmtCommand()$/;"	f
RustfmtCommandRange	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
RustfmtConfigOptions	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! s:RustfmtConfigOptions()$/;"	f
RustfmtWriteMode	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! s:RustfmtWriteMode()$/;"	f
S	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^  command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S$/;"	c
SHELL	.vim/bundle/supertab/Makefile	/^SHELL=\/bin\/bash$/;"	m
SID	.vim/ftplugin/xml.vim	/^function! s:SID()$/;"	f
SID	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
SOURCE_DIR	.vim_runtime/update_plugins.py	/^SOURCE_DIR = path.join(path.dirname(__file__), "sources_non_forked")$/;"	v
SPACE	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String SPACE = " ";$/;"	f	class:ClassInfo	access:public
SPACE	.vim/src/vjde/completion/Completion.java	/^  public static final String SPACE = " ";$/;"	f	class:Completion	access:public
START_LIST	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String START_LIST;$/;"	f	class:ClassInfo	access:public
START_LIST	.vim/src/vjde/completion/Completion.java	/^  public static final String START_LIST;$/;"	f	class:Completion	access:public
START_PAREN	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String START_PAREN = "(";$/;"	f	class:ClassInfo	access:public
START_PAREN	.vim/src/vjde/completion/Completion.java	/^  public static final String START_PAREN = "[";$/;"	f	class:Completion	access:public
SaveFrameParams	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^function! s:SaveFrameParams() "{{{3$/;"	f
SavePos	.vim/ftplugin/xml.vim	/^fun! s:SavePos()	$/;"	f
ScopedLockImpl	rainbow/thread.h	/^    ScopedLockImpl(T& mutex)$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:(T& mutex)
ScopedLockImpl	rainbow/thread.h	/^struct ScopedLockImpl {$/;"	s	namespace:rainbow
ScratchBufBuild	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
SearchCode	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchDecl	.vim/autoload/omni/cpp/items.vim	/^function! s:SearchDecl(szVariable)$/;"	f
SearchGlobalMembers	.vim/autoload/omni/cpp/complete.vim	/^function! s:SearchGlobalMembers(szBase)$/;"	f
SearchLoop	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
SearchMatchingKeyword	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchMembers	.vim/autoload/omni/cpp/complete.vim	/^function! s:SearchMembers(resolvedTagItem, szBase)$/;"	f
SearchPair	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SearchTestFunctionNameUnderCursor	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:SearchTestFunctionNameUnderCursor() abort$/;"	f
SearchTypeInfoOfDecl	.vim/autoload/omni/cpp/items.vim	/^function! s:SearchTypeInfoOfDecl(szVariable)$/;"	f
SearchWithDispatch	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:SearchWithDispatch(grepprg, grepargs, grepformat) "{{{$/;"	f
SearchWithGrep	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:SearchWithGrep(grepcmd, grepprg, grepargs, grepformat) "{{{$/;"	f
SearchingFilepaths	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:SearchingFilepaths() "{{{$/;"	f
SelectBuffer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:SelectBuffer(...)$/;"	f
SelectCompletion	.vim/bundle/supertab/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectCompletion	.vim/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectJavascript	.vim_runtime/sources_non_forked/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
Selection	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
Semaphore	rainbow/thread.cpp	/^Semaphore::Semaphore(uint32_t count) {$/;"	f	class:rainbow::Semaphore	signature:(uint32_t count)
Semaphore	rainbow/thread.h	/^    Semaphore(const Semaphore&&) = delete;$/;"	p	class:rainbow::Semaphore	access:private	signature:(const Semaphore&&)
Semaphore	rainbow/thread.h	/^    Semaphore(const Semaphore&) = delete;$/;"	p	class:rainbow::Semaphore	access:private	signature:(const Semaphore&)
Semaphore	rainbow/thread.h	/^    Semaphore(uint32_t count = 0);$/;"	p	class:rainbow::Semaphore	access:public	signature:(uint32_t count = 0)
Semaphore	rainbow/thread.h	/^class Semaphore {$/;"	c	namespace:rainbow
SendInitMessage	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! s:SendInitMessage(conn) abort$/;"	f
SendMessageData	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! s:SendMessageData(conn, data) abort$/;"	f
Set	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Set(var, default)$/;"	f
SetCompletionType	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetCompletionType	.vim/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetDefTxt	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetDefaultCompletionType	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetDefaultCompletionType	.vim/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetFlag	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! s:SetFlag(def, opts, idx, flag, rest, flagdefs) abort "{{{3$/;"	f
SetLines	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetListsImpl	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! s:SetListsImpl(timer_id, buffer, loclist) abort$/;"	f
SetLocalSettings	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:SetLocalSettings()$/;"	f
SetMakePrg	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetName	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.cpp	/^&¨/;"	p	file:	signature:(const std::string& name)
SetName	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.cpp	/^&Ø/;"	p	file:	signature:(const std::string& name)
SetName	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	p	signature:(const std::string& name)
SetName	rainbow/thread.cpp	/^void Thread::SetName(const std::string& name) {$/;"	f	class:rainbow::Thread	signature:(const std::string& name)
SetName	rainbow/thread.h	/^    static void SetName(const std::string& name);$/;"	p	class:rainbow::Thread	access:public	signature:(const std::string& name)
SetOffset	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! s:SetOffset(world) "{{{3$/;"	f
SetOpt	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! s:SetOpt(def, opts, idx, opt) abort "{{{3$/;"	f
SetOption	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetScrollBind	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! s:SetScrollBind(world) "{{{3$/;"	f
SetTimestamp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! s:SetTimestamp(cfile, type) "{{{3$/;"	f
SetUp	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
SetWD	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
SetexToAtx	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)$/;"	c
SetexToAtx	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:SetexToAtx(line1, line2)$/;"	f
Setup	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! s:Setup(enabled) abort$/;"	f
Setup	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:Setup(enabled) abort$/;"	f
Setup	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Setup()$/;"	f
Setup	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! s:Setup()  " {{{$/;"	f
Setup	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^function! Setup(snip) abort$/;"	f
SetupSyntax	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:SetupSyntax()$/;"	f
ShellTokenize	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
ShiftLeft	.vim/ftplugin/xml.vim	/^fun! s:ShiftLeft()$/;"	f
ShiftRight	.vim/ftplugin/xml.vim	/^fun! s:ShiftRight()$/;"	f
ShiftWidth	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldIgnore	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:ShouldIgnore(buffer, linter_name) abort$/;"	f
ShouldIgnore	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ShouldIgnore(buf)$/;"	f
ShouldOpen	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! s:ShouldOpen(buffer) abort$/;"	f
ShouldPurge	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! s:ShouldPurge(partial_filename) "{{{3$/;"	f
ShouldSkip	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
ShouldSuggestForType	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! s:ShouldSuggestForType(suggested_filetypes, type_list) abort$/;"	f
ShowCursorDetailForItem	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^function! s:ShowCursorDetailForItem(loc, options) abort$/;"	f
ShowErrorMessage	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! s:ShowErrorMessage()  " {{{$/;"	f
Shuffle	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
Si	.vim_runtime/vimrcs/plugins_config.vim	/^vmap Si S(i_<esc>f)$/;"	m
SignId	.vim_runtime/sources_non_forked/tlib/autoload/tlib/signs.vim	/^function! s:SignId(item) "{{{3$/;"	f
Singleton	rainbow/singleton.h	/^class Singleton {$/;"	c	namespace:rainbow
Singletonptr	rainbow/singleton.h	/^class Singletonptr {$/;"	c	namespace:rainbow
SkipFunc	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
Slash	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
Slash	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
SnipMateDetect	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^augroup SnipMateDetect$/;"	a
SnipMateLoadScope	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^command! -bang -bar -nargs=+ SnipMateLoadScope$/;"	c
SnipMateOpenSnippetFiles	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^command! SnipMateOpenSnippetFiles call snipMate#OpenSnippetFiles()$/;"	c
SnipMateSource	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^augroup SnipMateSource$/;"	a
SolarizedHiTrail	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
SortCompletions	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! s:SortCompletions(a, b) abort "{{{3$/;"	f
SortListing	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:SortListing()$/;"	f
SortMethod	.vim/src/readtags.c	/^static sortType SortMethod;$/;"	v	file:
SortOverride	.vim/src/readtags.c	/^static int SortOverride;$/;"	v	file:
SortReverse	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:SortReverse()$/;"	f
SortSelect	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:SortSelect()$/;"	f
Source	.vim_runtime/sources_non_forked/ale/rplugin/python3/deoplete/sources/ale.py	/^class Source(Base):$/;"	c	inherits:Base
SourceDocReader	.vim/src/vjde/completion/SourceDocReader.java	/^	public SourceDocReader(String f) {$/;"	m	class:SourceDocReader	access:public	signature:(String f)
SourceDocReader	.vim/src/vjde/completion/SourceDocReader.java	/^public class SourceDocReader {$/;"	c
SourceDocReader.SourceDocReader	.vim/src/vjde/completion/SourceDocReader.java	/^	public SourceDocReader(String f) {$/;"	m	class:SourceDocReader	access:public	signature:(String f)
SourceDocReader.getClassDoc	.vim/src/vjde/completion/SourceDocReader.java	/^	public String getClassDoc(String className) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className)
SourceDocReader.getMemberDoc	.vim/src/vjde/completion/SourceDocReader.java	/^	public String getMemberDoc(String className,String member) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member)
SourceDocReader.getMemberTipDoc	.vim/src/vjde/completion/SourceDocReader.java	/^    public String getMemberTipDoc(String className,String member,int paramPos) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member,int paramPos)
SourceDocReader.indexOfOnly	.vim/src/vjde/completion/SourceDocReader.java	/^	static boolean indexOfOnly(String whole,String test)$/;"	m	class:SourceDocReader	access:default	signature:(String whole,String test)
SourceDocReader.m_fileName	.vim/src/vjde/completion/SourceDocReader.java	/^	private String m_fileName;$/;"	f	class:SourceDocReader	file:	access:private
SourceDocReader.main	.vim/src/vjde/completion/SourceDocReader.java	/^	public static void main(String[] args) {$/;"	m	class:SourceDocReader	access:public	signature:(String[] args)
SourceDocReader.readDoc	.vim/src/vjde/completion/SourceDocReader.java	/^	private String readDoc(StreamTokenizer st) throws Exception$/;"	m	class:SourceDocReader	file:	access:private	signature:(StreamTokenizer st)
SpawnExternalParser	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:SpawnExternalParser(cmd) " {{{2$/;"	f
SpecInputs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitCDeclarations	.vim_runtime/sources_non_forked/tabular/after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitCommands	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitDelim	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitDelimTest	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:SplitDelimTest(string, delim, expected)$/;"	f
SplitExpandChain	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
SplitPattern	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
SquashArgument	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
StageApply	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
StageArgs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
StageDelete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
StageDiff	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageIgnore	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
StageInfo	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
StageInline	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
StageJump	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
StagePatch	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReveal	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal() abort$/;"	f
StageSeek	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
StarSetf	.vim_runtime/sources_non_forked/vim-ruby/ftdetect/ruby.vim	/^func! s:StarSetf(ft)$/;"	f
StartCompletionMode	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:StartCompletionMode() " {{{$/;"	f
StartIfExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:StartIfExecutable(options, executable) abort$/;"	f
StartLSP	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:StartLSP(options, address, executable, command) abort$/;"	f
StartOfFile	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
StartTag	.vim/ftplugin/xml.vim	/^fun! s:StartTag()$/;"	f
StartWithAddress	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithAddress(options, address) abort$/;"	f
StartWithCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithCommand(options, executable, command) abort$/;"	f
StatusCfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
StatusCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
StdoutLogAppender	rainbow/log.h	/^class StdoutLogAppender : public LogAppender {$/;"	c	namespace:rainbow	inherits:LogAppender
StopCurrentJobs	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! s:StopCurrentJobs(buffer, clear_lint_file_jobs, linter_slots) abort$/;"	f
StopCursorTimer	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
StopCursorTimer	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^function! s:StopCursorTimer() abort$/;"	f
StringFormatItem	rainbow/log.cpp	/^    StringFormatItem(const std::string& str) : m_string(str) {}$/;"	f	class:rainbow::StringFormatItem	access:public	signature:(const std::string& str)
StringFormatItem	rainbow/log.cpp	/^class StringFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
StringWidth	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^    function s:StringWidth(s)$/;"	f
StripLeadingSpaces	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripTrailingSpaces	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
Strlen	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^  function! s:Strlen(string)$/;"	f
Struts2Configure	.vim/src/vjde/completion/Struts2Configure.java	/^	public Struts2Configure(String webapp,String path,String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp,String path,String pkg)
Struts2Configure	.vim/src/vjde/completion/Struts2Configure.java	/^public class Struts2Configure {$/;"	c
Struts2Configure.MyAction	.vim/src/vjde/completion/Struts2Configure.java	/^	private static class MyAction {$/;"	c	class:Struts2Configure	access:private
Struts2Configure.MyAction.MyAction	.vim/src/vjde/completion/Struts2Configure.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Configure.MyAction	access:public	signature:(Action a, String sp,String m,String k)
Struts2Configure.MyAction.action	.vim/src/vjde/completion/Struts2Configure.java	/^		public Action action;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.klass	.vim/src/vjde/completion/Struts2Configure.java	/^		public String klass;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.method	.vim/src/vjde/completion/Struts2Configure.java	/^		public String method;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.space	.vim/src/vjde/completion/Struts2Configure.java	/^		public String space;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.MyAction.url	.vim/src/vjde/completion/Struts2Configure.java	/^		public String url;$/;"	f	class:Struts2Configure.MyAction	access:public
Struts2Configure.Struts2Configure	.vim/src/vjde/completion/Struts2Configure.java	/^	public Struts2Configure(String webapp,String path,String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp,String path,String pkg)
Struts2Configure.action2List	.vim/src/vjde/completion/Struts2Configure.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction a)
Struts2Configure.actionpkg	.vim/src/vjde/completion/Struts2Configure.java	/^	String actionpkg;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.actions	.vim/src/vjde/completion/Struts2Configure.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Configure	access:default
Struts2Configure.actions2vim	.vim/src/vjde/completion/Struts2Configure.java	/^	public String actions2vim() {$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.classname	.vim/src/vjde/completion/Struts2Configure.java	/^	String classname;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.classpath	.vim/src/vjde/completion/Struts2Configure.java	/^	String classpath;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.compareUrl	.vim/src/vjde/completion/Struts2Configure.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Configure	access:public	signature:(String source,String actionurl)
Struts2Configure.currentPkg	.vim/src/vjde/completion/Struts2Configure.java	/^	String currentPkg=null;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.db	.vim/src/vjde/completion/Struts2Configure.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.dcl	.vim/src/vjde/completion/Struts2Configure.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.destUrl	.vim/src/vjde/completion/Struts2Configure.java	/^    String destUrl=null;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.expkg	.vim/src/vjde/completion/Struts2Configure.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.expriclude	.vim/src/vjde/completion/Struts2Configure.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.exprpackage	.vim/src/vjde/completion/Struts2Configure.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.factory	.vim/src/vjde/completion/Struts2Configure.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Configure	access:default
Struts2Configure.findAnnotation	.vim/src/vjde/completion/Struts2Configure.java	/^	public void findAnnotation()$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.findAnnotation	.vim/src/vjde/completion/Struts2Configure.java	/^	public void findAnnotation(String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String pkg)
Struts2Configure.findInclues	.vim/src/vjde/completion/Struts2Configure.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
Struts2Configure.findInxml	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.findPackages	.vim/src/vjde/completion/Struts2Configure.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
Struts2Configure.findStruts2	.vim/src/vjde/completion/Struts2Configure.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
Struts2Configure.findWeb	.vim/src/vjde/completion/Struts2Configure.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
Struts2Configure.findXml	.vim/src/vjde/completion/Struts2Configure.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Configure	access:public	signature:(String xml)
Struts2Configure.handleAction	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAction(Action action,Class c)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c)
Struts2Configure.handleAction	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAction(Action action,Class c,String m)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c,String m)
Struts2Configure.handleAnnotations	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c)
Struts2Configure.handleAnnotations	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c,Method m) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c,Method m)
Struts2Configure.handleXml	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
Struts2Configure.handlerClass	.vim/src/vjde/completion/Struts2Configure.java	/^	public void handlerClass(String p, String name) {$/;"	m	class:Struts2Configure	access:public	signature:(String p, String name)
Struts2Configure.main	.vim/src/vjde/completion/Struts2Configure.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2Configure	access:public	signature:(String[] args)
Struts2Configure.onPackage	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Configure	access:public	signature:(Element pkg)
Struts2Configure.onResult	.vim/src/vjde/completion/Struts2Configure.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Configure	access:public	signature:(Element act)
Struts2Configure.result2Dict	.vim/src/vjde/completion/Struts2Configure.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction action)
Struts2Configure.toOut	.vim/src/vjde/completion/Struts2Configure.java	/^	public void toOut() {$/;"	m	class:Struts2Configure	access:public	signature:()
Struts2Configure.webapp	.vim/src/vjde/completion/Struts2Configure.java	/^	String webapp;$/;"	f	class:Struts2Configure	access:default
Struts2Configure.xpath	.vim/src/vjde/completion/Struts2Configure.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Configure	access:default
Struts2ConfigureMain	.vim/src/vjde/completion/Struts2ConfigureMain.java	/^public class Struts2ConfigureMain {$/;"	c
Struts2ConfigureMain.main	.vim/src/vjde/completion/Struts2ConfigureMain.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2ConfigureMain	access:public	signature:(String[] args)
Struts2Simple	.vim/src/vjde/completion/Struts2Simple.java	/^	public Struts2Simple(String webapp,String path)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp,String path)
Struts2Simple	.vim/src/vjde/completion/Struts2Simple.java	/^public class Struts2Simple {$/;"	c
Struts2Simple.MyAction	.vim/src/vjde/completion/Struts2Simple.java	/^	private static class MyAction {$/;"	c	class:Struts2Simple	access:private
Struts2Simple.MyAction.MyAction	.vim/src/vjde/completion/Struts2Simple.java	/^		public MyAction(Action a, String sp,String m,String k) {$/;"	m	class:Struts2Simple.MyAction	access:public	signature:(Action a, String sp,String m,String k)
Struts2Simple.MyAction.action	.vim/src/vjde/completion/Struts2Simple.java	/^		public Action action;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.klass	.vim/src/vjde/completion/Struts2Simple.java	/^		public String klass;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.method	.vim/src/vjde/completion/Struts2Simple.java	/^		public String method;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.space	.vim/src/vjde/completion/Struts2Simple.java	/^		public String space;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.MyAction.url	.vim/src/vjde/completion/Struts2Simple.java	/^		public String url;$/;"	f	class:Struts2Simple.MyAction	access:public
Struts2Simple.Struts2Simple	.vim/src/vjde/completion/Struts2Simple.java	/^	public Struts2Simple(String webapp,String path)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp,String path)
Struts2Simple.action2List	.vim/src/vjde/completion/Struts2Simple.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction a)
Struts2Simple.actionpkg	.vim/src/vjde/completion/Struts2Simple.java	/^	String actionpkg;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.actions	.vim/src/vjde/completion/Struts2Simple.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Simple	access:default
Struts2Simple.actions2vim	.vim/src/vjde/completion/Struts2Simple.java	/^	public String actions2vim() {$/;"	m	class:Struts2Simple	access:public	signature:()
Struts2Simple.classname	.vim/src/vjde/completion/Struts2Simple.java	/^	String classname;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.classpath	.vim/src/vjde/completion/Struts2Simple.java	/^	String classpath;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.compareUrl	.vim/src/vjde/completion/Struts2Simple.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Simple	access:public	signature:(String source,String actionurl)
Struts2Simple.currentPkg	.vim/src/vjde/completion/Struts2Simple.java	/^	String currentPkg=null;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.db	.vim/src/vjde/completion/Struts2Simple.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.dcl	.vim/src/vjde/completion/Struts2Simple.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.destUrl	.vim/src/vjde/completion/Struts2Simple.java	/^    String destUrl=null;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.expkg	.vim/src/vjde/completion/Struts2Simple.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.expriclude	.vim/src/vjde/completion/Struts2Simple.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.exprpackage	.vim/src/vjde/completion/Struts2Simple.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.factory	.vim/src/vjde/completion/Struts2Simple.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Simple	access:default
Struts2Simple.findInclues	.vim/src/vjde/completion/Struts2Simple.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
Struts2Simple.findInxml	.vim/src/vjde/completion/Struts2Simple.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Simple	access:public	signature:()
Struts2Simple.findPackages	.vim/src/vjde/completion/Struts2Simple.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
Struts2Simple.findStruts2	.vim/src/vjde/completion/Struts2Simple.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
Struts2Simple.findWeb	.vim/src/vjde/completion/Struts2Simple.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
Struts2Simple.findXml	.vim/src/vjde/completion/Struts2Simple.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Simple	access:public	signature:(String xml)
Struts2Simple.handleXml	.vim/src/vjde/completion/Struts2Simple.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
Struts2Simple.main	.vim/src/vjde/completion/Struts2Simple.java	/^    public static void main(String args[]) {$/;"	m	class:Struts2Simple	access:public	signature:(String args[])
Struts2Simple.onPackage	.vim/src/vjde/completion/Struts2Simple.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Simple	access:public	signature:(Element pkg)
Struts2Simple.onResult	.vim/src/vjde/completion/Struts2Simple.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Simple	access:public	signature:(Element act)
Struts2Simple.result2Dict	.vim/src/vjde/completion/Struts2Simple.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction action)
Struts2Simple.toOut	.vim/src/vjde/completion/Struts2Simple.java	/^	public void toOut() {$/;"	m	class:Struts2Simple	access:public	signature:()
Struts2Simple.webapp	.vim/src/vjde/completion/Struts2Simple.java	/^	String webapp;$/;"	f	class:Struts2Simple	access:default
Struts2Simple.xpath	.vim/src/vjde/completion/Struts2Simple.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Simple	access:default
SubComplete	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:SubComplete(A,L,P)$/;"	f
Subst	.vim_runtime/sources_non_forked/ale/ale_linters/prolog/swipl.vim	/^function! s:Subst(format, vars) abort$/;"	f
Subvert	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert$/;"	c
SuperTab	.vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTab	.vim/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	.vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabAlternateCompletion	.vim/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	.vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys, ...) " {{{$/;"	f
SuperTabChain	.vim/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys) " {{{$/;"	f
SuperTabCodeComplete	.vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabCodeComplete	.vim/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	.vim/bundle/supertab/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabHelp	.vim/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	.vim/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	.vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabLongestHighlight	.vim/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	.vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetCompletionType	.vim/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	.vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	.vim/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
SwitchRegion	.vim/plugin/code_complete.vim	/^function! SwitchRegion()$/;"	f
SwitchWindow	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SynAt	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
SynFold	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SyntaxCheckers_rust_cargo_GetLocList	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/cargo.vim	/^function! SyntaxCheckers_rust_cargo_GetLocList() dict$/;"	f
SyntaxCheckers_rust_cargo_IsAvailable	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/cargo.vim	/^function! SyntaxCheckers_rust_cargo_IsAvailable() dict$/;"	f
SyntaxCheckers_rust_rustc_GetLocList	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_GetLocList() dict$/;"	f
SyntaxInclude	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:SyntaxInclude(filetype)$/;"	f
SyntaxName	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
SystemError	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
T	.vim/src/vjde/completion/ClassInfo.java	/^  public static final String T = "t";$/;"	f	class:ClassInfo	access:public
T	.vim/src/vjde/completion/Completion.java	/^  public static final String T = "t";$/;"	f	class:Completion	access:public
TAB	.vim/src/readtags.c	28;"	d	file:
TAG_FOLDSORTED	.vim/src/readtags.h	/^    TAG_UNSORTED, TAG_SORTED, TAG_FOLDSORTED$/;"	e	enum:__anon5
TAG_FULLMATCH	.vim/src/readtags.h	38;"	d
TAG_IGNORECASE	.vim/src/readtags.h	42;"	d
TAG_NAME	.vim/src/previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
TAG_OBSERVECASE	.vim/src/readtags.h	41;"	d
TAG_PARTIALMATCH	.vim/src/readtags.h	39;"	d
TAG_SORTED	.vim/src/readtags.h	/^    TAG_UNSORTED, TAG_SORTED, TAG_FOLDSORTED$/;"	e	enum:__anon5
TAG_UNSORTED	.vim/src/readtags.h	/^    TAG_UNSORTED, TAG_SORTED, TAG_FOLDSORTED$/;"	e	enum:__anon5
TAG_VAL	.vim/src/previewwindow.cpp	/^	enum COLUM { TAG_NAME,RET_VAL,COMMENT,TAG_VAL };$/;"	e	enum:COLUM	file:
TBrowseOutput	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -nargs=1 -complete=command TBrowseOutput call tlib#cmd#BrowseOutput(<q-args>)$/;"	c
TBrowseScriptnames	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -nargs=0 -complete=command TBrowseScriptnames call tlib#cmd#TBrowseScriptnames()$/;"	c
TLet	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -nargs=+ TLet if !exists(matchstr(<q-args>, '^[^=[:space:]]\\+')) | exec 'let '. <q-args> | endif$/;"	c
TLib	.vim_runtime/sources_non_forked/tlib/autoload/tlib/autocmdgroup.vim	/^augroup TLib$/;"	a
TOVLWrite	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^augroup TOVLWrite$/;"	a
TScratch	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -bar -nargs=* -bang TScratch call tlib#scratch#UseScratch({'scratch_split': empty('<bang>'), <args>})$/;"	c
TVarArg	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -nargs=+ TVarArg exec tlib#arg#Let([<args>])$/;"	c
TabFormatItem	rainbow/log.cpp	/^     TabFormatItem(const std::string& str = "") {}$/;"	f	class:rainbow::TabFormatItem	access:public	signature:(const std::string& str = ”)
TabFormatItem	rainbow/log.cpp	/^class TabFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
TableFormat	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer TableFormat call s:TableFormat()$/;"	c
TableFormat	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:TableFormat()$/;"	f
Tabularize	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^function! Tabularize(command, ...) range$/;"	f
TagFailure	.vim/src/readtags.h	/^typedef enum { TagFailure = 0, TagSuccess = 1 } tagResult;$/;"	e	enum:__anon6
TagFileName	.vim/src/readtags.c	/^static const char *TagFileName = "tags";$/;"	v	file:
TagList_IsValid	.vim/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	.vim/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	.vim/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	.vim/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagPopupList	.vim/autoload/omni/cpp/complete.vim	/^function! s:TagPopupList(szTypeName, szBase)$/;"	f
TagSuccess	.vim/src/readtags.h	/^typedef enum { TagFailure = 0, TagSuccess = 1 } tagResult;$/;"	e	enum:__anon6
TagUnderCursor	.vim/ftplugin/xml.vim	/^fun! s:TagUnderCursor()$/;"	f
TearDown	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
Temp	.vim/src/readtags.c	/^static const char *Temp=NULL;$/;"	v	file:
TempCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TempCmd(out, cmd) abort$/;"	f
TempDelete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDelete(file) abort$/;"	f
TempReadPost	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
TempReadPre	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
TempScript	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TempScript(...) abort$/;"	f
TempState	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
TemporaryFilename	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! s:TemporaryFilename(buffer) abort$/;"	f
TemporaryPSScript	.vim_runtime/sources_non_forked/ale/autoload/ale/powershell.vim	/^function! s:TemporaryPSScript(buffer, input) abort$/;"	f
TestArgs	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^function! TestArgs(...) "{{{3$/;"	f
TestArgs1	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^function! TestArgs1(...) "{{{3$/;"	f
TestArgs2	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^function! TestArgs2(...) "{{{3$/;"	f
TestArgs3	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^function! TestArgs3(...)$/;"	f
TestGetArg	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^function! TestGetArg(...) "{{{3$/;"	f
TestGetArg1	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^function! TestGetArg1(...) "{{{3$/;"	f
TestSuperTabCodeComplete	.vim/bundle/supertab/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
TestSuperTabCodeComplete	.vim/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
TestSyntax	.vim_runtime/sources_non_forked/vim-ruby/spec/vim/plugin/syntax_test.vim	/^function! TestSyntax(pattern, group) abort$/;"	f
Test_add_lines	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_common_prefix	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_prefix()$/;"	f
Test_common_suffix	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_suffix()$/;"	f
Test_diff_highlight	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_diff_highlight()$/;"	f
Test_edit_file_with_same_name_as_a_branch	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_empty_file	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_empty_file()$/;"	f
Test_encoding	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_file_added_to_git	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_leading_dash	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_umlaut	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_umlaut()$/;"	f
Test_filename_with_equals	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fix_file_references	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_foldtext	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_foldtext()$/;"	f
Test_follow_symlink	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_hunk_outside_noop	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_stage_partial_cmd_added	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_cmd_added()$/;"	f
Test_hunk_stage_partial_preview_added	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added()$/;"	f
Test_hunk_stage_partial_preview_added_removed	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added_removed()$/;"	f
Test_hunk_stage_partial_visual_added	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_visual_added()$/;"	f
Test_hunk_stage_preview_write	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_preview_write()$/;"	f
Test_hunk_undo	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_hunk_undo_dos	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo_dos()$/;"	f
Test_inner_text_object	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_keep_alt	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_lcs	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_lcs()$/;"	f
Test_modify_lines	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_overlapping_hunk_op	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunk_op()$/;"	f
Test_overlapping_hunks	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunks()$/;"	f
Test_preview	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview()$/;"	f
Test_preview_dos	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview_dos()$/;"	f
Test_priority	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_priority()$/;"	f
Test_quickfix	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_quickfix()$/;"	f
Test_remove_first_lines	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_split	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_split()$/;"	f
Test_undo_nearby_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_user_autocmd	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_option	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
TextObject	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^function! <Sid>TextObject(inner, incbelow, vis, range, count)$/;"	f
Thread	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	p	signature:(const Thread&&)
Thread	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	p	signature:(std::function<void()> cb, const std::string& name)
Thread	rainbow/thread.cpp	/^Thread::Thread(std::function<void()> cb, const std::string& name) $/;"	f	class:rainbow::Thread	signature:(std::function<void()> cb, const std::string& name)
Thread	rainbow/thread.h	/^    Thread(const Thread&&) = delete;$/;"	p	class:rainbow::Thread	access:private	signature:(const Thread&&)
Thread	rainbow/thread.h	/^    Thread(const Thread&) = delete;$/;"	p	class:rainbow::Thread	access:private	signature:(const Thread&)
Thread	rainbow/thread.h	/^    Thread(std::function<void()> cb, const std::string& name);$/;"	p	class:rainbow::Thread	access:public	signature:(std::function<void()> cb, const std::string& name)
Thread	rainbow/thread.h	/^class Thread {$/;"	c	namespace:rainbow
ThreadIdFormatItem	rainbow/log.cpp	/^    ThreadIdFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::ThreadIdFormatItem	access:public	signature:(const std::string str = ”)
ThreadIdFormatItem	rainbow/log.cpp	/^class ThreadIdFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
TimerHandler	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:TimerHandler(...) abort$/;"	f
Tlibassert	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -nargs=+ -bang -bar Tlibassert :$/;"	c
Tlibtrace	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -nargs=+ -bang -bar Tlibtrace :$/;"	c
Tlibtraceset	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^command! -nargs=+ -bang -bar Tlibtraceset call tlib#trace#Set(<q-args>)$/;"	c
Tlist	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	.vim/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	.vim/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	.vim/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	.vim/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	.vim/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	.vim/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	.vim/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	.vim/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	.vim/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	.vim/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	.vim/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	.vim/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	.vim/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	.vim/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	.vim/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	.vim/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	.vim/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	.vim/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	.vim/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	.vim/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	.vim/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	.vim/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	.vim/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	.vim/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	.vim/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	.vim/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	.vim/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	.vim/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	.vim/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	.vim/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	.vim/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	.vim/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	.vim/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	.vim/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	.vim/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	.vim/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	.vim/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	.vim/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	.vim/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	.vim/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	.vim/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	.vim/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	.vim/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	.vim/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
ToString	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.h	/^/;"	p	signature:(LogLevel::Level level)
ToString	rainbow/log.cpp	/^const char* LogLevel::ToString(LogLevel::Level level) {$/;"	f	class:rainbow::LogLevel	signature:(LogLevel::Level level)
ToString	rainbow/log.h	/^    static const char* ToString(LogLevel::Level level);$/;"	p	class:rainbow::LogLevel	access:public	signature:(LogLevel::Level level)
Toc	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Toc call s:Toc()$/;"	c
Toc	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:Toc(...)$/;"	f
Toch	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Toch call s:Toc('horizontal')$/;"	c
Toct	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Toct call s:Toc('tab')$/;"	c
Tocv	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Tocv call s:Toc('vertical')$/;"	c
TogBG	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleBG	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleBufExplorer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^command! ToggleBufExplorer :call ToggleBufExplorer()$/;"	c
ToggleBufExplorer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! ToggleBufExplorer()$/;"	f
ToggleByFname	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFindActive	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ToggleFindActive()$/;"	f
ToggleFocus	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleHelp	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ToggleHelp()$/;"	f
ToggleKeyLoop	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMRURelative	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleOnlyOneTab	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ToggleOnlyOneTab()$/;"	f
ToggleRegex	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleShowRelativePath	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ToggleShowRelativePath()$/;"	f
ToggleShowTabBuffer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ToggleShowTabBuffer()$/;"	f
ToggleShowUnlisted	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ToggleShowUnlisted()$/;"	f
ToggleSplitOutPathName	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:ToggleSplitOutPathName()$/;"	f
ToggleTabTreeVCS	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
ToggleType	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
Token	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^function s:Token()$/;"	f
TokensToString	.vim/autoload/omni/cpp/items.vim	/^function! s:TokensToString(tokens)$/;"	f
ToolBar.togglebg	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
ToolItems	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolItems(state, from, to, offsets, text, ...) abort$/;"	f
ToolParse	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolParse(state, line) abort$/;"	f
ToolStream	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolStream(line1, line2, range, bang, mods, options, args, state) abort$/;"	f
ToolToFrom	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolToFrom(str) abort$/;"	f
Tree	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
Tree	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
TreeChomp	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getCascadeRoot	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
TreeDirNode.getChild	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findSibling	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openExplorer	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
TreeFileNode.openInNewTab	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreeInfo	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
Trim	.vim_runtime/sources_non_forked/ale/ale_linters/prolog/swipl.vim	/^function! s:Trim(str) abort$/;"	f
Trim	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:Trim(ln)$/;"	f
TrimTrailingWhitespace	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:TrimTrailingWhitespace() " {{{1$/;"	f
TypeFinder	.vim/src/TypeFinder.cs	/^    public class TypeFinder$/;"	c	namespace:Wangfc	access:public
U	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
U	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^    nnoremap <silent> U     :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
UI.IndentWid	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
UI.centerView	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
UI.getPath	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UNKNOW	rainbow/log.h	/^        UNKNOW = 0,$/;"	e	enum:rainbow::LogLevel::Level
UndoHighlightLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! s:UndoHighlightLine() "{{{3$/;"	f
Uniq	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
UnplaceMarkers	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! s:UnplaceMarkers()  " {{{$/;"	f
Update	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UpdateCacheIfNecessary	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! s:UpdateCacheIfNecessary(buffer) abort$/;"	f
UpdateCapabilities	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! s:UpdateCapabilities(conn, capabilities) abort$/;"	f
UpdateCursor	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! s:UpdateCursor(cursor, start, end, offset) abort$/;"	f
UpdateHelpStatus	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:UpdateHelpStatus()$/;"	f
UpdateIndex	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:UpdateIndex(dir, info) abort$/;"	f
UpdateLineNumbers	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! s:UpdateLineNumbers(buffer, current_sign_list, loclist) abort$/;"	f
UpdateMakePrg	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateMenu	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! s:UpdateMenu(data, menu_items) abort$/;"	f
UpdateTabBufData	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:UpdateTabBufData(bufnr)$/;"	f
UsableWin	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
Usage	.vim/src/readtags.c	/^const char *const Usage =$/;"	v
UseConfigFiles	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles() abort " Apply config to the current buffer {{{1$/;"	f
UseConfigFiles_ExternalCommand	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_ExternalCommand()$/;"	f
UseConfigFiles_VimCore	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_VimCore()$/;"	f
UserCmd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
UserCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommand(...) abort$/;"	f
UserCommandCwd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandCwd(dir) abort$/;"	f
UserCommandList	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
UsingFinder	.vim/src/UsingFinder.cs	/^    public class UsingFinder$/;"	c	namespace:Wangfc	access:public
UsingListMappings	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:UsingListMappings() "{{{$/;"	f
UsingLocList	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:UsingLocList() "{{{$/;"	f
UsingModule	.vim_runtime/sources_non_forked/ale/ale_linters/python/flake8.vim	/^function! s:UsingModule(buffer) abort$/;"	f
VERSION	.vim_runtime/sources_non_forked/vim-coffee-script/Makefile	/^VERSION = $(shell git describe --always $(REF))$/;"	m
VIMDIR	.vim_runtime/sources_non_forked/vim-markdown/Makefile	/^VIMDIR=$(DESTDIR)\/usr\/share\/vim$/;"	m
Validate	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! s:Validate(def, name, value) abort "{{{3$/;"	f
Value	.vim/src/readtags.c	/^static const char *Value=NULL;$/;"	v	file:
Ve	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
VersionAwareNetrwBrowseX	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:VersionAwareNetrwBrowseX(url)$/;"	f
VersionCheck	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:VersionCheck() abort$/;"	f
VimCloseCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! s:VimCloseCallback(channel) abort$/;"	f
VimErrorCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! s:VimErrorCallback(channel, data) abort$/;"	f
VimExitCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! s:VimExitCallback(job, exit_code) abort$/;"	f
VimOutputCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
VimOutputCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
VisMove	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^function! s:VisMove(f)$/;"	f
VisualSelection	.vim_runtime/vimrcs/basic.vim	/^function! VisualSelection(direction, extra_filter) range$/;"	f
VjdeCSCompletion	.vim/src/vjde_cs_completion.vim	/^func! VjdeCSCompletion(findstart,base)$/;"	f
VjdeCSCompletionVIM	.vim/src/vjde_cs_completion.vim	/^func! VjdeCSCompletionVIM(usingstr)$/;"	f
VjdeCSCompletion_FindClass	.vim/src/vjde_cs_completion.vim	/^func! VjdeCSCompletion_FindClass(name,imptstr,...) dict $/;"	f
VjdeCSCompletion_New	.vim/src/vjde_cs_completion.vim	/^func! VjdeCSCompletion_New(cmd,path) $/;"	f
VjdeCSGetTypeName	.vim/src/vjde_cs_completion.vim	/^func! s:VjdeCSGetTypeName(var) $/;"	f
VjdeCSGetUsing	.vim/src/vjde_cs_completion.vim	/^func! VjdeCSGetUsing() $/;"	f
VjdeCsCompletionUsing	.vim/src/vjde_cs_completion.vim	/^func! s:VjdeCsCompletionUsing(l,b)$/;"	f
VjdeCsFindUsing	.vim/src/vjde_cs_completion.vim	/^func! VjdeCsFindUsing()$/;"	f
VjdeGeneratePerviewMenu	.vim/src/vjde_cs_completion.vim	/^func! s:VjdeGeneratePerviewMenu(base)$/;"	f
Vopen	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
VundleClean	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          VundleClean   PluginClean<bang>$/;"	c
VundleDocs	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                VundleDocs    PluginDocs$/;"	c
VundleInstall	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleInstall PluginInstall<bang> <args>$/;"	c
VundleSearch	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleSearch  PluginSearch<bang> <args>$/;"	c
VundleUpdate	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         VundleUpdate  PluginInstall!$/;"	c
VundleUpdate	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=*       -complete=custom,vundle#scripts#complete VundleUpdate  PluginInstall! <args>$/;"	c
Vvsplit	.vim_runtime/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
W	.vim_runtime/vimrcs/basic.vim	/^command! W execute 'w !sudo tee % > \/dev\/null' <bar> edit!$/;"	c
WARN	rainbow/log.h	/^        WARN = 3,$/;"	e	enum:rainbow::LogLevel::Level
Wangfc	.vim/src/CSParser.cs	/^namespace Wangfc {$/;"	n
Wangfc	.vim/src/TypeFinder.cs	/^namespace Wangfc$/;"	n
Wangfc	.vim/src/UsingFinder.cs	/^namespace Wangfc$/;"	n
Wangfc.CSParser	.vim/src/CSParser.cs	/^	public class CSParser {$/;"	c	namespace:Wangfc	access:public
Wangfc.CSParser.Main	.vim/src/CSParser.cs	/^		public static void Main(string[] argv) {$/;"	m	class:Wangfc.CSParser	access:public	signature:(string[] argv)
Wangfc.CSParser.bas	.vim/src/CSParser.cs	/^            static string bas=null;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.CSParser.findType	.vim/src/CSParser.cs	/^        private static void findType() {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:()
Wangfc.CSParser.genModule	.vim/src/CSParser.cs	/^        private static Boolean genModule(Module m) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Module m)
Wangfc.CSParser.genType	.vim/src/CSParser.cs	/^        private static void genType(Type t ) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Type t )
Wangfc.CSParser.libs	.vim/src/CSParser.cs	/^            static string[] libs ;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.CSParser.nss	.vim/src/CSParser.cs	/^            static string[] nss  ;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.CSParser.tn	.vim/src/CSParser.cs	/^            static string tn = null;$/;"	f	class:Wangfc.CSParser	file:	access:private
Wangfc.TypeFinder	.vim/src/TypeFinder.cs	/^    public class TypeFinder$/;"	c	namespace:Wangfc	access:public
Wangfc.TypeFinder.Main	.vim/src/TypeFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.TypeFinder	access:public	signature:(string[] argv)
Wangfc.TypeFinder.bas	.vim/src/TypeFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.TypeFinder.findType	.vim/src/TypeFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.TypeFinder	access:public	signature:()
Wangfc.TypeFinder.libs	.vim/src/TypeFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.TypeFinder.nss	.vim/src/TypeFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.TypeFinder.tn	.vim/src/TypeFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
Wangfc.UsingFinder	.vim/src/UsingFinder.cs	/^    public class UsingFinder$/;"	c	namespace:Wangfc	access:public
Wangfc.UsingFinder.Main	.vim/src/UsingFinder.cs	/^        public static void Main(string[] argv)$/;"	m	class:Wangfc.UsingFinder	access:public	signature:(string[] argv)
Wangfc.UsingFinder.bas	.vim/src/UsingFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
Wangfc.UsingFinder.findType	.vim/src/UsingFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.UsingFinder	access:public	signature:()
Wangfc.UsingFinder.libs	.vim/src/UsingFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
Wangfc.UsingFinder.nss	.vim/src/UsingFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
Wangfc.UsingFinder.tn	.vim/src/UsingFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
Warn	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! s:Warn(msg) "{{{$/;"	f
Warning	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^function! s:Warning(msg)$/;"	f
Warnings	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function s:Warnings()$/;"	f
WillComplete	.vim/bundle/supertab/plugin/supertab.vim	/^function! s:WillComplete(...) " {{{$/;"	f
WillComplete	.vim/plugin/supertab.vim	/^function! s:WillComplete(...) " {{{$/;"	f
WinFindBuf	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! s:WinFindBuf(buffer) abort$/;"	f
WinMain	.vim/src/lex.yy.c	/^int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance,$/;"	f	signature:(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, int iCmdShow)
WinMain	.vim/src/tipswnd.c	/^int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance,$/;"	f	signature:(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, int iCmdShow)
WinShellEsc	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:WinShellEsc(arg) abort$/;"	f
Window.Toggle\	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
WithPath	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
WndProc	.vim/src/lex.yy.c	/^LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	signature:(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
WndProc	.vim/src/tipswnd.c	/^LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	signature:(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
WriteLock	rainbow/thread.h	/^    typedef WriteScopedLockImpl<RWMutex> WriteLock;$/;"	t	class:rainbow::RWMutex	access:public
WriteScopedLockImpl	rainbow/thread.h	/^    WriteScopedLockImpl(T& mutex)$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:(T& mutex)
WriteScopedLockImpl	rainbow/thread.h	/^struct WriteScopedLockImpl {$/;"	s	namespace:rainbow
X	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/blocks_spec.rb	/^      module X$/;"	m
XML_menu_autos	.vim/ftplugin/xml.vim	/^augroup XML_menu_autos$/;"	a
XVFB_ERRORFILE	.vim_runtime/sources_non_forked/vim-python-pep8-indent/Makefile	/^test_docker: XVFB_ERRORFILE:=\/dev\/null$/;"	m
XX	rainbow/log.cpp	14;"	d	file:
XX	rainbow/log.cpp	24;"	d	file:
XX	rainbow/log.cpp	32;"	d	file:
XX	rainbow/log.cpp	448;"	d	file:
XX	rainbow/log.cpp	462;"	d	file:
XX	rainbow/log.cpp	49;"	d	file:
XX_PM	tests/test_config.cpp	180;"	d	file:
Xml.BlockTag\	.vim/ftplugin/xml.vim	/^	vmenu <script> Xml.BlockTag\\ inline<Tab>v  <Esc>:call <SID>BlockTag(0)<CR>$/;"	m
Xml.Change<Tab>c	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Change<Tab>c  <C-C>:call <SID>Change()<CR>$/;"	m
Xml.Change<Tab>c	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Change<Tab>c  :call <SID>Change()<CR>$/;"	m
Xml.Change\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Change\\ Whole\\ Tag<Tab>C  <C-C>:call <SID>ChangeWholeTag()<CR>$/;"	m
Xml.Change\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Change\\ Whole\\ Tag<Tab>C  :call <SID>ChangeWholeTag()<CR>$/;"	m
Xml.Comment<Tab><	.vim/ftplugin/xml.vim	/^	vmenu <script> Xml.Comment<Tab>< <Esc>:call <SID>BlockWith('<!--','-->')<Cr>$/;"	m
Xml.Comment\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Comment\\ Tag<Tab>= <Esc>:call <SID>CommentTag()<Cr>$/;"	m
Xml.Comment\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Comment\\ Tag<Tab>= <Esc>:call <SID>CommentTag()<Cr>$/;"	m
Xml.Comment\	.vim/ftplugin/xml.vim	/^	vmenu <script> Xml.Comment\\ With\\ CData<Tab>c <Esc>:call <SID>BlockWith('<![CDATA[',']]>')<Cr>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Delete\\ CData<Tab>[  <C-C>:call <SID>DelCData()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Delete\\ CData\\ Section<Tab>[  <C-C>:call <SID>DelCDataSection()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Delete\\ Comment<Tab>]  <C-C>:call <SID>DelComment()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Delete\\ Comment\\ Section<Tab>}  <C-C>:call <SID>DelCommentSection()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Delete\\ Section<Tab>D  <C-C>:call <SID>DeleteSection()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Delete\\ Tag<Tab>d  <C-C>:call <SID>Delete()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Delete\\ CData<Tab>[  :call <SID>DelCData()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Delete\\ CData\\ Section<Tab>[  :call <SID>DelCDataSection()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Delete\\ Comment<Tab>]  :call <SID>DelComment()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Delete\\ Comment\\ Section<Tab>}  :call <SID>DelCommentSection()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Delete\\ Section<Tab>D  :call <SID>DeleteSection()<CR>$/;"	m
Xml.Delete\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Delete\\ Tag<Tab>d  :call <SID>Delete()<CR>$/;"	m
Xml.End\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.End\\ Tag<Tab>e  <C-C>:call <SID>EndTag()<CR>$/;"	m
Xml.End\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.End\\ Tag<Tab>e  :call <SID>EndTag()<CR>$/;"	m
Xml.Fold\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Fold\\ All\\ Tags<Tab>F  :call <SID>FoldTagAll()<CR>$/;"	m
Xml.Fold\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Fold\\ CData  :?<!\\[CDATA\\[?,\/\\]\\]>\/fo<CR>$/;"	m
Xml.Fold\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Fold\\ Comment  :?<!--?,\/-->\/fo<CR>$/;"	m
Xml.Fold\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Fold\\ Processing\\ instruc  :?<\\?[a-zA-Z]*?,\/?>\/fo<CR>$/;"	m
Xml.Fold\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Fold\\ Tag<Tab>f  :call <SID>FoldTag()<CR>$/;"	m
Xml.Format\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Format\\ All\\ Tags<Tab>G  :call <SID>FormatTagAll()<CR>$/;"	m
Xml.Format\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Format\\ Tags<Tab>g  :call <SID>FormatTag()<CR>$/;"	m
Xml.Insert\	.vim/ftplugin/xml.vim	/^	vmenu <script> Xml.Insert\\ listitem<Tab>l <Esc>:call <SID>vlistitem()<CR>$/;"	m
Xml.Join<Tab>j	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Join<Tab>j  <C-C>:call <SID>Join()<CR>$/;"	m
Xml.Join<Tab>j	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Join<Tab>j  :call <SID>Join()<CR>$/;"	m
Xml.Match<Tab>5	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Match<Tab>5  <C-C>:call <SID>Matches()<CR><C-\\><C-G>$/;"	m
Xml.Match<Tab>5	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Match<Tab>5  :call <SID>Matches()<CR>$/;"	m
Xml.Open\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Open\\ After\\ Tag<Tab>O  <C-C>:call <SID>AfterTag()<CR>$/;"	m
Xml.Open\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Open\\ After\\ Tag<Tab>O  :call <SID>AfterTag()<CR>$/;"	m
Xml.Shift\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Shift\\ Left<Tab><  <C-C>:call <SID>ShiftLeft()<CR><C-\\><C-G>$/;"	m
Xml.Shift\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Shift\\ Right<Tab>>  <C-C>:call <SID>ShiftRight()<CR><C-\\><C-G>$/;"	m
Xml.Shift\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Shift\\ Left<Tab><  :call <SID>ShiftLeft()<CR>$/;"	m
Xml.Shift\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Shift\\ Right<Tab>>  :call <SID>ShiftRight()<CR>$/;"	m
Xml.Start\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.Start\\ Tag<Tab>s  <C-C>:call <SID>StartTag()<CR><C-\\><C-G>$/;"	m
Xml.Start\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.Start\\ Tag<Tab>s  :call <SID>StartTag()<CR>$/;"	m
Xml.open\	.vim/ftplugin/xml.vim	/^	imenu <script> Xml.open\\ Before\\ Tag<Tab>o  <C-C>:call <SID>BeforeTag()<CR>$/;"	m
Xml.open\	.vim/ftplugin/xml.vim	/^	nmenu <script> Xml.open\\ Before\\ Tag<Tab>o  :call <SID>BeforeTag()<CR>$/;"	m
XmlInstallDocumentation	.vim/ftplugin/xml.vim	/^function! s:XmlInstallDocumentation(full_name, revision)$/;"	f
YYSTATE	.vim/src/lex.yy.c	86;"	d	file:
YY_AT_BOL	.vim/src/lex.yy.c	262;"	d	file:
YY_BREAK	.vim/src/lex.yy.c	875;"	d	file:
YY_BUFFER_EOF_PENDING	.vim/src/lex.yy.c	198;"	d	file:
YY_BUFFER_NEW	.vim/src/lex.yy.c	186;"	d	file:
YY_BUFFER_NORMAL	.vim/src/lex.yy.c	187;"	d	file:
YY_BUFFER_STATE	.vim/src/lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	.vim/src/lex.yy.c	97;"	d	file:
YY_CHAR	.vim/src/lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	.vim/src/lex.yy.c	207;"	d	file:
YY_DECL	.vim/src/lex.yy.c	863;"	d	file:
YY_DO_BEFORE_ACTION	.vim/src/lex.yy.c	278;"	d	file:
YY_END_OF_BUFFER	.vim/src/lex.yy.c	286;"	d	file:
YY_END_OF_BUFFER_CHAR	.vim/src/lex.yy.c	94;"	d	file:
YY_EXIT_FAILURE	.vim/src/lex.yy.c	1956;"	d	file:
YY_FATAL_ERROR	.vim/src/lex.yy.c	856;"	d	file:
YY_FLEX_MAJOR_VERSION	.vim/src/lex.yy.c	8;"	d	file:
YY_FLEX_MINOR_VERSION	.vim/src/lex.yy.c	9;"	d	file:
YY_FLUSH_BUFFER	.vim/src/lex.yy.c	236;"	d	file:
YY_INPUT	.vim/src/lex.yy.c	703;"	d	file:
YY_INPUT	.vim/src/lex.yy.c	823;"	d	file:
YY_MORE_ADJ	.vim/src/lex.yy.c	685;"	d	file:
YY_NEW_FILE	.vim/src/lex.yy.c	92;"	d	file:
YY_NO_POP_STATE	.vim/src/lex.yy.c	786;"	d	file:
YY_NO_PUSH_STATE	.vim/src/lex.yy.c	785;"	d	file:
YY_NO_TOP_STATE	.vim/src/lex.yy.c	787;"	d	file:
YY_NULL	.vim/src/lex.yy.c	66;"	d	file:
YY_NUM_RULES	.vim/src/lex.yy.c	285;"	d	file:
YY_PROTO	.vim/src/lex.yy.c	60;"	d	file:
YY_PROTO	.vim/src/lex.yy.c	62;"	d	file:
YY_READ_BUF_SIZE	.vim/src/lex.yy.c	807;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	.vim/src/lex.yy.c	686;"	d	file:
YY_RULE_SETUP	.vim/src/lex.yy.c	878;"	d	file:
YY_SC_TO_UI	.vim/src/lex.yy.c	73;"	d	file:
YY_START	.vim/src/lex.yy.c	85;"	d	file:
YY_START_STACK_INCR	.vim/src/lex.yy.c	851;"	d	file:
YY_STATE_EOF	.vim/src/lex.yy.c	89;"	d	file:
YY_USER_ACTION	.vim/src/lex.yy.c	870;"	d	file:
YY_USE_CONST	.vim/src/lex.yy.c	31;"	d	file:
YY_USE_CONST	.vim/src/lex.yy.c	38;"	d	file:
YY_USE_CONST	.vim/src/lex.yy.c	48;"	d	file:
YY_USE_PROTOS	.vim/src/lex.yy.c	28;"	d	file:
YY_USE_PROTOS	.vim/src/lex.yy.c	37;"	d	file:
YY_USE_PROTOS	.vim/src/lex.yy.c	49;"	d	file:
YankLine	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:YankLine(...)$/;"	f
Yanks	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^command! -nargs=0 Yanks call s:show_yanks()$/;"	c
Yankstack	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! g:Yankstack()$/;"	f
[M	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR>$/;"	m
[[	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[]	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[m	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR>$/;"	m
]M	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
][	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
]]	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
]m	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
_	.vim_runtime/sources_non_forked/vim-expand-region/plugin/expand_region.vim	/^  nmap _ <Plug>(expand_region_shrink)$/;"	m
_	.vim_runtime/sources_non_forked/vim-expand-region/plugin/expand_region.vim	/^  vmap _ <Plug>(expand_region_shrink)$/;"	m
_DL_EXPORT	.vim/src/lex.yy.c	697;"	d	file:
_DL_EXPORT	.vim/src/lex.yy.c	699;"	d	file:
_DL_EXPORT	.vim/src/previewwindow.cpp	18;"	d	file:
_DL_EXPORT	.vim/src/previewwindow.cpp	20;"	d	file:
_DL_EXPORT	.vim/src/tipswnd.c	10;"	d	file:
_DL_EXPORT	.vim/src/tipswnd.c	8;"	d	file:
_PREVIEWWINDOW_HPP	.vim/src/previewwindow.hpp	2;"	d
_Rectangle	.vim/src/previewwindow.cpp	/^	typedef struct _Rectangle {$/;"	s	file:
_Rectangle::height	.vim/src/previewwindow.cpp	/^		int height;$/;"	m	struct:_Rectangle	file:	access:public
_Rectangle::width	.vim/src/previewwindow.cpp	/^		int width;$/;"	m	struct:_Rectangle	file:	access:public
_Rectangle::x	.vim/src/previewwindow.cpp	/^		int x;$/;"	m	struct:_Rectangle	file:	access:public
_Rectangle::y	.vim/src/previewwindow.cpp	/^		int y;$/;"	m	struct:_Rectangle	file:	access:public
__RAINBOW_CONFIG_H__	rainbow/config.h	2;"	d
__RAINBOW_LOG_H	rainbow/log.h	2;"	d
__RAINBOW_RAINBOW_H__	rainbow/rainbow.h	2;"	d
__RAINBOW_SINGLETON_H_	rainbow/singleton.h	2;"	d
__RAINBOW_THREAD_H__	rainbow/thread.h	2;"	d
__RAINBOW_UTIL_H_	rainbow/util.h	2;"	d
__anon11::key	.vim/src/readtags.h	/^	const char *key;$/;"	m	struct:__anon11	access:public
__anon11::value	.vim/src/readtags.h	/^	const char *value;$/;"	m	struct:__anon11	access:public
__anon12::__anon13::lineNumber	.vim/src/readtags.h	/^		unsigned long lineNumber;$/;"	m	struct:__anon12::__anon13	access:public
__anon12::__anon13::pattern	.vim/src/readtags.h	/^		const char *pattern;$/;"	m	struct:__anon12::__anon13	access:public
__anon12::__anon14::count	.vim/src/readtags.h	/^		unsigned short count;$/;"	m	struct:__anon12::__anon14	access:public
__anon12::__anon14::list	.vim/src/readtags.h	/^		tagExtensionField *list;$/;"	m	struct:__anon12::__anon14	access:public
__anon12::address	.vim/src/readtags.h	/^	} address;$/;"	m	struct:__anon12	typeref:struct:__anon12::__anon13	access:public
__anon12::fields	.vim/src/readtags.h	/^	} fields;$/;"	m	struct:__anon12	typeref:struct:__anon12::__anon14	access:public
__anon12::file	.vim/src/readtags.h	/^	const char *file;$/;"	m	struct:__anon12	access:public
__anon12::fileScope	.vim/src/readtags.h	/^	short fileScope;$/;"	m	struct:__anon12	access:public
__anon12::kind	.vim/src/readtags.h	/^	const char *kind;$/;"	m	struct:__anon12	access:public
__anon12::name	.vim/src/readtags.h	/^	const char *name;$/;"	m	struct:__anon12	access:public
__anon1::buffer	.vim/src/readtags.c	/^    char *buffer;$/;"	m	struct:__anon1	file:	access:public
__anon1::size	.vim/src/readtags.c	/^    size_t size;$/;"	m	struct:__anon1	file:	access:public
__anon7::__anon10::author	.vim/src/readtags.h	/^		const char *author;$/;"	m	struct:__anon7::__anon10	access:public
__anon7::__anon10::name	.vim/src/readtags.h	/^		const char *name;$/;"	m	struct:__anon7::__anon10	access:public
__anon7::__anon10::url	.vim/src/readtags.h	/^		const char *url;$/;"	m	struct:__anon7::__anon10	access:public
__anon7::__anon10::version	.vim/src/readtags.h	/^		const char *version;$/;"	m	struct:__anon7::__anon10	access:public
__anon7::__anon8::error_number	.vim/src/readtags.h	/^		int error_number;$/;"	m	struct:__anon7::__anon8	access:public
__anon7::__anon8::opened	.vim/src/readtags.h	/^		int opened;$/;"	m	struct:__anon7::__anon8	access:public
__anon7::__anon9::format	.vim/src/readtags.h	/^		short format;$/;"	m	struct:__anon7::__anon9	access:public
__anon7::__anon9::sort	.vim/src/readtags.h	/^		sortType sort;$/;"	m	struct:__anon7::__anon9	access:public
__anon7::file	.vim/src/readtags.h	/^	} file;$/;"	m	struct:__anon7	typeref:struct:__anon7::__anon9	access:public
__anon7::program	.vim/src/readtags.h	/^	} program;$/;"	m	struct:__anon7	typeref:struct:__anon7::__anon10	access:public
__anon7::status	.vim/src/readtags.h	/^	} status;$/;"	m	struct:__anon7	typeref:struct:__anon7::__anon8	access:public
__author__	.vim_runtime/sources_non_forked/ale/rplugin/python3/deoplete/sources/ale.py	/^__author__ = 'Joao Paulo, w0rp'$/;"	v
__cplusplus	.vim/src/lex.yy.c	17;"	d	file:
__init__	.vim_runtime/sources_non_forked/ale/rplugin/python3/deoplete/sources/ale.py	/^        def __init__(self, vim):$/;"	m	class:Base	access:public
__init__	.vim_runtime/sources_non_forked/ale/rplugin/python3/deoplete/sources/ale.py	/^    def __init__(self, vim):$/;"	m	class:Source	access:public
__log_init	rainbow/log.cpp	/^static LogIniter __log_init;$/;"	m	namespace:rainbow	file:
_parse_comments	.vim_runtime/sources_non_forked/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f	access:public
_skip_special_chars	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
a	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> a <NOP>$/;"	m
a	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.cpp	/^/;"	v
aI	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>aI :<C-u>cal <Sid>HandleTextObjectMapping(0, 1, 0, [line("."), line("."), col("."), col(".")])<CR>$/;"	m
aI	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>aI :<C-u>cal <Sid>HandleTextObjectMapping(0, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv$/;"	m
aM	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abbreviate_from_dict	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:abbreviate_from_dict(cmd,dict)$/;"	f
abs_path	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
accessLevel	.vim/src/vjde/completion/ClassInfo.java	/^  private static String accessLevel(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
ack#Ack	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! ack#Ack(cmd, args) "{{{$/;"	f
ack#AckFromSearch	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! ack#AckFromSearch(cmd, args) "{{{$/;"	f
ack#AckHelp	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! ack#AckHelp(cmd, args) "{{{$/;"	f
ack#AckWindow	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! ack#AckWindow(cmd, args) "{{{$/;"	f
ack#ShowResults	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^function! ack#ShowResults() "{{{$/;"	f
action	.vim/src/vjde/completion/Struts2Configure.java	/^		public Action action;$/;"	f	class:Struts2Configure.MyAction	access:public
action	.vim/src/vjde/completion/Struts2Simple.java	/^		public Action action;$/;"	f	class:Struts2Simple.MyAction	access:public
action2List	.vim/src/vjde/completion/Struts2Configure.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction a)
action2List	.vim/src/vjde/completion/Struts2Simple.java	/^	public StringBuffer action2List(MyAction a) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction a)
actionpkg	.vim/src/vjde/completion/Struts2Configure.java	/^	String actionpkg;$/;"	f	class:Struts2Configure	access:default
actionpkg	.vim/src/vjde/completion/Struts2Simple.java	/^	String actionpkg;$/;"	f	class:Struts2Simple	access:default
actions	.vim/src/vjde/completion/Struts2Configure.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Configure	access:default
actions	.vim/src/vjde/completion/Struts2Simple.java	/^	ArrayList<MyAction> actions = new ArrayList<MyAction>();$/;"	f	class:Struts2Simple	access:default
actions2vim	.vim/src/vjde/completion/Struts2Configure.java	/^	public String actions2vim() {$/;"	m	class:Struts2Configure	access:public	signature:()
actions2vim	.vim/src/vjde/completion/Struts2Simple.java	/^	public String actions2vim() {$/;"	m	class:Struts2Simple	access:public	signature:()
activateAll	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
activateBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
activateDirNode	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
activateFileNode	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
addAppender	rainbow/log.cpp	/^void Logger::addAppender(LogAppender::ptr appender) {$/;"	f	class:rainbow::Logger	signature:(LogAppender::ptr appender)
addAppender	rainbow/log.h	/^    void addAppender(LogAppender::ptr appender);$/;"	p	class:rainbow::Logger	access:public	signature:(LogAppender::ptr appender)
addClass	.vim/src/vjde/completion/ClassPathEntry.java	/^    protected void addClass(String qualifiedName) {$/;"	m	class:ClassPathEntry	access:protected	signature:(String qualifiedName)
addListener	rainbow/config.h	/^    void addListener(uint64_t key, on_change_cb cb) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(uint64_t key, on_change_cb cb)
addRecursively	.vim/src/vjde/completion/ClassPathDir.java	/^    void addRecursively(File directory, File rootDir) {$/;"	m	class:ClassPathDir	access:default	signature:(File directory, File rootDir)
add_methods	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_new_timeout	.vim/src/previewwindow.cpp	/^	void add_new_timeout()$/;"	f	signature:()
add_new_timeout	.vim/src/previewwindow.cpp	/^	void add_new_timeout();$/;"	p	file:	signature:()
add_update_objects	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:add_update_objects(object, targets) abort$/;"	f
address	.vim/src/readtags.h	/^	} address;$/;"	m	struct:__anon12	typeref:struct:__anon12::__anon13	access:public
addtomrufs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
adjust_header	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
adjust_hunk_summary	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
after	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/benchmark_spec.rb	/^def after(string)$/;"	f
after	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def after(string)$/;"	f
after_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:after_paste()$/;"	f
ai	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>ai :<C-u>cal <Sid>HandleTextObjectMapping(0, 0, 0, [line("."), line("."), col("."), col(".")])<CR>$/;"	m
ai	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>ai :<C-u>cal <Sid>HandleTextObjectMapping(0, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv$/;"	m
airline#themes#gruvbox#refresh	.vim_runtime/sources_non_forked/gruvbox/autoload/airline/themes/gruvbox.vim	/^function! airline#themes#gruvbox#refresh()$/;"	f
ale#Env	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#Env(variable_name, value) abort$/;"	f
ale#Escape	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#Escape(str) abort$/;"	f
ale#FileTooLarge	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#FileTooLarge(buffer) abort$/;"	f
ale#GetFilenameMappings	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#GetFilenameMappings(buffer, name) abort$/;"	f
ale#GetLocItemMessage	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#GetLocItemMessage(item, format_string) abort$/;"	f
ale#Has	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#Has(feature) abort$/;"	f
ale#Pad	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#Pad(string) abort$/;"	f
ale#Queue	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#Queue(delay, ...) abort$/;"	f
ale#Set	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#Set(variable_name, default) abort$/;"	f
ale#ShouldDoNothing	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#ShouldDoNothing(buffer) abort$/;"	f
ale#Var	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^function! ale#Var(buffer, variable_name) abort$/;"	f
ale#ant#BuildClasspathCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/ant.vim	/^function! ale#ant#BuildClasspathCommand(buffer) abort$/;"	f
ale#ant#FindExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/ant.vim	/^function! ale#ant#FindExecutable(buffer) abort$/;"	f
ale#ant#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/ant.vim	/^function! ale#ant#FindProjectRoot(buffer) abort$/;"	f
ale#args#Parse	.vim_runtime/sources_non_forked/ale/autoload/ale/args.vim	/^function! ale#args#Parse(arg_list, string) abort$/;"	f
ale#assert#Fixer	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#Fixer(expected_result) abort$/;"	f
ale#assert#FixerCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#FixerCwd(expected_cwd) abort$/;"	f
ale#assert#FixerNotExecuted	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#FixerNotExecuted() abort$/;"	f
ale#assert#GivenCommandOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#GivenCommandOutput(...) abort$/;"	f
ale#assert#LSPAddress	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPAddress(expected_address) abort$/;"	f
ale#assert#LSPConfig	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPConfig(expected_config) abort$/;"	f
ale#assert#LSPLanguage	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPLanguage(expected_language) abort$/;"	f
ale#assert#LSPOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPOptions(expected_options) abort$/;"	f
ale#assert#LSPProject	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPProject(expected_root) abort$/;"	f
ale#assert#Linter	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#Linter(expected_executable, expected_command) abort$/;"	f
ale#assert#LinterCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#LinterCwd(expected_cwd) abort$/;"	f
ale#assert#LinterNotExecuted	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#LinterNotExecuted() abort$/;"	f
ale#assert#ResetVariables	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#ResetVariables(filetype, name, ...) abort$/;"	f
ale#assert#SetUpFixerTest	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTest(filetype, name, ...) abort$/;"	f
ale#assert#SetUpFixerTestCommands	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTestCommands() abort$/;"	f
ale#assert#SetUpLinterTest	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTest(filetype, name) abort$/;"	f
ale#assert#SetUpLinterTestCommands	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTestCommands() abort$/;"	f
ale#assert#TearDownFixerTest	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownFixerTest() abort$/;"	f
ale#assert#TearDownLinterTest	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownLinterTest() abort$/;"	f
ale#balloon#Disable	.vim_runtime/sources_non_forked/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Disable() abort$/;"	f
ale#balloon#Enable	.vim_runtime/sources_non_forked/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Enable() abort$/;"	f
ale#balloon#Expr	.vim_runtime/sources_non_forked/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Expr() abort$/;"	f
ale#balloon#MessageForPos	.vim_runtime/sources_non_forked/ale/autoload/ale/balloon.vim	/^function! ale#balloon#MessageForPos(bufnr, lnum, col) abort$/;"	f
ale#c#ExpandAtArgs	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#ExpandAtArgs(path_prefix, raw_split_lines) abort$/;"	f
ale#c#FindCompileCommands	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#FindCompileCommands(buffer) abort$/;"	f
ale#c#FindLocalHeaderPaths	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#FindLocalHeaderPaths(buffer) abort$/;"	f
ale#c#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#FindProjectRoot(buffer) abort$/;"	f
ale#c#FlagsFromCompileCommands	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#FlagsFromCompileCommands(buffer, compile_commands_file) abort$/;"	f
ale#c#GetBuildDirectory	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#GetBuildDirectory(buffer) abort$/;"	f
ale#c#GetCFlags	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#GetCFlags(buffer, output) abort$/;"	f
ale#c#GetMakeCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#GetMakeCommand(buffer) abort$/;"	f
ale#c#IncludeOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#IncludeOptions(include_paths) abort$/;"	f
ale#c#ParseCFlags	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlags(path_prefix, should_quote, raw_arguments) abort$/;"	f
ale#c#ParseCFlagsFromMakeOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlagsFromMakeOutput(buffer, make_output) abort$/;"	f
ale#c#ParseCompileCommandsFlags	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#ParseCompileCommandsFlags(buffer, file_lookup, dir_lookup) abort$/;"	f
ale#c#QuoteArg	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#QuoteArg(arg) abort$/;"	f
ale#c#ResetCompileCommandsCache	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#ResetCompileCommandsCache() abort$/;"	f
ale#c#RunMakeCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#RunMakeCommand(buffer, Callback) abort$/;"	f
ale#c#ShellSplit	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^function! ale#c#ShellSplit(line) abort$/;"	f
ale#code_action#ApplyChanges	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#ApplyChanges(filename, changes, should_save) abort$/;"	f
ale#code_action#BuildChangesList	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#BuildChangesList(changes_map) abort$/;"	f
ale#code_action#DisablePopUpMenu	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#DisablePopUpMenu() abort$/;"	f
ale#code_action#EnablePopUpMenu	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#EnablePopUpMenu() abort$/;"	f
ale#code_action#GetChanges	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#GetChanges(workspace_edit) abort$/;"	f
ale#code_action#GetCodeActions	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#GetCodeActions(options) abort$/;"	f
ale#code_action#HandleCodeAction	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#HandleCodeAction(code_action, options) abort$/;"	f
ale#code_action#ReloadBuffer	.vim_runtime/sources_non_forked/ale/autoload/ale/code_action.vim	/^function! ale#code_action#ReloadBuffer() abort$/;"	f
ale#codefix#ApplyLSPCodeAction	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyLSPCodeAction(data, item) abort$/;"	f
ale#codefix#ApplyTSServerCodeAction	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyTSServerCodeAction(data, item) abort$/;"	f
ale#codefix#ClearLSPData	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ClearLSPData() abort$/;"	f
ale#codefix#Execute	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#Execute(range, ...) abort$/;"	f
ale#codefix#GetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#GetMap() abort$/;"	f
ale#codefix#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#codefix#HandleTSServerResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#codefix#SetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! ale#codefix#SetMap(map) abort$/;"	f
ale#command#CdString	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#CdString(directory) abort$/;"	f
ale#command#ClearData	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#ClearData() abort$/;"	f
ale#command#CreateDirectory	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#CreateDirectory(buffer) abort$/;"	f
ale#command#CreateFile	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#CreateFile(buffer) abort$/;"	f
ale#command#CreateTempFile	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#CreateTempFile(buffer, temporary_file, input) abort$/;"	f
ale#command#EscapeCommandPart	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#EscapeCommandPart(command_part) abort$/;"	f
ale#command#FormatCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#FormatCommand($/;"	f
ale#command#GetData	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#GetData() abort$/;"	f
ale#command#InitData	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#InitData(buffer) abort$/;"	f
ale#command#IsDeferred	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#IsDeferred(value) abort$/;"	f
ale#command#ManageDirectory	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#ManageDirectory(buffer, directory) abort$/;"	f
ale#command#ManageFile	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#ManageFile(buffer, file) abort$/;"	f
ale#command#RemoveManagedFiles	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#RemoveManagedFiles(buffer) abort$/;"	f
ale#command#ResetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#ResetCwd(buffer) abort$/;"	f
ale#command#Run	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#Run(buffer, command, Callback, ...) abort$/;"	f
ale#command#SetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#SetCwd(buffer, cwd) abort$/;"	f
ale#command#StopJobs	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^function! ale#command#StopJobs(buffer, job_type) abort$/;"	f
ale#completion#AutomaticOmniFunc	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#AutomaticOmniFunc(findstart, base) abort$/;"	f
ale#completion#CanProvideCompletions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#CanProvideCompletions() abort$/;"	f
ale#completion#Disable	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#Disable() abort$/;"	f
ale#completion#Done	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#Done() abort$/;"	f
ale#completion#Enable	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#Enable() abort$/;"	f
ale#completion#Filter	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#Filter($/;"	f
ale#completion#GetAllTriggers	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetAllTriggers() abort$/;"	f
ale#completion#GetCompletionKind	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionKind(kind) abort$/;"	f
ale#completion#GetCompletionPosition	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPosition() abort$/;"	f
ale#completion#GetCompletionPositionForDeoplete	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPositionForDeoplete(input) abort$/;"	f
ale#completion#GetCompletionResult	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionResult() abort$/;"	f
ale#completion#GetCompletionSymbols	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionSymbols(kind) abort$/;"	f
ale#completion#GetCompletions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletions(...) abort$/;"	f
ale#completion#GetPrefix	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetPrefix(filetype, line, column) abort$/;"	f
ale#completion#GetTriggerCharacter	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#GetTriggerCharacter(filetype, prefix) abort$/;"	f
ale#completion#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#completion#HandleTSServerResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#completion#HandleUserData	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleUserData(completed_item) abort$/;"	f
ale#completion#Import	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#Import() abort$/;"	f
ale#completion#NullFilter	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#NullFilter(buffer, item) abort$/;"	f
ale#completion#OmniFunc	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#OmniFunc(findstart, base) abort$/;"	f
ale#completion#ParseLSPCompletions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseLSPCompletions(response) abort$/;"	f
ale#completion#ParseTSServerCompletionEntryDetails	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletionEntryDetails(response) abort$/;"	f
ale#completion#ParseTSServerCompletions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletions(response) abort$/;"	f
ale#completion#Queue	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#Queue() abort$/;"	f
ale#completion#RestoreCompletionOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#RestoreCompletionOptions() abort$/;"	f
ale#completion#Show	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#Show(result) abort$/;"	f
ale#completion#StopTimer	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! ale#completion#StopTimer() abort$/;"	f
ale#completion#python#CompletionItemFilter	.vim_runtime/sources_non_forked/ale/autoload/ale/completion/python.vim	/^function! ale#completion#python#CompletionItemFilter(buffer, item) abort$/;"	f
ale#cursor#EchoCursorWarning	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarning(...) abort$/;"	f
ale#cursor#EchoCursorWarningWithDelay	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarningWithDelay() abort$/;"	f
ale#cursor#ShowCursorDetail	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^function! ale#cursor#ShowCursorDetail() abort$/;"	f
ale#cursor#TruncatedEcho	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^function! ale#cursor#TruncatedEcho(original_message) abort$/;"	f
ale#d#FindDUBConfig	.vim_runtime/sources_non_forked/ale/autoload/ale/d.vim	/^function! ale#d#FindDUBConfig(buffer) abort$/;"	f
ale#debugging#Info	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! ale#debugging#Info() abort$/;"	f
ale#debugging#InfoToClipboard	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToClipboard() abort$/;"	f
ale#debugging#InfoToFile	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToFile(filename) abort$/;"	f
ale#definition#ClearLSPData	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#ClearLSPData() abort$/;"	f
ale#definition#GetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#GetMap() abort$/;"	f
ale#definition#GoTo	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#GoTo(options) abort$/;"	f
ale#definition#GoToCommandHandler	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#GoToCommandHandler(command, ...) abort$/;"	f
ale#definition#GoToType	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#GoToType(options) abort$/;"	f
ale#definition#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#definition#HandleTSServerResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#definition#SetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#SetMap(map) abort$/;"	f
ale#definition#UpdateTagStack	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^function! ale#definition#UpdateTagStack() abort$/;"	f
ale#dhall#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/dhall.vim	/^function! ale#dhall#GetCommand(buffer) abort$/;"	f
ale#dhall#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/dhall.vim	/^function! ale#dhall#GetExecutable(buffer) abort$/;"	f
ale#dhall#GetExecutableWithOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/dhall.vim	/^function! ale#dhall#GetExecutableWithOptions(buffer) abort$/;"	f
ale#engine#Cleanup	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#Cleanup(buffer) abort$/;"	f
ale#engine#CleanupEveryBuffer	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#CleanupEveryBuffer() abort$/;"	f
ale#engine#EscapeCommandPart	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#EscapeCommandPart(command_part) abort$/;"	f
ale#engine#FixLocList	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#FixLocList(buffer, linter_name, from_other_source, loclist) abort$/;"	f
ale#engine#GetLoclist	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#GetLoclist(buffer) abort$/;"	f
ale#engine#HandleLoclist	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#HandleLoclist(linter_name, buffer, loclist, from_other_source) abort$/;"	f
ale#engine#InitBufferInfo	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#InitBufferInfo(buffer) abort$/;"	f
ale#engine#IsCheckingBuffer	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#IsCheckingBuffer(buffer) abort$/;"	f
ale#engine#IsExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#IsExecutable(buffer, executable) abort$/;"	f
ale#engine#MarkLinterActive	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterActive(info, linter) abort$/;"	f
ale#engine#MarkLinterInactive	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterInactive(info, linter_name) abort$/;"	f
ale#engine#ResetExecutableCache	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#ResetExecutableCache() abort$/;"	f
ale#engine#RunLinters	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#RunLinters(buffer, linters, should_lint_file) abort$/;"	f
ale#engine#SetResults	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#SetResults(buffer, loclist) abort$/;"	f
ale#engine#Stop	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^function! ale#engine#Stop(buffer) abort$/;"	f
ale#engine#ignore#Exclude	.vim_runtime/sources_non_forked/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#Exclude(filetype, all_linters, config, disable_lsp) abort$/;"	f
ale#engine#ignore#GetList	.vim_runtime/sources_non_forked/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#GetList(filetype, config) abort$/;"	f
ale#events#ClockMilliseconds	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#ClockMilliseconds() abort$/;"	f
ale#events#FileChangedEvent	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#FileChangedEvent(buffer) abort$/;"	f
ale#events#FileTypeEvent	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#FileTypeEvent(buffer, new_filetype) abort$/;"	f
ale#events#Init	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#Init() abort$/;"	f
ale#events#LintOnEnter	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#LintOnEnter(buffer) abort$/;"	f
ale#events#QuitEvent	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#QuitEvent(buffer) abort$/;"	f
ale#events#QuitRecently	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#QuitRecently(buffer) abort$/;"	f
ale#events#ReadOrEnterEvent	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#ReadOrEnterEvent(buffer) abort$/;"	f
ale#events#SaveEvent	.vim_runtime/sources_non_forked/ale/autoload/ale/events.vim	/^function! ale#events#SaveEvent(buffer) abort$/;"	f
ale#filename_mapping#Invert	.vim_runtime/sources_non_forked/ale/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Invert(filename_mappings) abort$/;"	f
ale#filename_mapping#Map	.vim_runtime/sources_non_forked/ale/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Map(filename, filename_mappings) abort$/;"	f
ale#filetypes#GuessExtension	.vim_runtime/sources_non_forked/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#GuessExtension(filetype) abort$/;"	f
ale#filetypes#LoadExtensionMap	.vim_runtime/sources_non_forked/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#LoadExtensionMap() abort$/;"	f
ale#fix#ApplyFixes	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyFixes(buffer, output) abort$/;"	f
ale#fix#ApplyQueuedFixes	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyQueuedFixes(buffer) abort$/;"	f
ale#fix#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! ale#fix#Fix(buffer, fixing_flag, ...) abort$/;"	f
ale#fix#InitBufferData	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^function! ale#fix#InitBufferData(buffer, fixing_flag) abort$/;"	f
ale#fix#registry#Add	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Add(name, func, filetypes, desc, ...) abort$/;"	f
ale#fix#registry#Clear	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Clear() abort$/;"	f
ale#fix#registry#CompleteFixers	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#CompleteFixers(ArgLead, CmdLine, CursorPos) abort$/;"	f
ale#fix#registry#GetApplicableFixers	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetApplicableFixers(filetype) abort$/;"	f
ale#fix#registry#GetFunc	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetFunc(name) abort$/;"	f
ale#fix#registry#ResetToDefaults	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#ResetToDefaults() abort$/;"	f
ale#fix#registry#Suggest	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Suggest(filetype) abort$/;"	f
ale#fix#registry#SuggestedFixers	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#SuggestedFixers(filetype) abort$/;"	f
ale#fixers#appleswiftformat#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/appleswiftformat.vim	/^function! ale#fixers#appleswiftformat#Fix(buffer) abort$/;"	f
ale#fixers#astyle#FindProjectOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#FindProjectOptions(buffer) abort$/;"	f
ale#fixers#astyle#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Fix(buffer) abort$/;"	f
ale#fixers#astyle#Var	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Var(buffer, name) abort$/;"	f
ale#fixers#autoimport#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/autoimport.vim	/^function! ale#fixers#autoimport#Fix(buffer) abort$/;"	f
ale#fixers#autopep8#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/autopep8.vim	/^function! ale#fixers#autopep8#Fix(buffer) abort$/;"	f
ale#fixers#bibclean#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/bibclean.vim	/^function! ale#fixers#bibclean#Fix(buffer) abort$/;"	f
ale#fixers#black#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#Fix(buffer) abort$/;"	f
ale#fixers#black#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#GetExecutable(buffer) abort$/;"	f
ale#fixers#brittany#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#Fix(buffer) abort$/;"	f
ale#fixers#brittany#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#GetExecutable(buffer) abort$/;"	f
ale#fixers#buildifier#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/buildifier.vim	/^function! ale#fixers#buildifier#Fix(buffer) abort$/;"	f
ale#fixers#buildifier#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/buildifier.vim	/^function! ale#fixers#buildifier#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangformat#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangtidy#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Fix(buffer) abort$/;"	f
ale#fixers#clangtidy#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#GetCommand(buffer) abort$/;"	f
ale#fixers#clangtidy#Var	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Var(buffer, name) abort$/;"	f
ale#fixers#cmakeformat#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/cmakeformat.vim	/^function! ale#fixers#cmakeformat#Fix(buffer) abort$/;"	f
ale#fixers#dartfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/dartfmt.vim	/^function! ale#fixers#dartfmt#Fix(buffer) abort$/;"	f
ale#fixers#deno#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/deno.vim	/^function! ale#fixers#deno#Fix(buffer) abort$/;"	f
ale#fixers#dfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/dfmt.vim	/^function! ale#fixers#dfmt#Fix(buffer) abort$/;"	f
ale#fixers#dhall_format#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/dhall_format.vim	/^function! ale#fixers#dhall_format#Fix(buffer) abort$/;"	f
ale#fixers#dhall_freeze#Freeze	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/dhall_freeze.vim	/^function! ale#fixers#dhall_freeze#Freeze(buffer) abort$/;"	f
ale#fixers#dhall_lint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/dhall_lint.vim	/^function! ale#fixers#dhall_lint#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#erlfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/erlfmt.vim	/^function! ale#fixers#erlfmt#Fix(buffer) abort$/;"	f
ale#fixers#erlfmt#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/erlfmt.vim	/^function! ale#fixers#erlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#eslint#ApplyFixForVersion	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#eslint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#Fix(buffer) abort$/;"	f
ale#fixers#eslint#ProcessEslintDOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessEslintDOutput(buffer, output) abort$/;"	f
ale#fixers#eslint#ProcessFixDryRunOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessFixDryRunOutput(buffer, output) abort$/;"	f
ale#fixers#fecs#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/fecs.vim	/^function! ale#fixers#fecs#Fix(buffer) abort$/;"	f
ale#fixers#fish_indent#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/fish_indent.vim	/^function! ale#fixers#fish_indent#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#GetExecutable(buffer) abort$/;"	f
ale#fixers#floskell#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#Fix(buffer) abort$/;"	f
ale#fixers#floskell#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#generic#RemoveTrailingBlankLines	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#RemoveTrailingBlankLines(buffer, lines) abort$/;"	f
ale#fixers#generic#TrimWhitespace	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#TrimWhitespace(buffer, lines) abort$/;"	f
ale#fixers#generic_python#AddLinesBeforeControlStatements	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#AddLinesBeforeControlStatements(buffer, lines) abort$/;"	f
ale#fixers#generic_python#BreakUpLongLines	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#BreakUpLongLines(buffer, lines) abort$/;"	f
ale#fixers#gnatpp#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/gnatpp.vim	/^function! ale#fixers#gnatpp#Fix(buffer) abort$/;"	f
ale#fixers#gofmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/gofmt.vim	/^function! ale#fixers#gofmt#Fix(buffer) abort$/;"	f
ale#fixers#goimports#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/goimports.vim	/^function! ale#fixers#goimports#Fix(buffer) abort$/;"	f
ale#fixers#gomod#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/gomod.vim	/^function! ale#fixers#gomod#Fix(buffer) abort$/;"	f
ale#fixers#google_java_format#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/google_java_format.vim	/^function! ale#fixers#google_java_format#Fix(buffer) abort$/;"	f
ale#fixers#hackfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/hackfmt.vim	/^function! ale#fixers#hackfmt#Fix(buffer) abort$/;"	f
ale#fixers#help#AlignTags	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/help.vim	/^function! ale#fixers#help#AlignTags(buffer, lines) abort$/;"	f
ale#fixers#hfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/hfmt.vim	/^function! ale#fixers#hfmt#Fix(buffer) abort$/;"	f
ale#fixers#hindent#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#Fix(buffer) abort$/;"	f
ale#fixers#hindent#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#GetExecutable(buffer) abort$/;"	f
ale#fixers#hlint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/hlint.vim	/^function! ale#fixers#hlint#Fix(buffer) abort$/;"	f
ale#fixers#html_beautify#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/html_beautify.vim	/^function! ale#fixers#html_beautify#Fix(buffer) abort$/;"	f
ale#fixers#importjs#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#Fix(buffer) abort$/;"	f
ale#fixers#importjs#ProcessOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#ProcessOutput(buffer, output) abort$/;"	f
ale#fixers#isort#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#Fix(buffer) abort$/;"	f
ale#fixers#isort#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#GetExecutable(buffer) abort$/;"	f
ale#fixers#jq#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#Fix(buffer) abort$/;"	f
ale#fixers#jq#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#GetExecutable(buffer) abort$/;"	f
ale#fixers#ktlint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/ktlint.vim	/^function! ale#fixers#ktlint#Fix(buffer) abort$/;"	f
ale#fixers#latexindent#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/latexindent.vim	/^function! ale#fixers#latexindent#Fix(buffer) abort$/;"	f
ale#fixers#luafmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/luafmt.vim	/^function! ale#fixers#luafmt#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetCommand(buffer) abort$/;"	f
ale#fixers#mix_format#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#nimpretty#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/nimpretty.vim	/^function! ale#fixers#nimpretty#Fix(buffer) abort$/;"	f
ale#fixers#nixfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/nixfmt.vim	/^function! ale#fixers#nixfmt#Fix(buffer) abort$/;"	f
ale#fixers#nixpkgsfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/nixpkgsfmt.vim	/^function! ale#fixers#nixpkgsfmt#Fix(buffer) abort$/;"	f
ale#fixers#ocamlformat#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/ocamlformat.vim	/^function! ale#fixers#ocamlformat#Fix(buffer) abort$/;"	f
ale#fixers#ocp_indent#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/ocp_indent.vim	/^function! ale#fixers#ocp_indent#Fix(buffer) abort$/;"	f
ale#fixers#ormolu#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/ormolu.vim	/^function! ale#fixers#ormolu#Fix(buffer) abort$/;"	f
ale#fixers#pandoc#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/pandoc.vim	/^function! ale#fixers#pandoc#Fix(buffer) abort$/;"	f
ale#fixers#perltidy#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/perltidy.vim	/^function! ale#fixers#perltidy#Fix(buffer) abort$/;"	f
ale#fixers#pgformatter#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/pgformatter.vim	/^function! ale#fixers#pgformatter#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#GetExecutable(buffer) abort$/;"	f
ale#fixers#phpcbf#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#Fix(buffer) abort$/;"	f
ale#fixers#phpcbf#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ApplyFixForVersion	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#Fix(buffer) abort$/;"	f
ale#fixers#prettier#GetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetCwd(buffer) abort$/;"	f
ale#fixers#prettier#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ProcessPrettierDOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ProcessPrettierDOutput(buffer, output) abort$/;"	f
ale#fixers#prettier_eslint#ApplyFixForVersion	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier_eslint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#Fix(buffer) abort$/;"	f
ale#fixers#prettier_eslint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_standard#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#Fix(buffer) abort$/;"	f
ale#fixers#prettier_standard#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#protolint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/protolint.vim	/^function! ale#fixers#protolint#Fix(buffer) abort$/;"	f
ale#fixers#protolint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/protolint.vim	/^function! ale#fixers#protolint#GetExecutable(buffer) abort$/;"	f
ale#fixers#ptop#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/ptop.vim	/^function! ale#fixers#ptop#Fix(buffer) abort$/;"	f
ale#fixers#puppetlint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/puppetlint.vim	/^function! ale#fixers#puppetlint#Fix(buffer) abort$/;"	f
ale#fixers#purty#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#Fix(buffer) abort$/;"	f
ale#fixers#purty#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#GetExecutable(buffer) abort$/;"	f
ale#fixers#qmlfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#Fix(buffer) abort$/;"	f
ale#fixers#qmlfmt#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#refmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/refmt.vim	/^function! ale#fixers#refmt#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#GetExecutable(buffer) abort$/;"	f
ale#fixers#reorder_python_imports#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/reorder_python_imports.vim	/^function! ale#fixers#reorder_python_imports#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#GetCommand(buffer) abort$/;"	f
ale#fixers#rubocop#PostProcess	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#PostProcess(buffer, output) abort$/;"	f
ale#fixers#rufo#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#Fix(buffer) abort$/;"	f
ale#fixers#rufo#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#GetCommand(buffer) abort$/;"	f
ale#fixers#rustfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/rustfmt.vim	/^function! ale#fixers#rustfmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#GetCommand(buffer) abort$/;"	f
ale#fixers#shfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/shfmt.vim	/^function! ale#fixers#shfmt#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#GetCommand(buffer) abort$/;"	f
ale#fixers#sqlfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/sqlfmt.vim	/^function! ale#fixers#sqlfmt#Fix(buffer) abort$/;"	f
ale#fixers#sqlformat#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/sqlformat.vim	/^function! ale#fixers#sqlformat#Fix(buffer) abort$/;"	f
ale#fixers#standard#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#Fix(buffer) abort$/;"	f
ale#fixers#standard#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#standardrb#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#Fix(buffer) abort$/;"	f
ale#fixers#standardrb#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#GetCommand(buffer) abort$/;"	f
ale#fixers#stylelint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#GetExecutable(buffer) abort$/;"	f
ale#fixers#styler#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/styler.vim	/^function! ale#fixers#styler#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#stylua#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/stylua.vim	/^function! ale#fixers#stylua#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#terraform#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/terraform.vim	/^function! ale#fixers#terraform#Fix(buffer) abort$/;"	f
ale#fixers#textlint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/textlint.vim	/^function! ale#fixers#textlint#Fix(buffer) abort$/;"	f
ale#fixers#tidy#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/tidy.vim	/^function! ale#fixers#tidy#Fix(buffer) abort$/;"	f
ale#fixers#tslint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/tslint.vim	/^function! ale#fixers#tslint#Fix(buffer) abort$/;"	f
ale#fixers#uncrustify#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/uncrustify.vim	/^function! ale#fixers#uncrustify#Fix(buffer) abort$/;"	f
ale#fixers#vfmt#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/vfmt.vim	/^function! ale#fixers#vfmt#Fix(buffer) abort$/;"	f
ale#fixers#xmllint#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/xmllint.vim	/^function! ale#fixers#xmllint#Fix(buffer) abort$/;"	f
ale#fixers#xo#ApplyFixForVersion	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#ApplyFixForVersion(buffer, version, executable, options) abort$/;"	f
ale#fixers#xo#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#Fix(buffer) abort$/;"	f
ale#fixers#yamlfix#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/yamlfix.vim	/^function! ale#fixers#yamlfix#Fix(buffer) abort$/;"	f
ale#fixers#yapf#Fix	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/yapf.vim	/^function! ale#fixers#yapf#Fix(buffer) abort$/;"	f
ale#floating_preview#Show	.vim_runtime/sources_non_forked/ale/autoload/ale/floating_preview.vim	/^function! ale#floating_preview#Show(lines, ...) abort$/;"	f
ale#go#EnvString	.vim_runtime/sources_non_forked/ale/autoload/ale/go.vim	/^function! ale#go#EnvString(buffer) abort$/;"	f
ale#go#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/go.vim	/^function! ale#go#FindProjectRoot(buffer) abort$/;"	f
ale#go#GetGoPathExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/go.vim	/^function! ale#go#GetGoPathExecutable(suffix) abort$/;"	f
ale#gradle#BuildClasspathCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/gradle.vim	/^function! ale#gradle#BuildClasspathCommand(buffer) abort$/;"	f
ale#gradle#FindExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindExecutable(buffer) abort$/;"	f
ale#gradle#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#GetInitPath	.vim_runtime/sources_non_forked/ale/autoload/ale/gradle.vim	/^function! ale#gradle#GetInitPath() abort$/;"	f
ale#handlers#alex#CreateCommandCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#CreateCommandCallback(flags) abort$/;"	f
ale#handlers#alex#DefineLinter	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#DefineLinter(filetype, flags) abort$/;"	f
ale#handlers#alex#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#GetExecutable(buffer) abort$/;"	f
ale#handlers#alex#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#Handle(buffer, lines) abort$/;"	f
ale#handlers#atools#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/atools.vim	/^function! ale#handlers#atools#Handle(buffer, lines) abort$/;"	f
ale#handlers#ccls#GetInitOpts	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetInitOpts(buffer, init_options_var) abort$/;"	f
ale#handlers#ccls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#cppcheck#GetBufferPathIncludeOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetBufferPathIncludeOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCompileCommandsOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCompileCommandsOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCwd(buffer) abort$/;"	f
ale#handlers#cppcheck#HandleCppCheckFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#HandleCppCheckFormat(buffer, lines) abort$/;"	f
ale#handlers#cpplint#HandleCppLintFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/cpplint.vim	/^function! ale#handlers#cpplint#HandleCppLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleCSSLintFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleCSSLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleStyleLintFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleStyleLintFormat(buffer, lines) abort$/;"	f
ale#handlers#deno#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/deno.vim	/^function! ale#handlers#deno#GetExecutable(buffer) abort$/;"	f
ale#handlers#deno#GetProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/deno.vim	/^function! ale#handlers#deno#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixUmbrellaRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixUmbrellaRoot(buffer) abort$/;"	f
ale#handlers#eslint#FindConfig	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#FindConfig(buffer) abort$/;"	f
ale#handlers#eslint#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCommand(buffer) abort$/;"	f
ale#handlers#eslint#GetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCwd(buffer) abort$/;"	f
ale#handlers#eslint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#eslint#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#Handle(buffer, lines) abort$/;"	f
ale#handlers#eslint#HandleJSON	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#HandleJSON(buffer, lines) abort$/;"	f
ale#handlers#fecs#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetCommand(buffer) abort$/;"	f
ale#handlers#fecs#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetExecutable(buffer) abort$/;"	f
ale#handlers#fecs#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#Handle(buffer, lines) abort$/;"	f
ale#handlers#flawfinder#HandleFlawfinderFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/flawfinder.vim	/^function! ale#handlers#flawfinder#HandleFlawfinderFormat(buffer, lines) abort$/;"	f
ale#handlers#gawk#HandleGawkFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gawk.vim	/^function! ale#handlers#gawk#HandleGawkFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormatWithIncludes	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormatWithIncludes(buffer, lines) abort$/;"	f
ale#handlers#go#Handler	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/go.vim	/^function! ale#handlers#go#Handler(buffer, lines) abort$/;"	f
ale#handlers#haskell#GetStackExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#GetStackExecutable(bufnr) abort$/;"	f
ale#handlers#haskell#HandleGHCFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#HandleGHCFormat(buffer, lines) abort$/;"	f
ale#handlers#haskell_stack#EscapeExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/haskell_stack.vim	/^function! ale#handlers#haskell_stack#EscapeExecutable(executable, stack_exec) abort$/;"	f
ale#handlers#hdl_checker#DefineLinter	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#DefineLinter(filetype) abort$/;"	f
ale#handlers#hdl_checker#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetCommand(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetExecutable(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetInitOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetInitOptions(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#hdl_checker#IsDotGit	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#IsDotGit(path) abort$/;"	f
ale#handlers#hlint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/hlint.vim	/^function! ale#handlers#hlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#inko#GetType	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/inko.vim	/^function! ale#handlers#inko#GetType(severity) abort$/;"	f
ale#handlers#inko#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/inko.vim	/^function! ale#handlers#inko#Handle(buffer, lines) abort$/;"	f
ale#handlers#ktlint#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetCommand(buffer) abort$/;"	f
ale#handlers#ktlint#GetRulesets	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetRulesets(buffer) abort$/;"	f
ale#handlers#ktlint#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#languagetool#DefineLinter	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#DefineLinter(filetype) abort$/;"	f
ale#handlers#languagetool#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetCommand(buffer) abort$/;"	f
ale#handlers#languagetool#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetExecutable(buffer) abort$/;"	f
ale#handlers#languagetool#HandleOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#HandleOutput(buffer, lines) abort$/;"	f
ale#handlers#markdownlint#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/markdownlint.vim	/^function! ale#handlers#markdownlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#ocamllsp#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetCommand(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetExecutable(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetLanguage	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetLanguage(buffer) abort$/;"	f
ale#handlers#ocamllsp#GetProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ocamllsp.vim	/^function! ale#handlers#ocamllsp#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#ols#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetCommand(buffer) abort$/;"	f
ale#handlers#ols#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetExecutable(buffer) abort$/;"	f
ale#handlers#ols#GetLanguage	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetLanguage(buffer) abort$/;"	f
ale#handlers#ols#GetProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#pony#HandlePonycFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/pony.vim	/^function! ale#handlers#pony#HandlePonycFormat(buffer, lines) abort$/;"	f
ale#handlers#redpen#HandleRedpenOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/redpen.vim	/^function! ale#handlers#redpen#HandleRedpenOutput(buffer, lines) abort$/;"	f
ale#handlers#ruby#HandleSyntaxErrors	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#HandleSyntaxErrors(buffer, lines) abort$/;"	f
ale#handlers#rust#HandleRustErrors	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/rust.vim	/^function! ale#handlers#rust#HandleRustErrors(buffer, lines) abort$/;"	f
ale#handlers#scala#HandleScalacLintFormat	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/scala.vim	/^function! ale#handlers#scala#HandleScalacLintFormat(buffer, lines) abort$/;"	f
ale#handlers#sh#GetShellType	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/sh.vim	/^function! ale#handlers#sh#GetShellType(buffer) abort$/;"	f
ale#handlers#shellcheck#DefineLinter	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#DefineLinter(filetype) abort$/;"	f
ale#handlers#shellcheck#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetCommand(buffer, version) abort$/;"	f
ale#handlers#shellcheck#GetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetCwd(buffer) abort$/;"	f
ale#handlers#shellcheck#GetDialectArgument	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetDialectArgument(buffer) abort$/;"	f
ale#handlers#shellcheck#GetShellcheckDialectDirective	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetShellcheckDialectDirective(buffer) abort$/;"	f
ale#handlers#shellcheck#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#Handle(buffer, lines) abort$/;"	f
ale#handlers#sml#GetCmFile	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetCmFile(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjCm	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjCm(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjFile	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjFile(buffer) abort$/;"	f
ale#handlers#sml#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#Handle(buffer, lines) abort$/;"	f
ale#handlers#solhint#FindConfig	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#FindConfig(buffer) abort$/;"	f
ale#handlers#solhint#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#GetCommand(buffer) abort$/;"	f
ale#handlers#solhint#GetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#GetCwd(buffer) abort$/;"	f
ale#handlers#solhint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#GetExecutable(buffer) abort$/;"	f
ale#handlers#solhint#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/solhint.vim	/^function! ale#handlers#solhint#Handle(buffer, lines) abort$/;"	f
ale#handlers#spectral#HandleSpectralOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/spectral.vim	/^function! ale#handlers#spectral#HandleSpectralOutput(buffer, lines) abort$/;"	f
ale#handlers#textlint#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetCommand(buffer) abort$/;"	f
ale#handlers#textlint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#textlint#HandleTextlintOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#HandleTextlintOutput(buffer, lines) abort$/;"	f
ale#handlers#tslint#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#tslint#InitVariables	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#InitVariables() abort$/;"	f
ale#handlers#tsserver#GetProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/tsserver.vim	/^function! ale#handlers#tsserver#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#unix#HandleAsError	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsError(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsWarning	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsWarning(buffer, lines) abort$/;"	f
ale#handlers#vale#GetType	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#GetType(severity) abort$/;"	f
ale#handlers#vale#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#DefineLinter	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#DefineLinter(filetype) abort$/;"	f
ale#handlers#writegood#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetCommand(buffer) abort$/;"	f
ale#handlers#writegood#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetExecutable(buffer) abort$/;"	f
ale#handlers#writegood#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#ResetOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#ResetOptions() abort$/;"	f
ale#handlers#xo#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetExecutable(buffer) abort$/;"	f
ale#handlers#xo#GetLintCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetLintCommand(buffer) abort$/;"	f
ale#handlers#xo#GetOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetOptions(buffer) abort$/;"	f
ale#handlers#xo#GetType	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#GetType(buffer) abort$/;"	f
ale#handlers#xo#HandleJSON	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/xo.vim	/^function! ale#handlers#xo#HandleJSON(buffer, lines) abort$/;"	f
ale#handlers#yamllint#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/yamllint.vim	/^function! ale#handlers#yamllint#GetCommand(buffer) abort$/;"	f
ale#handlers#yamllint#Handle	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/yamllint.vim	/^function! ale#handlers#yamllint#Handle(buffer, lines) abort$/;"	f
ale#highlight#BufferHidden	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! ale#highlight#BufferHidden(buffer) abort$/;"	f
ale#highlight#CreatePositions	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! ale#highlight#CreatePositions(line, col, end_line, end_col) abort$/;"	f
ale#highlight#RemoveHighlights	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! ale#highlight#RemoveHighlights() abort$/;"	f
ale#highlight#SetHighlights	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! ale#highlight#SetHighlights(buffer, loclist) abort$/;"	f
ale#highlight#UpdateHighlights	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! ale#highlight#UpdateHighlights() abort$/;"	f
ale#highlight#nvim_buf_add_highlight	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_add_highlight(buffer, ns_id, hl_group, line, col_start, col_end) abort$/;"	f
ale#highlight#nvim_buf_clear_namespace	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_clear_namespace(buffer, ns_id, line_start, line_end) abort$/;"	f
ale#history#Add	.vim_runtime/sources_non_forked/ale/autoload/ale/history.vim	/^function! ale#history#Add(buffer, status, job_id, command) abort$/;"	f
ale#history#Get	.vim_runtime/sources_non_forked/ale/autoload/ale/history.vim	/^function! ale#history#Get(buffer) abort$/;"	f
ale#history#RememberOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/history.vim	/^function! ale#history#RememberOutput(buffer, job_id, output) abort$/;"	f
ale#history#SetExitCode	.vim_runtime/sources_non_forked/ale/autoload/ale/history.vim	/^function! ale#history#SetExitCode(buffer, job_id, exit_code) abort$/;"	f
ale#hover#ClearLSPData	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#ClearLSPData() abort$/;"	f
ale#hover#GetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#GetMap() abort$/;"	f
ale#hover#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#hover#HandleTSServerResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#hover#ParseLSPResult	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#ParseLSPResult(contents) abort$/;"	f
ale#hover#SetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#SetMap(map) abort$/;"	f
ale#hover#Show	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#Show(buffer, line, col, opt) abort$/;"	f
ale#hover#ShowAtCursor	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowAtCursor() abort$/;"	f
ale#hover#ShowDocumentationAtCursor	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowDocumentationAtCursor() abort$/;"	f
ale#hover#ShowTruncatedMessageAtCursor	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowTruncatedMessageAtCursor() abort$/;"	f
ale#java#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/java.vim	/^function! ale#java#FindProjectRoot(buffer) abort$/;"	f
ale#job#HasOpenChannel	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#HasOpenChannel(job_id) abort$/;"	f
ale#job#IsRunning	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#IsRunning(job_id) abort$/;"	f
ale#job#ParseVim8ProcessID	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#ParseVim8ProcessID(job_string) abort$/;"	f
ale#job#PrepareCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#PrepareCommand(buffer, command) abort$/;"	f
ale#job#SendRaw	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#SendRaw(job_id, string) abort$/;"	f
ale#job#Start	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#Start(command, options) abort$/;"	f
ale#job#StartWithCmd	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#StartWithCmd(command, options) abort$/;"	f
ale#job#Stop	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#Stop(job_id) abort$/;"	f
ale#job#ValidateArguments	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^function! ale#job#ValidateArguments(command, options) abort$/;"	f
ale#julia#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/julia.vim	/^function! ale#julia#FindProjectRoot(buffer) abort$/;"	f
ale#linter#Define	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#Define(filetype, linter) abort$/;"	f
ale#linter#Get	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#Get(original_filetypes) abort$/;"	f
ale#linter#GetAddress	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAddress(buffer, linter) abort$/;"	f
ale#linter#GetAll	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAll(filetypes) abort$/;"	f
ale#linter#GetCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#GetCommand(buffer, linter) abort$/;"	f
ale#linter#GetCwd	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#GetCwd(buffer, linter) abort$/;"	f
ale#linter#GetExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#GetExecutable(buffer, linter) abort$/;"	f
ale#linter#GetLanguage	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#GetLanguage(buffer, linter) abort$/;"	f
ale#linter#GetLintersLoaded	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#GetLintersLoaded() abort$/;"	f
ale#linter#PreProcess	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#PreProcess(filetype, linter) abort$/;"	f
ale#linter#PreventLoading	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#PreventLoading(filetype) abort$/;"	f
ale#linter#RemoveIgnored	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#RemoveIgnored(buffer, filetype, linters) abort$/;"	f
ale#linter#Reset	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#Reset() abort$/;"	f
ale#linter#ResolveFiletype	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^function! ale#linter#ResolveFiletype(original_filetype) abort$/;"	f
ale#list#GetCombinedList	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! ale#list#GetCombinedList() abort$/;"	f
ale#list#IsQuickfixOpen	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! ale#list#IsQuickfixOpen() abort$/;"	f
ale#list#SetLists	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^function! ale#list#SetLists(buffer, loclist) abort$/;"	f
ale#loclist_jumping#FindNearest	.vim_runtime/sources_non_forked/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#FindNearest(direction, wrap, ...) abort$/;"	f
ale#loclist_jumping#Jump	.vim_runtime/sources_non_forked/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#Jump(direction, ...) abort$/;"	f
ale#loclist_jumping#JumpToIndex	.vim_runtime/sources_non_forked/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#JumpToIndex(index) abort$/;"	f
ale#loclist_jumping#WrapJump	.vim_runtime/sources_non_forked/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#WrapJump(direction, sargs) abort$/;"	f
ale#lsp#CloseDocument	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(buffer) abort$/;"	f
ale#lsp#CloseDocument	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(conn_id) abort$/;"	f
ale#lsp#ConnectToAddress	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ConnectToAddress(conn_id, address) abort$/;"	f
ale#lsp#CreateMessageData	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CreateMessageData(message) abort$/;"	f
ale#lsp#GetConnections	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetConnections() abort$/;"	f
ale#lsp#GetNextMessageID	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetNextMessageID() abort$/;"	f
ale#lsp#HandleInitResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleInitResponse(conn, response) abort$/;"	f
ale#lsp#HandleMessage	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleMessage(conn_id, message) abort$/;"	f
ale#lsp#HasCapability	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HasCapability(conn_id, capability) abort$/;"	f
ale#lsp#MarkConnectionAsTsserver	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkConnectionAsTsserver(conn_id) abort$/;"	f
ale#lsp#MarkDocumentAsOpen	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkDocumentAsOpen(id, buffer) abort$/;"	f
ale#lsp#NotifyForChanges	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#NotifyForChanges(conn_id, buffer) abort$/;"	f
ale#lsp#OnInit	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OnInit(conn_id, Callback) abort$/;"	f
ale#lsp#OpenDocument	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OpenDocument(conn_id, buffer, language_id) abort$/;"	f
ale#lsp#ReadMessageData	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ReadMessageData(data) abort$/;"	f
ale#lsp#Register	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Register(executable_or_address, project, init_options) abort$/;"	f
ale#lsp#RegisterCallback	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RegisterCallback(conn_id, callback) abort$/;"	f
ale#lsp#RemoveConnectionWithID	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RemoveConnectionWithID(id) abort$/;"	f
ale#lsp#ResetConnections	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ResetConnections() abort$/;"	f
ale#lsp#Send	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Send(conn_id, message) abort$/;"	f
ale#lsp#StartProgram	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StartProgram(conn_id, executable, command) abort$/;"	f
ale#lsp#Stop	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Stop(conn_id) abort$/;"	f
ale#lsp#StopAll	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StopAll() abort$/;"	f
ale#lsp#UpdateConfig	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^function! ale#lsp#UpdateConfig(conn_id, buffer, config) abort$/;"	f
ale#lsp#message#CodeAction	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#CodeAction(buffer, line, column, end_line, end_column, diagnostics) abort$/;"	f
ale#lsp#message#Completion	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Completion(buffer, line, column, trigger_character) abort$/;"	f
ale#lsp#message#Definition	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#message#DidChange	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChange(buffer) abort$/;"	f
ale#lsp#message#DidChangeConfiguration	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChangeConfiguration(buffer, config) abort$/;"	f
ale#lsp#message#DidClose	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidClose(buffer) abort$/;"	f
ale#lsp#message#DidOpen	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidOpen(buffer, language_id) abort$/;"	f
ale#lsp#message#DidSave	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidSave(buffer) abort$/;"	f
ale#lsp#message#ExecuteCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#ExecuteCommand(command, arguments) abort$/;"	f
ale#lsp#message#Exit	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Exit() abort$/;"	f
ale#lsp#message#GetNextVersionID	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#GetNextVersionID() abort$/;"	f
ale#lsp#message#Hover	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Hover(buffer, line, column) abort$/;"	f
ale#lsp#message#Initialize	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialize(root_path, options, capabilities) abort$/;"	f
ale#lsp#message#Initialized	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialized() abort$/;"	f
ale#lsp#message#References	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#References(buffer, line, column) abort$/;"	f
ale#lsp#message#Rename	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Rename(buffer, line, column, new_name) abort$/;"	f
ale#lsp#message#Shutdown	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Shutdown() abort$/;"	f
ale#lsp#message#Symbol	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Symbol(query) abort$/;"	f
ale#lsp#message#TypeDefinition	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp#reset#StopAllLSPs	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/reset.vim	/^function! ale#lsp#reset#StopAllLSPs() abort$/;"	f
ale#lsp#response#GetErrorMessage	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#GetErrorMessage(response) abort$/;"	f
ale#lsp#response#ReadDiagnostics	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadDiagnostics(response) abort$/;"	f
ale#lsp#response#ReadTSServerDiagnostics	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadTSServerDiagnostics(response) abort$/;"	f
ale#lsp#tsserver_message#Change	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Change(buffer) abort$/;"	f
ale#lsp#tsserver_message#Close	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Close(buffer) abort$/;"	f
ale#lsp#tsserver_message#CompletionEntryDetails	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#CompletionEntryDetails(buffer, line, column, entry_names) abort$/;"	f
ale#lsp#tsserver_message#Completions	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Completions($/;"	f
ale#lsp#tsserver_message#Definition	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#GetApplicableRefactors	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetApplicableRefactors(buffer, line, column, end_line, end_column) abort$/;"	f
ale#lsp#tsserver_message#GetCodeFixes	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetCodeFixes(buffer, line, column, end_line, end_column, error_codes) abort$/;"	f
ale#lsp#tsserver_message#GetEditsForRefactor	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetEditsForRefactor(buffer, line, column, end_line, end_column, refactor, action) abort$/;"	f
ale#lsp#tsserver_message#Geterr	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Geterr(buffer) abort$/;"	f
ale#lsp#tsserver_message#Open	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Open(buffer) abort$/;"	f
ale#lsp#tsserver_message#OrganizeImports	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#OrganizeImports(buffer) abort$/;"	f
ale#lsp#tsserver_message#Quickinfo	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Quickinfo(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#References	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#References(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#Rename	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Rename($/;"	f
ale#lsp#tsserver_message#TypeDefinition	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp_linter#CheckWithLSP	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#CheckWithLSP(buffer, linter) abort$/;"	f
ale#lsp_linter#ClearLSPData	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#ClearLSPData() abort$/;"	f
ale#lsp_linter#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#FindProjectRoot(buffer, linter) abort$/;"	f
ale#lsp_linter#GetConfig	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetConfig(buffer, linter) abort$/;"	f
ale#lsp_linter#GetOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetOptions(buffer, linter) abort$/;"	f
ale#lsp_linter#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#lsp_linter#OnInit	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#OnInit(linter, details, Callback) abort$/;"	f
ale#lsp_linter#SendRequest	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SendRequest(buffer, linter_name, message, ...) abort$/;"	f
ale#lsp_linter#SetLSPLinterMap	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SetLSPLinterMap(replacement_map) abort$/;"	f
ale#lsp_linter#StartLSP	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#StartLSP(buffer, linter, Callback) abort$/;"	f
ale#lsp_window#HandleShowMessage	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_window.vim	/^function! ale#lsp_window#HandleShowMessage(linter_name, format, params) abort$/;"	f
ale#maven#BuildClasspathCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/maven.vim	/^function! ale#maven#BuildClasspathCommand(buffer) abort$/;"	f
ale#maven#FindExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/maven.vim	/^function! ale#maven#FindExecutable(buffer) abort$/;"	f
ale#maven#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/maven.vim	/^function! ale#maven#FindProjectRoot(buffer) abort$/;"	f
ale#node#Executable	.vim_runtime/sources_non_forked/ale/autoload/ale/node.vim	/^function! ale#node#Executable(buffer, executable) abort$/;"	f
ale#organize_imports#Execute	.vim_runtime/sources_non_forked/ale/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#Execute() abort$/;"	f
ale#organize_imports#HandleTSServerResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#other_source#ShowResults	.vim_runtime/sources_non_forked/ale/autoload/ale/other_source.vim	/^function! ale#other_source#ShowResults(buffer, linter_name, loclist) abort$/;"	f
ale#other_source#StartChecking	.vim_runtime/sources_non_forked/ale/autoload/ale/other_source.vim	/^function! ale#other_source#StartChecking(buffer, linter_name) abort$/;"	f
ale#path#Dirname	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#Dirname(path) abort$/;"	f
ale#path#FindExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#path#FindNearestDirectory	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestDirectory(buffer, directory_name) abort$/;"	f
ale#path#FindNearestExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestExecutable(buffer, path_list) abort$/;"	f
ale#path#FindNearestFile	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestFile(buffer, filename) abort$/;"	f
ale#path#FromURI	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#FromURI(uri) abort$/;"	f
ale#path#GetAbsPath	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#GetAbsPath(base_directory, filename) abort$/;"	f
ale#path#IsAbsolute	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#IsAbsolute(filename) abort$/;"	f
ale#path#IsBufferPath	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#IsBufferPath(buffer, complex_filename) abort$/;"	f
ale#path#IsTempName	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#IsTempName(filename) abort$/;"	f
ale#path#RemoveDriveLetter	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#RemoveDriveLetter(path) abort$/;"	f
ale#path#ResolveLocalPath	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#ResolveLocalPath(buffer, search_string, global_fallback) abort$/;"	f
ale#path#Simplify	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#Simplify(path) abort$/;"	f
ale#path#ToURI	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#ToURI(path) abort$/;"	f
ale#path#Upwards	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^function! ale#path#Upwards(path) abort$/;"	f
ale#pattern_options#SetOptions	.vim_runtime/sources_non_forked/ale/autoload/ale/pattern_options.vim	/^function! ale#pattern_options#SetOptions(buffer) abort$/;"	f
ale#powershell#RunPowerShell	.vim_runtime/sources_non_forked/ale/autoload/ale/powershell.vim	/^function! ale#powershell#RunPowerShell(buffer, base_var_name, command) abort$/;"	f
ale#preview#CloseIfTypeMatches	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! ale#preview#CloseIfTypeMatches(filetype) abort$/;"	f
ale#preview#OpenSelection	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelection() abort$/;"	f
ale#preview#OpenSelectionInTab	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelectionInTab() abort$/;"	f
ale#preview#RepeatSelection	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! ale#preview#RepeatSelection() abort$/;"	f
ale#preview#SetLastSelection	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! ale#preview#SetLastSelection(item_list, options) abort$/;"	f
ale#preview#Show	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! ale#preview#Show(lines, ...) abort$/;"	f
ale#preview#ShowSelection	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^function! ale#preview#ShowSelection(item_list, ...) abort$/;"	f
ale#python#FindExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^function! ale#python#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#python#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRoot(buffer) abort$/;"	f
ale#python#FindProjectRootIni	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRootIni(buffer) abort$/;"	f
ale#python#FindVirtualenv	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^function! ale#python#FindVirtualenv(buffer) abort$/;"	f
ale#python#HandleTraceback	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^function! ale#python#HandleTraceback(lines, limit) abort$/;"	f
ale#python#PipenvPresent	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^function! ale#python#PipenvPresent(buffer) abort$/;"	f
ale#references#ClearLSPData	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^function! ale#references#ClearLSPData() abort$/;"	f
ale#references#Find	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^function! ale#references#Find(...) abort$/;"	f
ale#references#GetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^function! ale#references#GetMap() abort$/;"	f
ale#references#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^function! ale#references#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#references#HandleTSServerResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^function! ale#references#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#references#SetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^function! ale#references#SetMap(map) abort$/;"	f
ale#rename#ClearLSPData	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! ale#rename#ClearLSPData() abort$/;"	f
ale#rename#Execute	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! ale#rename#Execute() abort$/;"	f
ale#rename#GetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! ale#rename#GetMap() abort$/;"	f
ale#rename#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! ale#rename#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#rename#HandleTSServerResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! ale#rename#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#rename#SetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! ale#rename#SetMap(map) abort$/;"	f
ale#ruby#EscapeExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/ruby.vim	/^function! ale#ruby#EscapeExecutable(executable, bundle_exec) abort$/;"	f
ale#ruby#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindProjectRoot(buffer) abort$/;"	f
ale#ruby#FindRailsRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindRailsRoot(buffer) abort$/;"	f
ale#ruby#HandleRubocopOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/ruby.vim	/^function! ale#ruby#HandleRubocopOutput(buffer, lines) abort$/;"	f
ale#semver#GTE	.vim_runtime/sources_non_forked/ale/autoload/ale/semver.vim	/^function! ale#semver#GTE(lhs, rhs) abort$/;"	f
ale#semver#ParseVersion	.vim_runtime/sources_non_forked/ale/autoload/ale/semver.vim	/^function! ale#semver#ParseVersion(version_lines) abort$/;"	f
ale#semver#ResetVersionCache	.vim_runtime/sources_non_forked/ale/autoload/ale/semver.vim	/^function! ale#semver#ResetVersionCache() abort$/;"	f
ale#semver#RunWithVersionCheck	.vim_runtime/sources_non_forked/ale/autoload/ale/semver.vim	/^function! ale#semver#RunWithVersionCheck(buffer, executable, command, Callback) abort$/;"	f
ale#sign#Clear	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#Clear() abort$/;"	f
ale#sign#FindCurrentSigns	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#FindCurrentSigns(buffer) abort$/;"	f
ale#sign#GetSignCommands	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignCommands(buffer, was_sign_set, sign_map) abort$/;"	f
ale#sign#GetSignName	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignName(sublist) abort$/;"	f
ale#sign#ParsePattern	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#ParsePattern() abort$/;"	f
ale#sign#ParseSigns	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#ParseSigns(line_list) abort$/;"	f
ale#sign#ParseSignsWithGetPlaced	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#ParseSignsWithGetPlaced(buffer) abort$/;"	f
ale#sign#ReadSigns	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#ReadSigns(buffer) abort$/;"	f
ale#sign#SetSigns	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#SetSigns(buffer, loclist) abort$/;"	f
ale#sign#SetUpDefaultColumnWithoutErrorsHighlight	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^function! ale#sign#SetUpDefaultColumnWithoutErrorsHighlight() abort$/;"	f
ale#socket#Close	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^function! ale#socket#Close(channel_id) abort$/;"	f
ale#socket#GetAddress	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^function! ale#socket#GetAddress(channel_id) abort$/;"	f
ale#socket#IsOpen	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^function! ale#socket#IsOpen(channel_id) abort$/;"	f
ale#socket#Open	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^function! ale#socket#Open(address, options) abort$/;"	f
ale#socket#Send	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^function! ale#socket#Send(channel_id, data) abort$/;"	f
ale#statusline#Count	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Count(buffer) abort$/;"	f
ale#statusline#FirstProblem	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! ale#statusline#FirstProblem(buffer, type) abort$/;"	f
ale#statusline#Update	.vim_runtime/sources_non_forked/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Update(buffer, loclist) abort$/;"	f
ale#swift#FindProjectRoot	.vim_runtime/sources_non_forked/ale/autoload/ale/swift.vim	/^function! ale#swift#FindProjectRoot(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatCommand	.vim_runtime/sources_non_forked/ale/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatCommand(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatConfigArgs	.vim_runtime/sources_non_forked/ale/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatConfigArgs(buffer) abort$/;"	f
ale#swift#GetAppleSwiftFormatExecutable	.vim_runtime/sources_non_forked/ale/autoload/ale/swift.vim	/^function! ale#swift#GetAppleSwiftFormatExecutable(buffer) abort$/;"	f
ale#symbol#ClearLSPData	.vim_runtime/sources_non_forked/ale/autoload/ale/symbol.vim	/^function! ale#symbol#ClearLSPData() abort$/;"	f
ale#symbol#GetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/symbol.vim	/^function! ale#symbol#GetMap() abort$/;"	f
ale#symbol#HandleLSPResponse	.vim_runtime/sources_non_forked/ale/autoload/ale/symbol.vim	/^function! ale#symbol#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#symbol#Search	.vim_runtime/sources_non_forked/ale/autoload/ale/symbol.vim	/^function! ale#symbol#Search(args) abort$/;"	f
ale#symbol#SetMap	.vim_runtime/sources_non_forked/ale/autoload/ale/symbol.vim	/^function! ale#symbol#SetMap(map) abort$/;"	f
ale#test#FlushJobs	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#FlushJobs() abort$/;"	f
ale#test#GetFilename	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#GetFilename(path) abort$/;"	f
ale#test#GetLoclistWithoutModule	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#GetLoclistWithoutModule() abort$/;"	f
ale#test#GetPreviewWindowText	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#GetPreviewWindowText() abort$/;"	f
ale#test#GetQflistWithoutModule	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#GetQflistWithoutModule() abort$/;"	f
ale#test#RestoreDirectory	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#RestoreDirectory() abort$/;"	f
ale#test#SetDirectory	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#SetDirectory(docker_path) abort$/;"	f
ale#test#SetFilename	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#SetFilename(path) abort$/;"	f
ale#test#WaitForJobs	.vim_runtime/sources_non_forked/ale/autoload/ale/test.vim	/^function! ale#test#WaitForJobs(deadline) abort$/;"	f
ale#toggle#Disable	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Disable() abort$/;"	f
ale#toggle#DisableBuffer	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#DisableBuffer(buffer) abort$/;"	f
ale#toggle#Enable	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Enable() abort$/;"	f
ale#toggle#EnableBuffer	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#EnableBuffer(buffer) abort$/;"	f
ale#toggle#Reset	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Reset() abort$/;"	f
ale#toggle#ResetBuffer	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ResetBuffer(buffer) abort$/;"	f
ale#toggle#Toggle	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Toggle() abort$/;"	f
ale#toggle#ToggleBuffer	.vim_runtime/sources_non_forked/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ToggleBuffer(buffer) abort$/;"	f
ale#uri#Decode	.vim_runtime/sources_non_forked/ale/autoload/ale/uri.vim	/^function! ale#uri#Decode(value) abort$/;"	f
ale#uri#Encode	.vim_runtime/sources_non_forked/ale/autoload/ale/uri.vim	/^function! ale#uri#Encode(value) abort$/;"	f
ale#util#BinarySearch	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#BinarySearch(loclist, buffer, line, column) abort$/;"	f
ale#util#Col	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#Col(str, chr) abort$/;"	f
ale#util#EscapePCRE	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#EscapePCRE(unsafe_string) abort$/;"	f
ale#util#EscapeVim	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#EscapeVim(unsafe_string) abort$/;"	f
ale#util#Execute	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#Execute(expr) abort$/;"	f
ale#util#FeedKeys	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#FeedKeys(...) abort$/;"	f
ale#util#FindItemAtCursor	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#FindItemAtCursor(buffer) abort$/;"	f
ale#util#FunctionArgCount	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#FunctionArgCount(function) abort$/;"	f
ale#util#FuzzyJSONDecode	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#FuzzyJSONDecode(data, default) abort$/;"	f
ale#util#GetFunction	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#GetFunction(string_or_ref) abort$/;"	f
ale#util#GetItemPriority	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#GetItemPriority(item) abort$/;"	f
ale#util#GetLineCount	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#GetLineCount(buffer) abort$/;"	f
ale#util#GetMatches	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#GetMatches(lines, patterns) abort$/;"	f
ale#util#HasBuflineApi	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#HasBuflineApi() abort$/;"	f
ale#util#InSandbox	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#InSandbox() abort$/;"	f
ale#util#Input	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#Input(message, value) abort$/;"	f
ale#util#JoinNeovimOutput	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#JoinNeovimOutput(job, last_line, data, mode, callback) abort$/;"	f
ale#util#LocItemCompare	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompare(left, right) abort$/;"	f
ale#util#LocItemCompareWithText	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompareWithText(left, right) abort$/;"	f
ale#util#MapMatches	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#MapMatches(lines, patterns, Callback) abort$/;"	f
ale#util#Mode	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#Mode(...) abort$/;"	f
ale#util#Open	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#Open(filename, line, column, options) abort$/;"	f
ale#util#SetBufferContents	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#SetBufferContents(buffer, lines) abort$/;"	f
ale#util#ShowMessage	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#ShowMessage(string, ...) abort$/;"	f
ale#util#StartPartialTimer	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#StartPartialTimer(delay, callback, args) abort$/;"	f
ale#util#StopPartialTimer	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#StopPartialTimer(timer_id) abort$/;"	f
ale#util#Tempname	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#Tempname() abort$/;"	f
ale#util#Writefile	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^function! ale#util#Writefile(buffer, lines, filename) abort$/;"	f
ale#virtualtext#Clear	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#Clear() abort$/;"	f
ale#virtualtext#ShowCursorWarning	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarning(...) abort$/;"	f
ale#virtualtext#ShowCursorWarningWithDelay	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarningWithDelay() abort$/;"	f
ale#virtualtext#ShowMessage	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowMessage(message, hl_group) abort$/;"	f
ale_linters#ada#adals#GetAdaLSConfig	.vim_runtime/sources_non_forked/ale/ale_linters/ada/adals.vim	/^function! ale_linters#ada#adals#GetAdaLSConfig(buffer) abort$/;"	f
ale_linters#ada#adals#GetRootDirectory	.vim_runtime/sources_non_forked/ale/ale_linters/ada/adals.vim	/^function! ale_linters#ada#adals#GetRootDirectory(buffer) abort$/;"	f
ale_linters#ada#gcc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#ada#gcc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#ansible#ansible_lint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetCommand(buffer, version) abort$/;"	f
ale_linters#ansible#ansible_lint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#ansible#ansible_lint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#Handle(buffer, version, lines) abort$/;"	f
ale_linters#apiblueprint#drafter#HandleErrors	.vim_runtime/sources_non_forked/ale/ale_linters/apiblueprint/drafter.vim	/^function! ale_linters#apiblueprint#drafter#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#asm#gcc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#asm#gcc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#awk#gawk#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#Handle(buffer, lines) abort$/;"	f
ale_linters#bib#bibclean#get_type	.vim_runtime/sources_non_forked/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#get_type(str) abort$/;"	f
ale_linters#bib#bibclean#match_entry	.vim_runtime/sources_non_forked/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_entry(line) abort$/;"	f
ale_linters#bib#bibclean#match_msg	.vim_runtime/sources_non_forked/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_msg(line) abort$/;"	f
ale_linters#bib#bibclean#match_value	.vim_runtime/sources_non_forked/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_value(line) abort$/;"	f
ale_linters#c#cc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cc#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clangd#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/c/clangd.vim	/^function! ale_linters#c#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cppcheck#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#c#cquery#GetInitializationOptions	.vim_runtime/sources_non_forked/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#c#cquery#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#c#flawfinder#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/c/flawfinder.vim	/^function! ale_linters#c#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#chef#foodcritic#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetCommand(buffer) abort$/;"	f
ale_linters#chef#foodcritic#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#clojure#clj_kondo#HandleCljKondoFormat	.vim_runtime/sources_non_forked/ale/ale_linters/clojure/clj_kondo.vim	/^function! ale_linters#clojure#clj_kondo#HandleCljKondoFormat(buffer, lines) abort$/;"	f
ale_linters#clojure#joker#HandleJokerFormat	.vim_runtime/sources_non_forked/ale/ale_linters/clojure/joker.vim	/^function! ale_linters#clojure#joker#HandleJokerFormat(buffer, lines) abort$/;"	f
ale_linters#cloudformation#cfn_python_lint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/cloudformation/cfn_python_lint.vim	/^function! ale_linters#cloudformation#cfn_python_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#cmake#cmakelint#Command	.vim_runtime/sources_non_forked/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmakelint#Executable	.vim_runtime/sources_non_forked/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Executable(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#Handle(buffer, lines) abort$/;"	f
ale_linters#cpp#cc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#cc#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangd#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/clangd.vim	/^function! ale_linters#cpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#clazy#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/clazy.vim	/^function! ale_linters#cpp#clazy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetInitializationOptions	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#cpp#flawfinder#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cpp/flawfinder.vim	/^function! ale_linters#cpp#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#HandleAmebaOutput	.vim_runtime/sources_non_forked/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#HandleAmebaOutput(buffer, lines) abort$/;"	f
ale_linters#crystal#crystal#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#crystal#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#csc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#csc#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#GetCwd(buffer) abort$/;"	f
ale_linters#cs#csc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcs#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcs#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcsc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcsc#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCwd(buffer) abort$/;"	f
ale_linters#cs#mcsc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#Handle(buffer, lines) abort$/;"	f
ale_linters#css#csslint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/css/csslint.vim	/^function! ale_linters#css#csslint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#Handle(buffer, lines) abort$/;"	f
ale_linters#cuda#clangd#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cuda/clangd.vim	/^function! ale_linters#cuda#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#HandleNVCCFormat	.vim_runtime/sources_non_forked/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#HandleNVCCFormat(buffer, lines) abort$/;"	f
ale_linters#cypher#cypher_lint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/cypher/cypher_lint.vim	/^function! ale_linters#cypher#cypher_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dls#FindProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#d#dls#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#GetExecutable(buffer) abort$/;"	f
ale_linters#d#dmd#DMDCommand	.vim_runtime/sources_non_forked/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DMDCommand(buffer, dub_output, meta) abort$/;"	f
ale_linters#d#dmd#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dmd#RunDUBCommand	.vim_runtime/sources_non_forked/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#RunDUBCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#GetCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#analysis_server#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/dart/analysis_server.vim	/^function! ale_linters#dart#analysis_server#GetCommand(buffer) abort$/;"	f
ale_linters#dart#analysis_server#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/dart/analysis_server.vim	/^function! ale_linters#dart#analysis_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#language_server#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#desktop#desktop_file_validate#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/desktop/desktop_file_validate.vim	/^function! ale_linters#desktop#desktop_file_validate#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetType	.vim_runtime/sources_non_forked/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetType(type) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#hadolint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetExecutable(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#credo#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#credo#GetConfigFile	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetConfigFile() abort$/;"	f
ale_linters#elixir#credo#GetMode	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetMode() abort$/;"	f
ale_linters#elixir#credo#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dialyxir#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/dialyxir.vim	/^function! ale_linters#elixir#dialyxir#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dogma#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#elixir_ls#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/elixir_ls.vim	/^function! ale_linters#elixir#elixir_ls#GetExecutable(buffer) abort$/;"	f
ale_linters#elixir#mix#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#mix#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#FileIsBuffer	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#FileIsBuffer(path) abort$/;"	f
ale_linters#elm#make#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCommand(buffer) abort$/;"	f
ale_linters#elm#make#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCwd(buffer) abort$/;"	f
ale_linters#elm#make#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetExecutable(buffer) abort$/;"	f
ale_linters#elm#make#GetPackageFile	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetPackageFile(buffer) abort$/;"	f
ale_linters#elm#make#GetRootDir	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetRootDir(buffer) abort$/;"	f
ale_linters#elm#make#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#HandleElm018Line	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm018Line(line, output) abort$/;"	f
ale_linters#elm#make#HandleElm019Line	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm019Line(line, output) abort$/;"	f
ale_linters#elm#make#IsTest	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsTest(buffer) abort$/;"	f
ale_linters#elm#make#IsVersionGte19	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsVersionGte19(buffer) abort$/;"	f
ale_linters#elm#make#ParseMessage	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessage(message) abort$/;"	f
ale_linters#elm#make#ParseMessageItem	.vim_runtime/sources_non_forked/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessageItem(item) abort$/;"	f
ale_linters#erlang#dialyzer#FindPlt	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#FindPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetPlt	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetRebar3Profile	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetRebar3Profile(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#elvis#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/elvis.vim	/^function! ale_linters#erlang#elvis#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#erlc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#erlc#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#erlc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#erlang#syntaxerl#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#RunHelpCommand	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#RunHelpCommand(buffer) abort$/;"	f
ale_linters#eruby#erb#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/eruby/erb.vim	/^function! ale_linters#eruby#erb#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#erubi#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/eruby/erubi.vim	/^function! ale_linters#eruby#erubi#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#eruby#erubis#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/eruby/erubis.vim	/^function! ale_linters#eruby#erubis#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetType	.vim_runtime/sources_non_forked/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetType(severity) abort$/;"	f
ale_linters#eruby#ruumba#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#Handle(buffer, lines) abort$/;"	f
ale_linters#fish#fish#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/fish/fish.vim	/^function! ale_linters#fish#fish#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#gcc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#language_server#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/fortran/language_server.vim	/^function! ale_linters#fortran#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetCommand(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#Handle(buffer, lines) abort$/;"	f
ale_linters#gitcommit#gitlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetCommand(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetExecutable(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslang#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslang#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#FindProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetMatches	.vim_runtime/sources_non_forked/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetMatches(lines) abort$/;"	f
ale_linters#go#gobuild#Handler	.vim_runtime/sources_non_forked/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gofmt#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/gofmt.vim	/^function! ale_linters#go#gofmt#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetMatches	.vim_runtime/sources_non_forked/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetMatches(lines) abort$/;"	f
ale_linters#go#golangci_lint#Handler	.vim_runtime/sources_non_forked/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#Handler(buffer, lines) abort$/;"	f
ale_linters#go#golint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/golint.vim	/^function! ale_linters#go#golint#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetMatches	.vim_runtime/sources_non_forked/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetMatches(lines) abort$/;"	f
ale_linters#go#gometalinter#Handler	.vim_runtime/sources_non_forked/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gopls#FindProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#gopls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetExecutable(buffer) abort$/;"	f
ale_linters#go#govet#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/govet.vim	/^function! ale_linters#go#govet#GetCommand(buffer) abort$/;"	f
ale_linters#go#langserver#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/langserver.vim	/^function! ale_linters#go#langserver#GetCommand(buffer) abort$/;"	f
ale_linters#go#revive#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/revive.vim	/^function! ale_linters#go#revive#GetCommand(buffer) abort$/;"	f
ale_linters#go#staticcheck#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/go/staticcheck.vim	/^function! ale_linters#go#staticcheck#GetCommand(buffer) abort$/;"	f
ale_linters#hack#hack#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hack#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetProjectRoot(buffer) abort$/;"	f
ale_linters#hack#hhast#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hhast#GetInitializationOptions	.vim_runtime/sources_non_forked/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#hack#hhast#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetCommand(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetExecutable(buffer) abort$/;"	f
ale_linters#haml#hamllint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommand(buffer, version) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck	.vim_runtime/sources_non_forked/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetExecutable(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#cabal_ghc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/cabal_ghc.vim	/^function! ale_linters#haskell#cabal_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/ghc.vim	/^function! ale_linters#haskell#ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc_mod#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/ghc_mod.vim	/^function! ale_linters#haskell#ghc_mod#GetCommand (buffer) abort$/;"	f
ale_linters#haskell#hdevtools#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#hlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#hls#FindRootFile	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#FindRootFile(buffer) abort$/;"	f
ale_linters#haskell#hls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/hls.vim	/^function! ale_linters#haskell#hls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#stack_build#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/stack_build.vim	/^function! ale_linters#haskell#stack_build#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#stack_ghc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/haskell/stack_ghc.vim	/^function! ale_linters#haskell#stack_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#html#angular#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetCommand(buffer) abort$/;"	f
ale_linters#html#angular#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetExecutable(buffer) abort$/;"	f
ale_linters#html#angular#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/html/angular.vim	/^function! ale_linters#html#angular#GetProjectRoot(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetCommand(buffer) abort$/;"	f
ale_linters#html#tidy#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#Handle(buffer, lines) abort$/;"	f
ale_linters#idris#idris#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetCommand(buffer) abort$/;"	f
ale_linters#idris#idris#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#Handle(buffer, lines) abort$/;"	f
ale_linters#ink#ls#FindProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#ink#ls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetCommand(buffer) abort$/;"	f
ale_linters#ink#ls#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#inko#inko#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/inko/inko.vim	/^function! ale_linters#inko#inko#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#Handle(buffer, lines) abort$/;"	f
ale_linters#java#checkstyle#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#GetCommand(buffer) abort$/;"	f
ale_linters#java#checkstyle#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#java#eclipselsp#Command	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Command(buffer, version) abort$/;"	f
ale_linters#java#eclipselsp#CommandWithVersion	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#CommandWithVersion(buffer, version_lines, meta) abort$/;"	f
ale_linters#java#eclipselsp#ConfigurationPath	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#ConfigurationPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Executable	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Executable(buffer) abort$/;"	f
ale_linters#java#eclipselsp#JarPath	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#JarPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Javaagent	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Javaagent(buffer) abort$/;"	f
ale_linters#java#eclipselsp#RunWithVersionCheck	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#java#eclipselsp#TargetPath	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#TargetPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#VersionCheck	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#VersionCheck(version_lines) abort$/;"	f
ale_linters#java#eclipselsp#WorkspacePath	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#WorkspacePath(buffer) abort$/;"	f
ale_linters#java#javac#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#java#javac#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#Handle(buffer, lines) abort$/;"	f
ale_linters#java#javac#RunWithImportPaths	.vim_runtime/sources_non_forked/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#java#javalsp#Command	.vim_runtime/sources_non_forked/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Command(buffer) abort$/;"	f
ale_linters#java#javalsp#Config	.vim_runtime/sources_non_forked/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Config(buffer) abort$/;"	f
ale_linters#java#javalsp#Executable	.vim_runtime/sources_non_forked/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Executable(buffer) abort$/;"	f
ale_linters#java#pmd#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#GetCommand(buffer) abort$/;"	f
ale_linters#java#pmd#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetCommand(buffer, version) abort$/;"	f
ale_linters#javascript#flow#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#flow#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow_ls#FindProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/flow_ls.vim	/^function! ale_linters#javascript#flow_ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jscs#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#jshint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jq#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/json/jq.vim	/^function! ale_linters#json#jq#Handle(buffer, lines) abort$/;"	f
ale_linters#json#jsonlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetCommand(buffer) abort$/;"	f
ale_linters#json#jsonlint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#Handle(buffer, lines) abort$/;"	f
ale_linters#julia#languageserver#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/julia/languageserver.vim	/^function! ale_linters#julia#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#kotlin#kotlinc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#kotlin#kotlinc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#kotlinc#RunWithImportPaths	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#kotlin#languageserver#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/languageserver.vim	/^function! ale_linters#kotlin#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#less#lessc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetCommand(buffer) abort$/;"	f
ale_linters#less#lessc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#Handle(buffer, lines) abort$/;"	f
ale_linters#less#stylelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#llvm#llc#HandleErrors	.vim_runtime/sources_non_forked/ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#lua#luac#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/lua/luac.vim	/^function! ale_linters#lua#luac#Handle(buffer, lines) abort$/;"	f
ale_linters#lua#luacheck#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetCommand(buffer) abort$/;"	f
ale_linters#lua#luacheck#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#make#checkmake#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/make/checkmake.vim	/^function! ale_linters#make#checkmake#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#markdownlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/markdown/markdownlint.vim	/^function! ale_linters#markdown#markdownlint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetExecutable(buffer) abort$/;"	f
ale_linters#markdown#mdl#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#remark_lint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#remark_lint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#vale#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/markdown/vale.vim	/^function! ale_linters#markdown#vale#GetCommand(buffer) abort$/;"	f
ale_linters#matlab#mlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#Handle(buffer, lines) abort$/;"	f
ale_linters#mercury#mmc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#GetCommand(buffer) abort$/;"	f
ale_linters#mercury#mmc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#Handle(buffer, lines) abort$/;"	f
ale_linters#nasm#nasm#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#GetCommand(buffer) abort$/;"	f
ale_linters#nasm#nasm#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimcheck#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimcheck#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimlsp#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimlsp#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#nix#nix#Command	.vim_runtime/sources_non_forked/ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Command(buffer, output, meta) abort$/;"	f
ale_linters#nix#nix#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Handle(buffer, lines) abort$/;"	f
ale_linters#nix#rnix_lsp#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/nix/rnix_lsp.vim	/^function! ale_linters#nix#rnix_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#objc#clang#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/objc/clang.vim	/^function! ale_linters#objc#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objc#clangd#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/objc/clangd.vim	/^function! ale_linters#objc#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clang#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/objcpp/clang.vim	/^function! ale_linters#objcpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clangd#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/objcpp/clangd.vim	/^function! ale_linters#objcpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#ocaml#merlin#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ocaml/merlin.vim	/^function! ale_linters#ocaml#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#ocamlinterface#merlin#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ocamlinterface/merlin.vim	/^function! ale_linters#ocamlinterface#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#openapi#ibm_validator#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/openapi/ibm_validator.vim	/^function! ale_linters#openapi#ibm_validator#GetCommand(buffer) abort$/;"	f
ale_linters#openapi#ibm_validator#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/openapi/ibm_validator.vim	/^function! ale_linters#openapi#ibm_validator#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perl#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perl#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perlcritic#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetProfile	.vim_runtime/sources_non_forked/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetProfile(buffer) abort$/;"	f
ale_linters#perl#perlcritic#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#perl6#perl6#ExtractError	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#ExtractError(dict, item, type, buffer) abort$/;"	f
ale_linters#perl6#perl6#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetCommand(buffer) abort$/;"	f
ale_linters#perl6#perl6#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetExecutable(buffer) abort$/;"	f
ale_linters#perl6#perl6#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#Handle(buffer, lines) abort$/;"	f
ale_linters#php#intelephense#GetInitializationOptions	.vim_runtime/sources_non_forked/ale/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#php#intelephense#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#langserver#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phan#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phan#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phan#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#php#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/php/php.vim	/^function! ale_linters#php#php#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpcs#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpcs#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpmd#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpmd#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpstan#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetCommand(buffer, version) abort$/;"	f
ale_linters#php#phpstan#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#psalm#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetCommand(buffer) abort$/;"	f
ale_linters#php#psalm#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetCommand(buffer) abort$/;"	f
ale_linters#php#tlint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetExecutable(buffer) abort$/;"	f
ale_linters#php#tlint#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#Handle(buffer, lines) abort$/;"	f
ale_linters#po#msgfmt#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/po/msgfmt.vim	/^function! ale_linters#po#msgfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#pony#ponyc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/pony/ponyc.vim	/^function! ale_linters#pony#ponyc#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#powershell#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#Handle(buffer, lines) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#prolog#swipl#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#GetCommand(buffer) abort$/;"	f
ale_linters#prolog#swipl#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#Handle(buffer, lines) abort$/;"	f
ale_linters#proto#protoc_gen_lint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/proto/protoc_gen_lint.vim	/^function! ale_linters#proto#protoc_gen_lint#GetCommand(buffer) abort$/;"	f
ale_linters#proto#protolint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/proto/protolint.vim	/^function! ale_linters#proto#protolint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#languageserver#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/puppet/languageserver.vim	/^function! ale_linters#puppet#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#puppet#puppet#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#puppet#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#puppetlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#FindProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#purescript#ls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#pyrex#cython#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#GetCommand(buffer) abort$/;"	f
ale_linters#pyrex#cython#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#Handle(buffer, lines) abort$/;"	f
ale_linters#python#bandit#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetCommand(buffer) abort$/;"	f
ale_linters#python#bandit#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetExecutable(buffer) abort$/;"	f
ale_linters#python#bandit#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#flake8#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCwd(buffer) abort$/;"	f
ale_linters#python#flake8#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#RunWithVersionCheck	.vim_runtime/sources_non_forked/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#python#jedils#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetCommand(buffer) abort$/;"	f
ale_linters#python#jedils#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCommand(buffer) abort$/;"	f
ale_linters#python#mypy#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCwd(buffer) abort$/;"	f
ale_linters#python#mypy#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#Handle(buffer, lines) abort$/;"	f
ale_linters#python#prospector#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetCommand(buffer) abort$/;"	f
ale_linters#python#prospector#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetExecutable(buffer) abort$/;"	f
ale_linters#python#prospector#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pycodestyle#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pycodestyle#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pycodestyle#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pydocstyle#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pydocstyle#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pydocstyle#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyflakes#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyflakes#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyflakes#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylama#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylama#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCwd(buffer) abort$/;"	f
ale_linters#python#pylama#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylama#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#pylint#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCwd(buffer) abort$/;"	f
ale_linters#python#pylint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyls#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyre#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyre#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyright#GetConfig	.vim_runtime/sources_non_forked/ale/ale_linters/python/pyright.vim	/^function! ale_linters#python#pyright#GetConfig(buffer) abort$/;"	f
ale_linters#python#vulture#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCommand(buffer) abort$/;"	f
ale_linters#python#vulture#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCwd(buffer) abort$/;"	f
ale_linters#python#vulture#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetExecutable(buffer) abort$/;"	f
ale_linters#python#vulture#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmlfmt#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/qml/qmlfmt.vim	/^function! ale_linters#qml#qmlfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmllint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/qml/qmllint.vim	/^function! ale_linters#qml#qmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#r#languageserver#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#r#languageserver#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#r#lintr#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/r/lintr.vim	/^function! ale_linters#r#lintr#GetCommand(buffer) abort$/;"	f
ale_linters#racket#raco#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/racket/raco.vim	/^function! ale_linters#racket#raco#Handle(buffer, lines) abort$/;"	f
ale_linters#reason#ls#FindProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/reason/ls.vim	/^function! ale_linters#reason#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#reason#merlin#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/reason/merlin.vim	/^function! ale_linters#reason#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#rst#rstcheck#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#brakeman#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#brakeman#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#debride#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#debride#HandleOutput	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#HandleOutput(buffer, lines) abort$/;"	f
ale_linters#ruby#rails_best_practices#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rails_best_practices#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#reek#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#GetCommand(buffer, version) abort$/;"	f
ale_linters#ruby#reek#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rubocop#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rubocop#GetType	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetType(severity) abort$/;"	f
ale_linters#ruby#solargraph#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/solargraph.vim	/^function! ale_linters#ruby#solargraph#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#sorbet#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/sorbet.vim	/^function! ale_linters#ruby#sorbet#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#standardrb#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/ruby/standardrb.vim	/^function! ale_linters#ruby#standardrb#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#cargo#GetCargoExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCargoExecutable(bufnr) abort$/;"	f
ale_linters#rust#cargo#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCommand(buffer, version) abort$/;"	f
ale_linters#rust#cargo#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCwd(buffer) abort$/;"	f
ale_linters#rust#rls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetCommand(buffer) abort$/;"	f
ale_linters#rust#rls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#rustc#RustcCommand	.vim_runtime/sources_non_forked/ale/ale_linters/rust/rustc.vim	/^function! ale_linters#rust#rustc#RustcCommand(buffer) abort$/;"	f
ale_linters#salt#salt_lint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/salt/salt_lint.vim	/^function! ale_linters#salt#salt_lint#GetCommand(buffer) abort$/;"	f
ale_linters#salt#salt_lint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/salt/salt_lint.vim	/^function! ale_linters#salt#salt_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#sass#sasslint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#sass#sasslint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#metals#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetCommand(buffer) abort$/;"	f
ale_linters#scala#metals#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetAddress	.vim_runtime/sources_non_forked/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetAddress(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#scalastyle#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalastyle#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#sasslint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#scss#sasslint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scss#scsslint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/scss/scsslint.vim	/^function! ale_linters#scss#scsslint#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#stylelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#bashate#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#language_server#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetCommand(buffer) abort$/;"	f
ale_linters#sh#language_server#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#language_server#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#sh#shell#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetCommand(buffer) abort$/;"	f
ale_linters#sh#shell#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#Handle(buffer, lines) abort$/;"	f
ale_linters#slim#slimlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#GetCommand(buffer) abort$/;"	f
ale_linters#slim#slimlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sml#smlnj_cm#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/sml/smlnj_cm.vim	/^function! ale_linters#sml#smlnj_cm#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#Handle(buffer, lines) abort$/;"	f
ale_linters#spec#rpmlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetCommand(buffer, version) abort$/;"	f
ale_linters#spec#rpmlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/sql/sqlint.vim	/^function! ale_linters#sql#sqlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqllint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/sql/sqllint.vim	/^function! ale_linters#sql#sqllint#Handle(buffer, lines) abort$/;"	f
ale_linters#stylus#stylelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sugarss#stylelint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/sugarss/stylelint.vim	/^function! ale_linters#sugarss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#svelte#svelteserver#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/svelte/svelteserver.vim	/^function! ale_linters#svelte#svelteserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#swift#appleswiftformat#GetLinterCommand	.vim_runtime/sources_non_forked/ale/ale_linters/swift/appleswiftformat.vim	/^function! ale_linters#swift#appleswiftformat#GetLinterCommand(buffer) abort$/;"	f
ale_linters#swift#appleswiftformat#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/swift/appleswiftformat.vim	/^function! ale_linters#swift#appleswiftformat#Handle(buffer, lines) abort$/;"	f
ale_linters#swift#swiftlint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftlint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetExecutable(buffer) abort$/;"	f
ale_linters#swift#swiftlint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#Handle(buffer, lines) abort$/;"	f
ale_linters#systemd#systemd_analyze#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/systemd/systemd_analyze.vim	/^function! ale_linters#systemd#systemd_analyze#Handle(buffer, lines) abort$/;"	f
ale_linters#tcl#nagelfar#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetCommand(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform#GetDetail	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetDetail(error) abort$/;"	f
ale_linters#terraform#terraform#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetExecutable(buffer) abort$/;"	f
ale_linters#terraform#terraform#GetType	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetType(severity) abort$/;"	f
ale_linters#terraform#terraform#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform_ls#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform_ls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#terraform#terraform_ls#GetTerraformExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform_ls.vim	/^function! ale_linters#terraform#terraform_ls#GetTerraformExecutable(buffer) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#terraform#tflint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#tflint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#chktex#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#GetCommand(buffer) abort$/;"	f
ale_linters#tex#chktex#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#lacheck#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#texlab#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetCommand(buffer) abort$/;"	f
ale_linters#tex#texlab#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetProjectRoot(buffer) abort$/;"	f
ale_linters#thrift#thrift#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thrift#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#deno#GetInitializationOptions	.vim_runtime/sources_non_forked/ale/ale_linters/typescript/deno.vim	/^function! ale_linters#typescript#deno#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#typescript#standard#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#standard#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tslint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#tslint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#typecheck#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/typescript/typecheck.vim	/^function! ale_linters#typescript#typecheck#Handle(buffer, lines) abort$/;"	f
ale_linters#v#v#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/v/v.vim	/^function! ale_linters#v#v#GetCommand(buffer) abort$/;"	f
ale_linters#v#v#Handler	.vim_runtime/sources_non_forked/ale/ale_linters/v/v.vim	/^function! ale_linters#v#v#Handler(buffer, lines) abort$/;"	f
ale_linters#vala#vala_lint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#GetCommand(buffer) abort$/;"	f
ale_linters#vala#vala_lint#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#vala#vala_lint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/vala/vala_lint.vim	/^function! ale_linters#vala#vala_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#iverilog#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#iverilog#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#verilator#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#verilator#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#vlog#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#vlog#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#xvlog#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#xvlog#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#ghdl#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#ghdl#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#vcom#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#vcom#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#xvhdl#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#xvhdl#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCommand(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCwd	.vim_runtime/sources_non_forked/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCwd(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetExecutable	.vim_runtime/sources_non_forked/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetExecutable(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vimls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/vim/vimls.vim	/^function! ale_linters#vim#vimls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#vim#vint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#GetCommand(buffer, version) abort$/;"	f
ale_linters#vim#vint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#Handle(buffer, lines) abort$/;"	f
ale_linters#vue#vls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/vue/vls.vim	/^function! ale_linters#vue#vls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetCommand	.vim_runtime/sources_non_forked/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#circleci#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/yaml/circleci.vim	/^function! ale_linters#yaml#circleci#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#swaglint#Handle	.vim_runtime/sources_non_forked/ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#Handle(buffer, lines) abort$/;"	f
ale_linters#yang#yang_lsp#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/yang/yang_lsp.vim	/^function! ale_linters#yang#yang_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#zig#zls#GetProjectRoot	.vim_runtime/sources_non_forked/ale/ale_linters/zig/zls.vim	/^function! ale_linters#zig#zls#GetProjectRoot(buffer) abort$/;"	f
alternateExtensionsDict	.vim/plugin/a.vim	/^let alternateExtensionsDict = {}$/;"	v
alternatePair	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:alternatePair(stop)$/;"	f
am	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
annotationType	.vim/src/vjde/completion/Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl	access:public	signature:()
annotationType	.vim/src/vjde/completion/Struts2Configure.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl	access:public	signature:()
annotationType	.vim/src/vjde/completion/Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ActionImpl2	access:public	signature:()
annotationType	.vim/src/vjde/completion/Struts2Simple.java	/^				public Class annotationType() {$/;"	m	class:ResultImpl2	access:public	signature:()
appender	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.cpp	/^/;"	p	file:	signature:(m_formatter)
appenders	rainbow/log.cpp	/^    std::vector<LogAppenderDefine> appenders;$/;"	m	struct:rainbow::LogDefine	file:	access:public
apply_highlight_fix	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_highlight_fix()$/;"	f
apply_user_input_next	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_user_input_next(mode)$/;"	f
argmaps	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
assert_correct_highlighting	.vim_runtime/sources_non_forked/vim-ruby/spec/spec_helper.rb	/^  def assert_correct_highlighting(extension='rb', string, patterns, group)$/;"	f
assert_correct_indenting	.vim_runtime/sources_non_forked/vim-ruby/spec/spec_helper.rb	/^  def assert_correct_indenting(extension='rb', string)$/;"	f
assert_list_of_dicts	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_list_of_dicts(expected, actual)$/;"	f
assert_signs	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_signs(expected, filename)$/;"	f
async_glob_abort	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_abort()$/;"	f
async_glob_on_exit	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_on_exit(...)$/;"	f
async_glob_on_stdout	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_on_stdout(job, data, ...)$/;"	f
async_glob_update_progress	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_update_progress(timer)$/;"	f
asyncomplete#sources#ale#completor	.vim_runtime/sources_non_forked/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#completor(options, context) abort$/;"	f
asyncomplete#sources#ale#get_source_options	.vim_runtime/sources_non_forked/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_source_options(...) abort$/;"	f
asyncomplete#sources#ale#get_triggers	.vim_runtime/sources_non_forked/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_triggers() abort$/;"	f
at	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
author	.vim/src/readtags.c	/^	char *author;$/;"	m	struct:sTagFile::__anon4	file:	access:public
author	.vim/src/readtags.h	/^		const char *author;$/;"	m	struct:__anon7::__anon10	access:public
autocmds	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
b:AutoPairs	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^    let b:AutoPairs = {'(':')', '[':']', '{':'}','"':'"', '`':'`'}$/;"	v
b:SuperTabContextTextMemberPatterns	.vim/bundle/supertab/ftplugin/html.vim	/^  let b:SuperTabContextTextMemberPatterns = ['<\/']$/;"	v
b:SuperTabContextTextMemberPatterns	.vim/bundle/supertab/ftplugin/xml.vim	/^  let b:SuperTabContextTextMemberPatterns = ['<\/']$/;"	v
b:SuperTabContextTextOmniPrecedence	.vim/bundle/supertab/ftplugin/html.vim	/^    let b:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']$/;"	v
b:SuperTabContextTextOmniPrecedence	.vim/bundle/supertab/ftplugin/xml.vim	/^  let b:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']$/;"	v
b:bar	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let b:bar = 3$/;"	v
b:browsefilter	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:browsefilter	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:control_statement	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/ale/syntax/ale-fix-suggest.vim	/^let b:current_syntax = 'ale-fix-suggest'$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/ale/syntax/ale-preview-selection.vim	/^let b:current_syntax = 'ale-preview-selection'$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/nginx.vim/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/rust.vim/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/typescript-vim/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-bundle-mako/syntax/mako.vim	/^let b:current_syntax = b:mako_outer_lang$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-coffee-script/after/syntax/haml.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-coffee-script/after/syntax/html.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-coffee-script/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-coffee-script/syntax/litcoffee.vim	/^let b:current_syntax = "litcoffee"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-less/after/syntax/html.vim	/^   let b:current_syntax = s:pre_less_cur_syn$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-less/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-pug/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = matchstr(&syntax, '^.*\\<eruby\\>')$/;"	v
b:current_syntax	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax_embed	.vim_runtime/sources_non_forked/rust.vim/syntax/rust.vim	/^    let b:current_syntax_embed = 1$/;"	v
b:did_ftplugin	.vim/bundle/Vundle.vim/ftplugin/vundlelog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/ftplugin/xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/typescript-vim/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/vim-bundle-mako/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/vim-coffee-script/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/vim-fugitive/ftplugin/fugitiveblame.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/vim-less/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim_runtime/sources_non_forked/vim-snipmate/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/nginx.vim/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/rust.vim/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-bundle-mako/indent/mako.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-coffee-script/indent/litcoffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-markdown/indent/markdown.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-pug/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim_runtime/sources_non_forked/vim-snipmate/indent/snippets.vim	/^let b:did_indent = 1$/;"	v
b:done_vimsnippets	.vim_runtime/sources_non_forked/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:emptyTags	.vim/ftplugin/xml.vim	/^let b:emptyTags='^\\(area\\|base\\|br\\|col\\|command\\|embed\\|hr\\|img\\|input\\|keygen\\|link\\|meta\\|param\\|source\\|track\\|wbr\\)$'$/;"	v
b:eruby_nest_level	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(&filetype,'\\C\\<eruby\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_nest_level	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_nest_level	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/nginx.vim/syntax/nginx.vim	/^let b:eruby_subtype = ''$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^.\\{-\\}\\ze\\.eruby\\>')$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	.vim_runtime/sources_non_forked/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:fenced_block	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^let b:fenced_block = 0$/;"	v
b:firstWasEndTag	.vim/ftplugin/xml.vim	/^let b:firstWasEndTag = 0$/;"	v
b:front_matter	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^let b:front_matter = 0$/;"	v
b:haveAtt	.vim/ftplugin/xml.vim	/^let b:haveAtt = 0$/;"	v
b:html_indent_usestate	.vim_runtime/sources_non_forked/vim-ruby/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_mode	.vim/ftplugin/xml.vim	/^  let b:html_mode = 1$/;"	v
b:html_mode	.vim/ftplugin/xml.vim	/^let b:html_mode =((&filetype =~ 'x\\?html') && !exists("g:xml_no_html"))$/;"	v
b:lastAtt	.vim/ftplugin/xml.vim	/^let b:lastAtt = ""$/;"	v
b:lastTag	.vim/ftplugin/xml.vim	/^let b:lastTag = ""$/;"	v
b:loaded_flake8_ftplugin	.vim_runtime/sources_non_forked/vim-flake8/ftplugin/python_flake8.vim	/^let b:loaded_flake8_ftplugin=1$/;"	v
b:loaded_lastplace_plugin	.vim_runtime/sources_non_forked/vim-lastplace/plugin/vim-lastplace.vim	/^let b:loaded_lastplace_plugin = 1$/;"	v
b:mako_outer_lang	.vim_runtime/sources_non_forked/vim-bundle-mako/syntax/mako.vim	/^    let b:mako_outer_lang = "html"$/;"	v
b:mako_outer_lang	.vim_runtime/sources_non_forked/vim-bundle-mako/syntax/mako.vim	/^    let b:mako_outer_lang = g:mako_default_outer_lang$/;"	v
b:match_ignorecase	.vim/ftplugin/xml.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.vim_runtime/sources_non_forked/vim-bundle-mako/ftplugin/mako.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustCharacter\\|rustArrow'$/;"	v
b:match_skip	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	.vim/ftplugin/xml.vim	/^    let b:match_words =$/;"	v
b:match_words	.vim_runtime/sources_non_forked/vim-bundle-mako/ftplugin/mako.vim	/^  let b:match_words = "<:>," .$/;"	v
b:match_words	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:ruby_no_expensive	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^    let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^    let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^        let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^    let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^    let b:rust_set_foldmethod=1$/;"	v
b:rust_set_style	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^    let b:rust_set_style = 1$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stop_count = 4$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stop_count = 6$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stop_no = 1$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stop_no = 5$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stops = { 1 : { 'placeholder' : [[2, mirror]] },$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stops = { 1 : { 'placeholder' : [stop] },$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stops = { 1 : {}, 2 : {} }$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stops = { 3 : {} }$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let b:snip_state.stops = {$/;"	v
b:snip_state	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^        let b:snip_state = snipmate#jumping#state()$/;"	v
b:snipmate_visual	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let b:snipmate_visual = "  foo\\nbar\\n  baz"$/;"	v
b:snipmate_visual	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let b:snipmate_visual = "1\\n2\\n"$/;"	v
b:snipmate_visual	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let b:snipmate_visual = "1\\n2\\n3"$/;"	v
b:snipmate_visual	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let b:snipmate_visual = 'testvisual'$/;"	v
b:suffix	.vim/ftplugin/xml.vim	/^let b:suffix = (exists('g:makeElementSuf') ? g:makeElementSuf : ';;')$/;"	v
b:undo_ftplugin	.vim/ftplugin/xml.vim	/^let b:undo_ftplugin = "setlocal cms< isk<"$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/typescript-vim/ftplugin/typescript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<"$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-less/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= "| setl bexpr="$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= ' | setl sw< sts< et<'$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><ctag>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl inc= sua= path= tags= fo< com< cms< kp="$/;"	v
b:undo_ftplugin	.vim_runtime/sources_non_forked/vim-snipmate/ftplugin/snippets.vim	/^let b:undo_ftplugin = "setl et< sts< cms< fdm< fde<"$/;"	v
b:undo_indent	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:xmlPluginMappedKeys	.vim/ftplugin/xml.vim	/^  let b:xmlPluginMappedKeys = []$/;"	v
b:xml_use_xhtml	.vim/ftplugin/xml.vim	/^	let b:xml_use_xhtml = 1$/;"	v
b:xml_use_xhtml	.vim/ftplugin/xml.vim	/^	let b:xml_use_xhtml = g:xml_use_xhtml$/;"	v
b:xml_use_xhtml	.vim/ftplugin/xml.vim	/^let b:xml_use_xhtml = 0$/;"	v
backspace	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:backspace(s)$/;"	f
badgood	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:badgood(args)$/;"	f
bar	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/continuations_spec.rb	/^      def bar($/;"	f
bas	.vim/src/CSParser.cs	/^            static string bas=null;$/;"	f	class:Wangfc.CSParser	file:	access:private
bas	.vim/src/TypeFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
bas	.vim/src/UsingFinder.cs	/^        static string bas = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
beep	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/benchmark_spec.rb	/^def before(string)$/;"	f
before	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def before(string)$/;"	f
before_yank	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:before_yank()$/;"	f
black	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
black	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
black	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
blank	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:blank(repel)$/;"	f
buf_utils#GotoBuf	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/buf_utils.vim	/^fun! buf_utils#GotoBuf(buf_identifier, opts)$/;"	f
buffer	.vim/src/readtags.c	/^    char *buffer;$/;"	m	struct:__anon1	file:	access:public
bufferSize	.vim/src/lex.yy.c	/^int bufferSize;$/;"	v
buffer_repo	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_type	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffunc	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
bufnrfilpath	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufnrfilpath(line)$/;"	f
bufparts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufparts(bufnr)$/;"	f
buftab	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build_command	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
build_loc_info	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:build_loc_info(snippet, stops, lnum, col, seen_items) abort$/;"	f
build_path	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
build_stops	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:build_stops(snippet, stops, lnum, col, indent) abort$/;"	f
buildpat	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
bundle.is_pinned	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.is_pinned()$/;"	f
bundle.path	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
byfname	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
c	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:c()$/;"	f
cBuffer	.vim/src/lex.yy.c	/^char cBuffer[2048];$/;"	v
cBuffer	.vim/src/tipswnd.c	/^char cBuffer[2048];$/;"	v
cS	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cached_file_contents#CachedFileContents	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^function! cached_file_contents#CachedFileContents(file, func, ...) abort$/;"	f
cached_file_contents#ClearScanCache	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^fun! cached_file_contents#ClearScanCache()$/;"	f
cached_file_contents#Test	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^fun! cached_file_contents#Test()$/;"	f
cached_translate	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:cached_translate(pat)$/;"	f
cachefile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
camelcase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:camelcase(word)$/;"	f
can_diffoff	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
cargo#Load	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#Load()$/;"	f
cargo#bench	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#bench(args)$/;"	f
cargo#build	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#build(args)$/;"	f
cargo#check	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#check(args)$/;"	f
cargo#clean	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#clean(args)$/;"	f
cargo#cmd	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#cmd(args) abort$/;"	f
cargo#doc	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#doc(args)$/;"	f
cargo#init	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#init(args)$/;"	f
cargo#install	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#install(args)$/;"	f
cargo#nearestCargo	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#nearestCargo(is_getcwd) abort$/;"	f
cargo#nearestRootCargo	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#nearestRootCargo(is_getcwd) abort$/;"	f
cargo#nearestWorkspaceCargo	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#nearestWorkspaceCargo(is_getcwd) abort$/;"	f
cargo#new	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#new(args)$/;"	f
cargo#publish	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#publish(args)$/;"	f
cargo#quickfix#CmdPost	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPost() abort$/;"	f
cargo#quickfix#CmdPre	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPre() abort$/;"	f
cargo#run	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#run(args)$/;"	f
cargo#runtarget	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#runtarget(args)$/;"	f
cargo#search	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#search(args)$/;"	f
cargo#test	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#test(args)$/;"	f
cargo#update	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! cargo#update(args)$/;"	f
cfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
cgc	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
chCwd	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
chRoot	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
changelist	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
changesurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
check_assertions	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:check_assertions(job)$/;"	f
check_bundle_name	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^funct! s:check_bundle_name(bundle)$/;"	f
checkbuf	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
chknearby	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
className	.vim/src/vjde/completion/ClassInfo.java	/^  static String className(Class c) {$/;"	m	class:ClassInfo	access:default	signature:(Class c)
className	.vim/src/vjde/completion/Completion.java	/^  static String className(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
className	.vim/src/vjde/completion/Document.java	/^	String className;$/;"	f	class:Document	access:default
classname	.vim/src/vjde/completion/Struts2Configure.java	/^	String classname;$/;"	f	class:Struts2Configure	access:default
classname	.vim/src/vjde/completion/Struts2Simple.java	/^	String classname;$/;"	f	class:Struts2Simple	access:default
classpath	.vim/src/vjde/completion/Struts2Configure.java	/^	String classpath;$/;"	f	class:Struts2Configure	access:default
classpath	.vim/src/vjde/completion/Struts2Simple.java	/^	String classpath;$/;"	f	class:Struts2Simple	access:default
clear	.vim/bundle/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
clear	.vim/src/vjde/completion/ClassPathEntry.java	/^    void clear() {$/;"	m	class:ClassPathEntry	access:default	signature:()
clear	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
clear	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
clear	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
clearAppenders	rainbow/log.cpp	/^void Logger::clearAppenders() {$/;"	f	class:rainbow::Logger	signature:()
clearAppenders	rainbow/log.h	/^    void clearAppenders();$/;"	p	class:rainbow::Logger	access:public	signature:()
clearListener	rainbow/config.h	/^    void clearListener() {$/;"	f	class:rainbow::ConfigVar	access:public	signature:()
closeChildren	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
closeCurrentDir	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
closeTreeWindow	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
close_popup_on_escape	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:close_popup_on_escape(winid, key)$/;"	f
closematch	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
coerce	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:coerce(type) abort$/;"	f
coffee#CoffeeSetUpErrorFormat	.vim_runtime/sources_non_forked/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	.vim_runtime/sources_non_forked/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
color_helper#color_name_to_hex	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#color_name_to_hex(color_name)$/;"	f
color_helper#dec_to_hex	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#dec_to_hex(arg, padding)$/;"	f
color_helper#hex_color_darken	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_darken(color, percent)$/;"	f
color_helper#hex_color_lighten	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_lighten(color, percent)$/;"	f
color_helper#hex_color_to_rgb	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_to_rgb(hex_color)$/;"	f
color_helper#hex_to_dec	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_to_dec(arg)$/;"	f
color_helper#rgb_color_to_hex	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#rgb_color_to_hex(rgb_color)$/;"	f
colors_name	.vim_runtime/sources_forked/vim-irblack-forked/colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	.vim_runtime/sources_non_forked/mayansmoke/colors/mayansmoke.vim	/^let colors_name = "mayansmoke"$/;"	v
colors_name	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	.vim_runtime/sources_non_forked/vim-pyte/colors/pyte.vim	/^let colors_name = "pyte"$/;"	v
commands.abbrev.process	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:commands.abbrev.process(bang,line1,line2,count,args)$/;"	f
commands.abstract.dispatch	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.dispatch(bang,line1,line2,count,args)$/;"	f
commands.abstract.go	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.go(bang,line1,line2,count,args)$/;"	f
commands.search.process	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:commands.search.process(bang,line1,line2,count,args)$/;"	f
commands.substitute.process	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:commands.substitute.process(bang,line1,line2,count,args)$/;"	f
common_prefix	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_prefix(a, b)$/;"	f
common_suffix	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_suffix(a, b, start)$/;"	f
compareUrl	.vim/src/vjde/completion/Struts2Configure.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Configure	access:public	signature:(String source,String actionurl)
compareUrl	.vim/src/vjde/completion/Struts2Simple.java	/^    public boolean compareUrl(String source,String actionurl)$/;"	m	class:Struts2Simple	access:public	signature:(String source,String actionurl)
compare_pos	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:compare_pos(l, r)$/;"	f
compare_pos	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:compare_pos(l, r)$/;"	f
comparent	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
compfnlen	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
complete	.vim_runtime/sources_non_forked/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f	access:public
compmatlen	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
componentName	.vim/src/vjde/completion/Completion.java	/^  static String componentName(Class c) {$/;"	m	class:Completion	access:default	signature:(Class c)
comptime	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compute_candidates	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:compute_candidates(cursor_pos)$/;"	f
compval	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
const	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:const(val, min, max)$/;"	f
continues	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:continues(ln,con)$/;"	f
convert	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
convert	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
convert	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
convert	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
convert	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
convert	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
copyName	.vim/src/readtags.c	/^static void copyName (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
count	.vim/src/readtags.h	/^		unsigned short count;$/;"	m	struct:__anon12::__anon14	access:public
count	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/legacy.vim	/^function! s:count(haystack, needle) abort$/;"	f
count	tests/test_thread.cpp	/^int count = 0;$/;"	v
cpath	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
cr	.vim/bundle/supertab/plugin/supertab.vim	/^      let cr = !(map =~? '\\(^\\|[^)]\\)<cr>' || map =~ 'ExpandCr')$/;"	v
cr	.vim/plugin/supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
cr	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^  nmap cr  <Plug>(abolish-coerce-word)$/;"	m
create_changelog	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
create_column	.vim/src/previewwindow.cpp	/^	void create_column(string &temp)$/;"	f	signature:(string &temp)
create_dictionary	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:create_dictionary(lhs,rhs,opts)$/;"	f
create_mirror_stub	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:create_mirror_stub(mirror, dict)$/;"	f
create_vim	.vim_runtime/sources_non_forked/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def create_vim(*initial_commands)$/;"	f
cs	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctrlp#acceptfile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#autoignore#get_patterns	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#get_patterns(root_dir) abort$/;"	f
ctrlp#autoignore#ignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore(item, type) abort$/;"	f
ctrlp#autoignore#ignore_close	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_close() abort$/;"	f
ctrlp#autoignore#ignore_init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_init() abort$/;"	f
ctrlp#bookmarkdir#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(bang, dir, ...)$/;"	f
ctrlp#bookmarkdir#id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clearmarkedlist	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clearmarkedlist()$/;"	f
ctrlp#clr	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#input	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#input()$/;"	f
ctrlp#j2l	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(dict)$/;"	f
ctrlp#line#cmd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#setpathmode	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setpathmode(pmode, ...)$/;"	f
ctrlp#statusline	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#update	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#update(...)$/;"	f
ctrlp#utils#cachedir	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^		fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
currentLine	.vim/src/lex.yy.c	/^int currentLine;$/;"	v
currentPkg	.vim/src/vjde/completion/Struts2Configure.java	/^	String currentPkg=null;$/;"	f	class:Struts2Configure	access:default
currentPkg	.vim/src/vjde/completion/Struts2Simple.java	/^	String currentPkg=null;$/;"	f	class:Struts2Simple	access:default
current_compiler	.vim/compiler/javac_ex.vim	/^let current_compiler = "javac_ex"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/rust.vim/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/rust.vim/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/typescript-vim/compiler/typescript.vim	/^let current_compiler = "typescript"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-javascript/compiler/eslint.vim	/^let current_compiler = "eslint"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-ruby/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	.vim_runtime/sources_non_forked/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
cursor_in_two_hunks	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:cursor_in_two_hunks()$/;"	f
curtype	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:curtype()$/;"	f
customOpenBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
customOpenDir	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
customOpenFile	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
d.Continue	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.Continue()$/;"	f
d.CurrentItem	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.CurrentItem()$/;"	f
d.DoContinue	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.DoContinue(v)$/;"	f
d.FilterFromKeyboard	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.FilterFromKeyboard(keep, start, ...)$/;"	f
d.FilterItem	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.FilterItem(items, filter, cursorAt)$/;"	f
d.FilteredItems	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.FilteredItems()$/;"	f
d.MapToOriginal	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.MapToOriginal(v)$/;"	f
d.NewBufferAndInit	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.NewBufferAndInit()$/;"	f
d.RemoveFilters	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.RemoveFilters()$/;"	f
d.SelectByIdOrFilter	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.SelectByIdOrFilter()$/;"	f
d.ShowAppliedFilters	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.ShowAppliedFilters()$/;"	f
d.ToggleAlignment	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.ToggleAlignment()$/;"	f
d.UpdateDisplay	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.UpdateDisplay()$/;"	f
dashcase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:dashcase(word)$/;"	f
db	.vim/src/vjde/completion/Struts2Configure.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Configure	access:default
db	.vim/src/vjde/completion/Struts2Simple.java	/^	DocumentBuilder db = null ;$/;"	f	class:Struts2Simple	access:default
dcl	.vim/src/vjde/completion/Struts2Configure.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Configure	access:default
dcl	.vim/src/vjde/completion/Struts2Simple.java	/^	DynamicClassLoader dcl = null ;$/;"	f	class:Struts2Simple	access:default
debug	rainbow/log.cpp	/^void Logger::debug(LogEvent::ptr event) { log(LogLevel::DEBUG, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
debug	rainbow/log.h	/^    void debug(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
default	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let default = exists('&previewpopup') ? !empty(&previewpopup) : 0$/;"	v
default_grep	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
default_paste_key	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:default_paste_key(mode)$/;"	f
default_register	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^function! s:default_register()$/;"	f
default_register	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:default_register()$/;"	f
define_sign_line_highlights	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
define_sign_linenr_highlights	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_linenr_highlights() abort$/;"	f
define_sign_text	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
delAppender	rainbow/log.cpp	/^void Logger::delAppender(LogAppender::ptr appender) {$/;"	f	class:rainbow::Logger	signature:(LogAppender::ptr appender)
delAppender	rainbow/log.h	/^    void delAppender(LogAppender::ptr appender);$/;"	p	class:rainbow::Logger	access:public	signature:(LogAppender::ptr appender)
delListener	rainbow/config.h	/^    void delListener(uint64_t key) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(uint64_t key)
delay	.vim/src/previewwindow.cpp	/^	guint delay=1000;$/;"	v
delbuf	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbuf()$/;"	f
delbufcond	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbufcond(bufnr)$/;"	f
delent	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
delete	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:delete(s)$/;"	f
deleteBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
destUrl	.vim/src/vjde/completion/Struts2Configure.java	/^    String destUrl=null;$/;"	f	class:Struts2Configure	access:default
destUrl	.vim/src/vjde/completion/Struts2Simple.java	/^    String destUrl=null;$/;"	f	class:Struts2Simple	access:default
destroy	.vim/src/previewwindow.cpp	/^	void destroy( GtkWidget *widget, gpointer   data );$/;"	p	file:	signature:( GtkWidget *widget, gpointer data )
destroy	.vim/src/previewwindow.cpp	/^void destroy( GtkWidget *widget,$/;"	f	signature:( GtkWidget *widget, gpointer data )
detect_bad_input	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:detect_bad_input()$/;"	f
dict2list	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_javascript_syn_inits	.vim_runtime/sources_non_forked/vim-javascript/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	.vim_runtime/sources_non_forked/vim-javascript/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	.vim_runtime/sources_non_forked/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_mako_syn_inits	.vim_runtime/sources_non_forked/vim-bundle-mako/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
did_typescript_syn_inits	.vim_runtime/sources_non_forked/typescript-vim/syntax/typescript.vim	/^    let did_typescript_syn_inits = 1$/;"	v
diff	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:diff(rline, aline, rlinenr, alinenr, rprefix, aprefix, regions, whole_line)$/;"	f
diff_modifier	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffoff	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dir	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
dircompl	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
directory	.vim/src/vjde/completion/ClassPathDir.java	/^    private File directory;$/;"	f	class:ClassPathDir	file:	access:private
dismrk	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
dispatcher	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:dispatcher(bang,line1,line2,count,args)$/;"	f
displayHelp	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
display_error	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:display_error()$/;"	f
display_width	.vim_runtime/sources_non_forked/vim-snippets/pythonx/vimsnippets.py	/^def display_width(str):$/;"	f	access:public
doc_buffer	.vim/src/previewwindow.cpp	/^	char doc_buffer[DOC_LENGTH];$/;"	v
doc_cmd_line	.vim/src/previewwindow.cpp	/^	string doc_cmd_line;$/;"	v
doc_rect	.vim/src/previewwindow.cpp	/^	MRectangle doc_rect;$/;"	v
doc_view	.vim/src/previewwindow.cpp	/^	GtkWidget *doc_view = NULL;$/;"	v
doc_window	.vim/src/previewwindow.cpp	/^	GtkWidget *doc_window = NULL;$/;"	v
dohighlight	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dos_shell	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dos_shell()$/;"	f
dosigns	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dosurround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dotcase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:dotcase(word)$/;"	f
download_extract_replace	.vim_runtime/update_plugins.py	/^def download_extract_replace(plugin_name, zip_path, temp_dir, source_dir):$/;"	f	access:public
dprint	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
ds	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dump_bytes	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_bytes(text)$/;"	f
dump_chars	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_chars(text)$/;"	f
duplicate	.vim/src/readtags.c	/^static char *duplicate (const char *str)$/;"	f	file:	signature:(const char *str)
editorconfig#AddNewHook	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#AddNewHook(func) " {{{1$/;"	f
editorconfig#ApplyHooks	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#ApplyHooks(config) abort " {{{1$/;"	f
editorconfig_core#currbuf_cli	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#currbuf_cli(names, job) " out_name, in_name, ...$/;"	f
editorconfig_core#fnmatch#fnmatch	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatch(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#fnmatchcase	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatchcase(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#translate	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#translate(pat, ...)$/;"	f
editorconfig_core#handler#get_configurations	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! editorconfig_core#handler#get_configurations(job)$/;"	f
editorconfig_core#ini#read_ini_file	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! editorconfig_core#ini#read_ini_file(config_filename, target_filename)$/;"	f
editorconfig_core#util#Separator	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#Separator()$/;"	f
editorconfig_core#util#is_win	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#is_win()$/;"	f
editorconfig_core#util#path_join	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#path_join(a, b)$/;"	f
editorconfig_core#util#strip	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#strip(s)$/;"	f
editorconfig_core#version	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#version()$/;"	f
editorconfig_dosini	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^augroup editorconfig_dosini$/;"	a
egrep_pattern	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:egrep_pattern(dict,boundaries)$/;"	f
elapsed	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
elm_ls#GetOptions	.vim_runtime/sources_non_forked/ale/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetOptions(buffer) abort$/;"	f
elm_ls#GetRootDir	.vim_runtime/sources_non_forked/ale/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetRootDir(buffer) abort$/;"	f
enable_staging_from_hunk_preview_window	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:enable_staging_from_hunk_preview_window()$/;"	f
end	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/methods_spec.rb	/^      def end end$/;"	f
end_latency_measure	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:end_latency_measure()$/;"	f
endl	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%tests%test_config.cpp	/^	·/;"	m	class:std	file:
entryMap	.vim/src/vjde/completion/ClassPathEntry.java	/^    private static Map entryMap = new HashMap();$/;"	f	class:ClassPathEntry	file:	access:private
env_reload#ReloadEnv	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/env_reload.vim	/^fun! env_reload#ReloadEnv(bash_export_command_output)$/;"	f
error	rainbow/log.cpp	/^void Logger::error(LogEvent::ptr event) { log(LogLevel::ERROR, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
error	rainbow/log.h	/^    void error(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
error_number	.vim/src/readtags.h	/^		int error_number;$/;"	m	struct:__anon7::__anon8	access:public
esctagscmd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
evaluate_expand	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
evaluate_expand	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
evaluate_expand	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
exceptionMappings	.vim/src/vjde/completion/Struts2Configure.java	/^				public ExceptionMapping[] exceptionMappings() {$/;"	m	class:ActionImpl	access:public	signature:()
excl	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
execextvar	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
executable	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
existing	.vim/plugin/supertab.vim	/^    let existing = maparg('<tab>', 'i')$/;"	v
existing_stab	.vim/bundle/supertab/plugin/supertab.vim	/^      let existing_stab = maparg('<s-tab>', 'i', 0, 1)$/;"	v
existing_tab	.vim/bundle/supertab/plugin/supertab.vim	/^    let existing_tab = maparg('<tab>', 'i')$/;"	v
exists_file	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
exit	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit()$/;"	f
exit_friendly	.vim/src/wspawn.cpp	/^void exit_friendly(void)$/;"	f	signature:(void)
exit_visual_mode	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit_visual_mode()$/;"	f
expand	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
expand	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
expand	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
expand	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
expand	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
expand	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
expand_braces	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:expand_braces(dict)$/;"	f
expand_path	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
expand_region	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:expand_region(mode, direction)$/;"	f
expand_region#custom_text_objects	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#custom_text_objects(...)$/;"	f
expand_region#init	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#init()$/;"	f
expand_region#next	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#next(mode, direction)$/;"	f
expand_region#use_select_mode	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#use_select_mode()$/;"	f
expect	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let expect = ['a x ', [2, '(', [3, { 'pat' : 'a', 'sub' : 'b' }], ')']]$/;"	v
expect	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let expect = [[[1, { 'pat' : 'abc', 'sub' : 'def' }]]]$/;"	v
expect	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let expect = [[[1234567890]]]$/;"	v
expect	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let expect[0][0][1].flags = ''$/;"	v
expect	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let expect[0][0][1].flags = 'g'$/;"	v
expected	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^  let expected = [{'lnum': 1, 'name': 'GitGutterLineRemovedFirstLine'}]$/;"	v
expected	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^  let expected = [{'lnum': 2, 'name': 'GitGutterLineRemoved'}]$/;"	v
expkg	.vim/src/vjde/completion/Struts2Configure.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Configure	access:default
expkg	.vim/src/vjde/completion/Struts2Simple.java	/^	XPathExpression expkg= null ;$/;"	f	class:Struts2Simple	access:default
expr_map	.vim/bundle/supertab/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	.vim/bundle/supertab/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	.vim/bundle/supertab/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
expr_map	.vim/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	.vim/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	.vim/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
expriclude	.vim/src/vjde/completion/Struts2Configure.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Configure	access:default
expriclude	.vim/src/vjde/completion/Struts2Simple.java	/^	XPathExpression expriclude= null ;$/;"	f	class:Struts2Simple	access:default
exprpackage	.vim/src/vjde/completion/Struts2Configure.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Configure	access:default
exprpackage	.vim/src/vjde/completion/Struts2Simple.java	/^	XPathExpression exprpackage = null ;$/;"	f	class:Struts2Simple	access:default
extensionFields	.vim/src/readtags.c	/^static int extensionFields;$/;"	v	file:
extractafter	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractopts	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:extractopts(list,opts)$/;"	f
factory	.vim/src/vjde/completion/Struts2Configure.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Configure	access:default
factory	.vim/src/vjde/completion/Struts2Simple.java	/^	static XPathFactory factory = XPathFactory.newInstance();$/;"	f	class:Struts2Simple	access:default
fatal	rainbow/log.cpp	/^void Logger::fatal(LogEvent::ptr event) { log(LogLevel::FATAL, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
fatal	rainbow/log.h	/^    void fatal(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
feedkeys	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:feedkeys(keys)$/;"	f
fetch_scripts	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
fields	.vim/src/readtags.c	/^    } fields;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon3	file:	access:public
fields	.vim/src/readtags.h	/^	} fields;$/;"	m	struct:__anon12	typeref:struct:__anon12::__anon14	access:public
file	.vim/src/readtags.h	/^	const char *file;$/;"	m	struct:__anon12	access:public
file	.vim/src/readtags.h	/^	} file;$/;"	m	struct:__anon7	typeref:struct:__anon7::__anon9	access:public
file	rainbow/log.cpp	/^    std::string file;$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
fileScope	.vim/src/readtags.h	/^	short fileScope;$/;"	m	struct:__anon12	access:public
filename	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
filter	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
find	.vim/src/readtags.c	/^static tagResult find (tagFile *const file, tagEntry *const entry,$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry, const char *const name, const int options)
find	.vim_runtime/autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd)$/;"	f
findAndRevealPath	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
findAnnotation	.vim/src/vjde/completion/Struts2Configure.java	/^	public void findAnnotation()$/;"	m	class:Struts2Configure	access:public	signature:()
findAnnotation	.vim/src/vjde/completion/Struts2Configure.java	/^	public void findAnnotation(String pkg)$/;"	m	class:Struts2Configure	access:public	signature:(String pkg)
findBinary	.vim/src/readtags.c	/^static tagResult findBinary (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findCloseTag	.vim/ftplugin/xml.vim	/^fun! s:findCloseTag(flag)	$/;"	f
findFirstMatchBefore	.vim/src/readtags.c	/^static tagResult findFirstMatchBefore (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findFirstNonMatchBefore	.vim/src/readtags.c	/^static void findFirstNonMatchBefore (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findInclues	.vim/src/vjde/completion/Struts2Configure.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
findInclues	.vim/src/vjde/completion/Struts2Simple.java	/^	public NodeList findInclues(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
findInxml	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Configure	access:public	signature:()
findInxml	.vim/src/vjde/completion/Struts2Simple.java	/^	public boolean findInxml() {$/;"	m	class:Struts2Simple	access:public	signature:()
findMembers	.vim/src/readtags.c	/^static void findMembers(const char *const k,const char* const v,$/;"	f	file:	signature:(const char *const k,const char* const v, const char *const name, const int options)
findNext	.vim/src/readtags.c	/^static tagResult findNext (tagFile *const file, tagEntry *const entry)$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry)
findOpenTag	.vim/ftplugin/xml.vim	/^fun! s:findOpenTag(flag)	$/;"	f
findPackages	.vim/src/vjde/completion/Struts2Configure.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
findPackages	.vim/src/vjde/completion/Struts2Simple.java	/^	public NodeList findPackages(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
findSequential	.vim/src/readtags.c	/^static tagResult findSequential (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
findStruts2	.vim/src/vjde/completion/Struts2Configure.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
findStruts2	.vim/src/vjde/completion/Struts2Simple.java	/^	public Document findStruts2(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
findTag	.vim/src/readtags.c	/^static void findTag (const char *const name, const int options)$/;"	f	file:	signature:(const char *const name, const int options)
findTag4Kind	.vim/src/readtags.c	/^static void findTag4Kind(const char *const k,$/;"	f	file:	signature:(const char *const k, const char *const name, const int options)
findType	.vim/src/CSParser.cs	/^        private static void findType() {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:()
findType	.vim/src/TypeFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.TypeFinder	access:public	signature:()
findType	.vim/src/UsingFinder.cs	/^        public static List<String> findType()$/;"	m	class:Wangfc.UsingFinder	access:public	signature:()
findWeb	.vim/src/vjde/completion/Struts2Configure.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Configure	access:public	signature:(String webapp)
findWeb	.vim/src/vjde/completion/Struts2Simple.java	/^	public Document findWeb(String webapp)$/;"	m	class:Struts2Simple	access:public	signature:(String webapp)
findXml	.vim/src/vjde/completion/Struts2Configure.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Configure	access:public	signature:(String xml)
findXml	.vim/src/vjde/completion/Struts2Simple.java	/^	public Document findXml(String xml) {$/;"	m	class:Struts2Simple	access:public	signature:(String xml)
find_command	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:find_command(cmd,flags,word)$/;"	f
find_current_signs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
find_next	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:find_next(text)$/;"	f
find_opening_paren	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
find_start_of_block	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
find_start_of_multiline_statement	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
findcommon	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str, tgaddr)$/;"	f
findroot	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
fire_pre_triggers	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:fire_pre_triggers()$/;"	f
first_time	.vim/src/previewwindow.cpp	/^	gboolean first_time = FALSE;$/;"	v
fix_file_references	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
fixindent	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
flake8#Flake8	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! flake8#Flake8()$/;"	f
flake8#Flake8ShowError	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! flake8#Flake8ShowError()$/;"	f
flake8#Flake8UnplaceMarkers	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^function! flake8#Flake8UnplaceMarkers()$/;"	f
flatten	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
fnameescape	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnesc	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
foldable	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
folded	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:folded()$/;"	f
foldmarker	.vim_runtime/sources_non_forked/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f	access:public
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/basic_spec.rb	/^      def foo$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo(job)$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/continuations_spec.rb	/^      def foo$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/methods_spec.rb	/^      def foo bar$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/methods_spec.rb	/^      def foo bar:; end$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/methods_spec.rb	/^      def foo bar=:baz$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^          def foo &bar$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo **bar$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo *bar$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo(&bar)$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo(*)$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo(**)$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo(**bar)$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo(*bar)$/;"	f
foo	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/operators_spec.rb	/^        def foo(bar,$/;"	f
format	.vim/src/readtags.c	/^    short format;$/;"	m	struct:sTagFile	file:	access:public
format	.vim/src/readtags.h	/^		short format;$/;"	m	struct:__anon7::__anon9	access:public
format	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
format	rainbow/log.cpp	/^std::string LogFormatter::format(std::shared_ptr<Logger> logger,$/;"	f	class:rainbow::LogFormatter	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
format	rainbow/log.cpp	/^void LogEvent::format(const char* fmt, ...) {$/;"	f	class:rainbow::LogEvent	signature:(const char* fmt, ...)
format	rainbow/log.cpp	/^void LogEvent::format(const char* fmt, va_list al) {$/;"	f	class:rainbow::LogEvent	signature:(const char* fmt, va_list al)
format	rainbow/log.cpp	/^void LogFormatter::FormatItem::format(std::ostream& os,$/;"	f	class:rainbow::LogFormatter::FormatItem	signature:(std::ostream& os, std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
format	rainbow/log.h	/^        virtual void format(std::ostream& os, std::shared_ptr<Logger> logger,$/;"	p	class:rainbow::LogFormatter::FormatItem	access:public	signature:(std::ostream& os, std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
format	rainbow/log.h	/^    std::ostream& format(std::ostream& ofs, std::shared_ptr<Logger> ptr, LogLevel::Level level, LogEvent::ptr event);$/;"	p	class:rainbow::LogFormatter	access:public	signature:(std::ostream& ofs, std::shared_ptr<Logger> ptr, LogLevel::Level level, LogEvent::ptr event)
format	rainbow/log.h	/^    std::string format(std::shared_ptr<Logger> ptr, LogLevel::Level level,$/;"	p	class:rainbow::LogFormatter	access:public	signature:(std::shared_ptr<Logger> ptr, LogLevel::Level level, LogEvent::ptr event)
format	rainbow/log.h	/^    void format(const char* fmt, ...);$/;"	p	class:rainbow::LogEvent	access:public	signature:(const char* fmt, ...)
format	rainbow/log.h	/^    void format(const char* fmt, va_list al);$/;"	p	class:rainbow::LogEvent	access:public	signature:(const char* fmt, va_list al)
format_for_log	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
format_gist	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:format_gist(gist) abort$/;"	f
format_gist	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:format_gist(gist) abort$/;"	f
formatline	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatline2	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline2(ct, key, str)$/;"	f
formatter	rainbow/log.cpp	/^    std::string formatter;$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
formatter	rainbow/log.cpp	/^    std::string formatter;$/;"	m	struct:rainbow::LogDefine	file:	access:public
formatul	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
fp	.vim/src/readtags.c	/^    FILE* fp;$/;"	m	struct:sTagFile	file:	access:public
friendly_name	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
fromString	rainbow/config.h	/^    bool fromString(const std::string& val) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(const std::string& val)
fromString	rainbow/config.h	/^    virtual bool fromString(const std::string& val) = 0;$/;"	p	class:rainbow::ConfigVarBase	access:public	signature:(const std::string& val)
fugitive	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#Autowrite	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Autowrite() abort$/;"	f
fugitive#BlameComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameFileType	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameFileType() abort$/;"	f
fugitive#BlameSyntax	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#BufReadCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus() abort$/;"	f
fugitive#BufWriteCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#Cd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P, ...) abort$/;"	f
fugitive#CommonDir	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteForWorkingDir	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteForWorkingDir(A, L, P, ...) abort$/;"	f
fugitive#CompleteObject	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#ConfigGetAll	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetAll(name, ...) abort$/;"	f
fugitive#ConfigGetRegexp	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetRegexp(pattern, ...) abort$/;"	f
fugitive#Cwindow	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#DiffClose	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DiffClose() abort$/;"	f
fugitive#Diffsplit	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, args) abort$/;"	f
fugitive#EditComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EditComplete(A, L, P) abort$/;"	f
fugitive#EfmDir	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EfmDir(...) abort$/;"	f
fugitive#Expand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#FetchComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P, ...) abort$/;"	f
fugitive#FileReadCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GX	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GX() abort$/;"	f
fugitive#GitVersion	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepCommand(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#GrepComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P, ...) abort$/;"	f
fugitive#MessageCfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#Object	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, args) abort$/;"	f
fugitive#PagerFor	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PagerFor(argv, ...) abort$/;"	f
fugitive#Path	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#Prepare	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvGitArgv	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvGitArgv(...) abort$/;"	f
fugitive#PullComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P, ...) abort$/;"	f
fugitive#PushComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P, ...) abort$/;"	f
fugitive#ReadCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#ReadComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P, ...) abort$/;"	f
fugitive#ReloadStatus	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#RemoteUrl	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#ResolveRemote	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ResolveRemote(remote) abort$/;"	f
fugitive#Result	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Result(...) abort$/;"	f
fugitive#Resume	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Resume() abort$/;"	f
fugitive#RevParse	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P, ...) abort$/;"	f
fugitive#SourceCmd	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#SshHostAlias	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshHostAlias(...) abort$/;"	f
fugitive#StatusCfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#StatusCfile() abort$/;"	f
fugitive#Statusline	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#WqCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#buffer	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive_blame	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_diff	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_job	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_job$/;"	a
fugitive_status	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
fun1	tests/test_thread.cpp	/^void fun1() {$/;"	f	signature:()
fun2	tests/test_thread.cpp	/^void fun2() {$/;"	f	signature:()
func	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:func(name) abort$/;"	f
func	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:func(name) abort$/;"	f
func	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:func(name) abort$/;"	f
funcref#Call	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/funcref.vim	/^function! funcref#Call(...)$/;"	f
funcref#Function	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/funcref.vim	/^function! funcref#Function(name,...)$/;"	f
function	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:function(name)$/;"	f
function	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
futures	.vim_runtime/update_plugins.py	/^        futures = None$/;"	v
g:AutoPairs	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":"'''", "`":"`"}$/;"	v
g:AutoPairsCenterLine	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsFlyMode	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsShortcutBackInsert	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:AutoPairsWildClosedPair	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsWildClosedPair = ''$/;"	v
g:BufExplorer_title	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let g:BufExplorer_title = "\\[Buf\\ List\\]"$/;"	v
g:EditorConfig_disable_rules	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_disable_rules = []$/;"	v
g:EditorConfig_exclude_patterns	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exclude_patterns = []$/;"	v
g:EditorConfig_exclude_patterns	.vim_runtime/vimrcs/plugins_config.vim	/^let g:EditorConfig_exclude_patterns = ['fugitive:\/\/.*']$/;"	v
g:EditorConfig_exec_path	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exec_path = ''$/;"	v
g:EditorConfig_max_line_indicator	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_max_line_indicator = 'line'$/;"	v
g:EditorConfig_preserve_formatoptions	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_preserve_formatoptions = 0$/;"	v
g:EditorConfig_verbose	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_verbose = 0$/;"	v
g:NERDTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarksFile	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') . '\/.NERDTreeBookmarks')$/;"	v
g:NERDTreeBookmarksSort	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveSort	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirArrowCollapsible	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '‚ñæ')$/;"	v
g:NERDTreeDirArrowExpandable	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '‚ñ∏')$/;"	v
g:NERDTreeDirNode	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGlyphReadOnly	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeIgnore	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeKeyMap	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpFirstChild	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivateNode)$/;"	v
g:NERDTreeMapPreviewSplit	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSplit)$/;"	v
g:NERDTreeMapPreviewVSplit	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSplit)$/;"	v
g:NERDTreeMapQuit	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFiles	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '\\~$'])$/;"	v
g:NERDTreeStatusline	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}")$/;"	v
g:NERDTreeUI	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinPos	.vim_runtime/vimrcs/plugins_config.vim	/^let g:NERDTreeWinPos = "right"$/;"	v
g:NERDTreeWinSize	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:NERDTreeWinSize	.vim_runtime/vimrcs/plugins_config.vim	/^let g:NERDTreeWinSize=35$/;"	v
g:SuperTabClosePreviewOnPopupClose	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabClosePreviewOnPopupClose	.vim/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompleteCase	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabCompleteCase = 'inherit'$/;"	v
g:SuperTabCompletionContexts	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabCompletionContexts	.vim/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabContextDefaultCompletionType	.vim/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabContextTextMemberPatterns	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabContextTextMemberPatterns = ['\\.', '>\\?::', '->']$/;"	v
g:SuperTabCrMapping	.vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabCrMapping = 0$/;"	v
g:SuperTabCrMapping	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 0$/;"	v
g:SuperTabCrMapping	.vim/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabDefaultCompletionType	.vim/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabDefaultCompletionType	.vim_runtime/my_configs.vim	/^let g:SuperTabDefaultCompletionType="<C-X><C-O>"$/;"	v
g:SuperTabLongestEnhanced	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestEnhanced	.vim/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabLongestHighlight	.vim/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingBackward	.vim/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingForward	.vim/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabMappingTabLiteral	.vim/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	.vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	.vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteAfter	.vim/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	.vim/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	.vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	.vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabNoCompleteBefore	.vim/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	.vim/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabRetainCompletionDuration	.vim/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabRetainCompletionType	.vim_runtime/my_configs.vim	/^let g:SuperTabRetainCompletionType=2$/;"	v
g:SuperTabUndoBreak	.vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:SuperTabUndoBreak	.vim/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:__ale_c_project_filenames	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^let g:__ale_c_project_filenames = ['.git\/HEAD', 'configure', 'Makefile', 'CMakeLists.txt']$/;"	v
g:abolish_save_file	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/.vim\/after\/plugin\/abolish.vim")$/;"	v
g:abolish_save_file	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/vimfiles\/after\/plugin\/abolish.vim")$/;"	v
g:ack_apply_lmappings	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_apply_lmappings = !exists("g:ack_lhandler")$/;"	v
g:ack_apply_qmappings	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_apply_qmappings = !exists("g:ack_qhandler")$/;"	v
g:ack_autoclose	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_autoclose = 0$/;"	v
g:ack_autofold_results	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_autofold_results = 0$/;"	v
g:ack_default_options	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_default_options = " -s -H --nopager --nocolor --nogroup --column"$/;"	v
g:ack_lhandler	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_lhandler = "botright lopen"$/;"	v
g:ack_mappings	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = extend(s:ack_mappings, g:ack_mappings)$/;"	v
g:ack_mappings	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = s:ack_mappings$/;"	v
g:ack_qhandler	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_qhandler = "botright copen"$/;"	v
g:ack_use_cword_for_empty_search	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ack_use_cword_for_empty_search = 1$/;"	v
g:ack_use_dispatch	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^    let g:ack_use_dispatch = 0$/;"	v
g:ack_use_dispatch	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^  let g:ack_use_dispatch = 0$/;"	v
g:ackhighlight	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ackhighlight = 0$/;"	v
g:ackprg	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack"$/;"	v
g:ackprg	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack-grep"$/;"	v
g:ackprg	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^  let g:ackprg .= g:ack_default_options$/;"	v
g:ackprg	.vim_runtime/vimrcs/extended.vim	/^  let g:ackprg = 'ag --vimgrep --smart-case'$/;"	v
g:airline#themes#gruvbox#palette	.vim_runtime/sources_non_forked/gruvbox/autoload/airline/themes/gruvbox.vim	/^let g:airline#themes#gruvbox#palette = {}$/;"	v
g:ale#util#error_priority	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^let g:ale#util#error_priority = 5$/;"	v
g:ale#util#info_priority	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^let g:ale#util#info_priority = 3$/;"	v
g:ale#util#nul_file	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^        let g:ale#util#nul_file = 'nul'$/;"	v
g:ale#util#nul_file	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^    let g:ale#util#nul_file = '\/dev\/null'$/;"	v
g:ale#util#style_error_priority	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^let g:ale#util#style_error_priority = 2$/;"	v
g:ale#util#style_warning_priority	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^let g:ale#util#style_warning_priority = 1$/;"	v
g:ale#util#warning_priority	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^let g:ale#util#warning_priority = 4$/;"	v
g:ale_buffer_info	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_buffer_info = {}$/;"	v
g:ale_c_build_dir_names	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^let g:ale_c_build_dir_names = get(g:, 'ale_c_build_dir_names', [$/;"	v
g:ale_change_sign_column_color	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_change_sign_column_color = get(g:, 'ale_change_sign_column_color', 0)$/;"	v
g:ale_close_preview_on_insert	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_close_preview_on_insert = get(g:, 'ale_close_preview_on_insert', 0)$/;"	v
g:ale_cmake_cmakelint_executable	.vim_runtime/sources_non_forked/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_executable =$/;"	v
g:ale_cmake_cmakelint_options	.vim_runtime/sources_non_forked/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_options =$/;"	v
g:ale_command_wrapper	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^let g:ale_command_wrapper = get(g:, 'ale_command_wrapper', '')$/;"	v
g:ale_completion_autoimport	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_completion_autoimport = get(g:, 'ale_completion_autoimport', 0)$/;"	v
g:ale_completion_delay	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_completion_delay = get(g:, 'ale_completion_delay', 100)$/;"	v
g:ale_completion_enabled	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_completion_enabled = get(g:, 'ale_completion_enabled', 0)$/;"	v
g:ale_completion_excluded_words	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_completion_excluded_words = get(g:, 'ale_completion_excluded_words', [])$/;"	v
g:ale_completion_max_suggestions	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_completion_max_suggestions = get(g:, 'ale_completion_max_suggestions', 50)$/;"	v
g:ale_completion_symbols	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_completion_symbols = get(g:, 'ale_completion_symbols', {$/;"	v
g:ale_completion_tsserver_remove_warnings	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_completion_tsserver_remove_warnings = get(g:, 'ale_completion_tsserver_remove_warnings', 0)$/;"	v
g:ale_cs_mcs_options	.vim_runtime/sources_non_forked/ale/ale_linters/cs/mcs.vim	/^let g:ale_cs_mcs_options = get(g:, 'ale_cs_mcs_options', '')$/;"	v
g:ale_cursor_detail	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_cursor_detail = get(g:, 'ale_cursor_detail', 0)$/;"	v
g:ale_default_navigation	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_default_navigation	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_detail_to_floating_preview	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_detail_to_floating_preview = get(g:, 'ale_detail_to_floating_preview', 0)$/;"	v
g:ale_disable_lsp	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_disable_lsp = get(g:, 'ale_disable_lsp', 0)$/;"	v
g:ale_echo_cursor	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_echo_cursor = get(g:, 'ale_echo_cursor', 1)$/;"	v
g:ale_echo_delay	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^let g:ale_echo_delay = get(g:, 'ale_echo_delay', 10)$/;"	v
g:ale_echo_msg_error_str	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_echo_msg_error_str = get(g:, 'ale_echo_msg_error_str', 'Error')$/;"	v
g:ale_echo_msg_format	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^let g:ale_echo_msg_format = get(g:, 'ale_echo_msg_format', '%code: %%s')$/;"	v
g:ale_echo_msg_info_str	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_echo_msg_info_str = get(g:, 'ale_echo_msg_info_str', 'Info')$/;"	v
g:ale_echo_msg_log_str	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_echo_msg_log_str = get(g:, 'ale_echo_msg_log_str', 'Log')$/;"	v
g:ale_echo_msg_warning_str	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_echo_msg_warning_str = get(g:, 'ale_echo_msg_warning_str', 'Warning')$/;"	v
g:ale_enabled	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_enabled = get(g:, 'ale_enabled', 1)$/;"	v
g:ale_erlang_dialyzer_executable	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_executable =$/;"	v
g:ale_erlang_dialyzer_options	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_options =$/;"	v
g:ale_erlang_dialyzer_plt_file	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_plt_file =$/;"	v
g:ale_erlang_dialyzer_rebar3_profile	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_rebar3_profile =$/;"	v
g:ale_erlang_erlc_executable	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_executable = get(g:, 'ale_erlang_erlc_executable', 'erlc')$/;"	v
g:ale_erlang_erlc_options	.vim_runtime/sources_non_forked/ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_options = get(g:, 'ale_erlang_erlc_options', '')$/;"	v
g:ale_exclude_highlights	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_exclude_highlights = get(g:, 'ale_exclude_highlights', [])$/;"	v
g:ale_filename_mappings	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filetype_blacklist	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_filetype_blacklist = [$/;"	v
g:ale_fix_buffer_data	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_fix_buffer_data = {}$/;"	v
g:ale_fix_on_save	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_fix_on_save = get(g:, 'ale_fix_on_save', 0)$/;"	v
g:ale_fix_on_save_ignore	.vim_runtime/sources_non_forked/ale/autoload/ale/fix.vim	/^let g:ale_fix_on_save_ignore = get(g:, 'ale_fix_on_save_ignore', {})$/;"	v
g:ale_fixers	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_fixers = get(g:, 'ale_fixers', {})$/;"	v
g:ale_floating_preview	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_floating_preview = get(g:, 'ale_floating_preview', 0)$/;"	v
g:ale_floating_window_border	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_floating_window_border = get(g:, 'ale_floating_window_border', ['|', '-', '+', '+', '+', '+'])$/;"	v
g:ale_go_go111module	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_go_go111module = get(g:, 'ale_go_go111module', '')$/;"	v
g:ale_history_enabled	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_history_enabled = get(g:, 'ale_history_enabled', 1)$/;"	v
g:ale_history_log_output	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_history_log_output = get(g:, 'ale_history_log_output', 1)$/;"	v
g:ale_hover_cursor	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_hover_cursor = get(g:, 'ale_hover_cursor', 1)$/;"	v
g:ale_hover_to_floating_preview	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_hover_to_floating_preview = get(g:, 'ale_hover_to_floating_preview', 0)$/;"	v
g:ale_hover_to_preview	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_hover_to_preview = get(g:, 'ale_hover_to_preview', 0)$/;"	v
g:ale_html_tidy_executable	.vim_runtime/sources_non_forked/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_executable = get(g:, 'ale_html_tidy_executable', 'tidy')$/;"	v
g:ale_html_tidy_options	.vim_runtime/sources_non_forked/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_options = get(g:, 'ale_html_tidy_options', '-q -e -language en')$/;"	v
g:ale_java_pmd_options	.vim_runtime/sources_non_forked/ale/ale_linters/java/pmd.vim	/^    let g:ale_java_pmd_options = '-R category\/java\/bestpractices.xml'$/;"	v
g:ale_keep_list_window_open	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^let g:ale_keep_list_window_open = get(g:, 'ale_keep_list_window_open', 0)$/;"	v
g:ale_kotlin_kotlinc_classpath	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_classpath = get(g:, 'ale_kotlin_kotlinc_classpath', '')$/;"	v
g:ale_kotlin_kotlinc_config_file	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_config_file = get(g:, 'ale_kotlin_kotlinc_config_file', '.ale_kotlinc_config')$/;"	v
g:ale_kotlin_kotlinc_enable_config	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_enable_config = get(g:, 'ale_kotlin_kotlinc_enable_config', 0)$/;"	v
g:ale_kotlin_kotlinc_module_filename	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_module_filename = get(g:, 'ale_kotlin_kotlinc_module_filename', 'module.xml')$/;"	v
g:ale_kotlin_kotlinc_options	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_options = get(g:, 'ale_kotlin_kotlinc_options', '')$/;"	v
g:ale_kotlin_kotlinc_sourcepath	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_sourcepath = get(g:, 'ale_kotlin_kotlinc_sourcepath', '')$/;"	v
g:ale_kotlin_kotlinc_use_module_file	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_use_module_file = get(g:, 'ale_kotlin_kotlinc_use_module_file', 0)$/;"	v
g:ale_lint_delay	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_lint_delay = get(g:, 'ale_lint_delay', 200)$/;"	v
g:ale_lint_on_enter	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_lint_on_enter = get(g:, 'ale_lint_on_enter', 1)$/;"	v
g:ale_lint_on_enter	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ale_lint_on_enter = 0$/;"	v
g:ale_lint_on_filetype_changed	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_lint_on_filetype_changed = get(g:, 'ale_lint_on_filetype_changed', 1)$/;"	v
g:ale_lint_on_insert_leave	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_lint_on_insert_leave = get(g:, 'ale_lint_on_insert_leave', 1)$/;"	v
g:ale_lint_on_save	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_lint_on_save = get(g:, 'ale_lint_on_save', 1)$/;"	v
g:ale_lint_on_text_changed	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_lint_on_text_changed = get(g:, 'ale_lint_on_text_changed', 'normal')$/;"	v
g:ale_lint_on_text_changed	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ale_lint_on_text_changed = 'never'$/;"	v
g:ale_linter_aliases	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_linters	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_linters = get(g:, 'ale_linters', {})$/;"	v
g:ale_linters	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ale_linters = {$/;"	v
g:ale_linters_explicit	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_linters_explicit = get(g:, 'ale_linters_explicit', 0)$/;"	v
g:ale_linters_ignore	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_linters_ignore = get(g:, 'ale_linters_ignore', {})$/;"	v
g:ale_list_vertical	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^let g:ale_list_vertical = get(g:, 'ale_list_vertical', 0)$/;"	v
g:ale_list_window_size	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^let g:ale_list_window_size = get(g:, 'ale_list_window_size', 10)$/;"	v
g:ale_loclist_msg_format	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^let g:ale_loclist_msg_format = get(g:, 'ale_loclist_msg_format',$/;"	v
g:ale_lsp_next_message_id	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_version_id	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_show_message_format	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_lsp_show_message_format = get(g:, 'ale_lsp_show_message_format', '%severity%:%linter%: %s')$/;"	v
g:ale_lsp_show_message_severity	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let g:ale_lsp_show_message_severity = get(g:, 'ale_lsp_show_message_severity', 'error')$/;"	v
g:ale_lsp_suggestions	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_lsp_suggestions = get(g:, 'ale_lsp_suggestions', 0)$/;"	v
g:ale_lsp_types	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_lsp_types = {$/;"	v
g:ale_max_buffer_history_size	.vim_runtime/sources_non_forked/ale/autoload/ale/history.vim	/^let g:ale_max_buffer_history_size = get(g:, 'ale_max_buffer_history_size', 20)$/;"	v
g:ale_max_signs	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_max_signs = get(g:, 'ale_max_signs', -1)$/;"	v
g:ale_objc_clang_options	.vim_runtime/sources_non_forked/ale/ale_linters/objc/clang.vim	/^    let g:ale_objc_clang_options = '-std=c11 -Wall'$/;"	v
g:ale_objcpp_clang_options	.vim_runtime/sources_non_forked/ale/ale_linters/objcpp/clang.vim	/^    let g:ale_objcpp_clang_options = '-std=c++14 -Wall'$/;"	v
g:ale_open_list	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^let g:ale_open_list = get(g:, 'ale_open_list', 0)$/;"	v
g:ale_perl6_perl6_executable	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_executable =$/;"	v
g:ale_perl6_perl6_options	.vim_runtime/sources_non_forked/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_options =$/;"	v
g:ale_php_phan_executable	.vim_runtime/sources_non_forked/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_executable = get(g:, 'ale_php_phan_executable', 'phan')$/;"	v
g:ale_php_phan_minimum_severity	.vim_runtime/sources_non_forked/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_minimum_severity = get(g:, 'ale_php_phan_minimum_severity', 0)$/;"	v
g:ale_php_phan_use_client	.vim_runtime/sources_non_forked/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_use_client = get(g:, 'ale_php_phan_use_client', 0)$/;"	v
g:ale_php_phpcs_standard	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpcs.vim	/^let g:ale_php_phpcs_standard = get(g:, 'ale_php_phpcs_standard', '')$/;"	v
g:ale_php_phpmd_executable	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_executable = get(g:, 'ale_php_phpmd_executable', 'phpmd')$/;"	v
g:ale_php_phpmd_ruleset	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_ruleset = get(g:, 'ale_php_phpmd_ruleset', 'cleancode,codesize,controversial,design,naming,unusedcode')$/;"	v
g:ale_php_phpstan_autoload	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_autoload = get(g:, 'ale_php_phpstan_autoload', '')$/;"	v
g:ale_php_phpstan_configuration	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_configuration = get(g:, 'ale_php_phpstan_configuration', '')$/;"	v
g:ale_php_phpstan_executable	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_executable = get(g:, 'ale_php_phpstan_executable', 'phpstan')$/;"	v
g:ale_php_phpstan_level	.vim_runtime/sources_non_forked/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_level = get(g:, 'ale_php_phpstan_level', '')$/;"	v
g:ale_popup_menu_enabled	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_popup_menu_enabled = get(g:, 'ale_popup_menu_enabled', has('gui_running'))$/;"	v
g:ale_puppet_puppetlint_executable	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_executable = 'puppet-lint'$/;"	v
g:ale_puppet_puppetlint_options	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_options = ''$/;"	v
g:ale_python_auto_pipenv	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_python_auto_pipenv = get(g:, 'ale_python_auto_pipenv', 0)$/;"	v
g:ale_python_prospector_executable	.vim_runtime/sources_non_forked/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_executable =$/;"	v
g:ale_python_prospector_options	.vim_runtime/sources_non_forked/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_options =$/;"	v
g:ale_python_prospector_use_global	.vim_runtime/sources_non_forked/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_use_global = get(g:, 'ale_python_prospector_use_global', get(g:, 'ale_use_global_executables', 0))$/;"	v
g:ale_r_lintr_lint_package	.vim_runtime/sources_non_forked/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_lint_package = get(g:, 'ale_r_lintr_lint_package', 0)$/;"	v
g:ale_r_lintr_options	.vim_runtime/sources_non_forked/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_options = get(g:, 'ale_r_lintr_options', 'with_defaults()')$/;"	v
g:ale_rename_tsserver_find_in_comments	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_comments = get(g:, 'ale_rename_tsserver_find_in_comments')$/;"	v
g:ale_rename_tsserver_find_in_strings	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_strings = get(g:, 'ale_rename_tsserver_find_in_strings')$/;"	v
g:ale_root	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_root = get(g:, 'ale_root', {})$/;"	v
g:ale_rust_ignore_error_codes	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_error_codes = []$/;"	v
g:ale_rust_ignore_secondary_spans	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_secondary_spans = 0$/;"	v
g:ale_set_balloons	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_set_balloons = get(g:, 'ale_set_balloons', has('balloon_eval') && has('gui_running'))$/;"	v
g:ale_set_highlights	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_set_highlights = get(g:, 'ale_set_highlights', has('syntax'))$/;"	v
g:ale_set_highlights	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ale_set_highlights = 0$/;"	v
g:ale_set_loclist	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_set_loclist = get(g:, 'ale_set_loclist', 1)$/;"	v
g:ale_set_quickfix	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_set_quickfix = get(g:, 'ale_set_quickfix', 0)$/;"	v
g:ale_set_signs	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_set_signs = get(g:, 'ale_set_signs', has('signs'))$/;"	v
g:ale_sh_shell_default_shell	.vim_runtime/sources_non_forked/ale/ale_linters/sh/shell.vim	/^        let g:ale_sh_shell_default_shell = 'bash'$/;"	v
g:ale_sh_shell_default_shell	.vim_runtime/sources_non_forked/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = fnamemodify($SHELL, ':t')$/;"	v
g:ale_sh_shell_default_shell	.vim_runtime/sources_non_forked/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = g:ale_linters_sh_shell_default_shell$/;"	v
g:ale_sign_column_always	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_column_always = get(g:, 'ale_sign_column_always', 0)$/;"	v
g:ale_sign_error	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_error = get(g:, 'ale_sign_error', '>>')$/;"	v
g:ale_sign_highlight_linenrs	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_highlight_linenrs = get(g:, 'ale_sign_highlight_linenrs', 0)$/;"	v
g:ale_sign_info	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_info = get(g:, 'ale_sign_info', g:ale_sign_warning)$/;"	v
g:ale_sign_offset	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_offset = get(g:, 'ale_sign_offset', 1000000)$/;"	v
g:ale_sign_priority	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_priority = get(g:, 'ale_sign_priority', 30)$/;"	v
g:ale_sign_style_error	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_error = get(g:, 'ale_sign_style_error', g:ale_sign_error)$/;"	v
g:ale_sign_style_warning	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_warning = get(g:, 'ale_sign_style_warning', g:ale_sign_warning)$/;"	v
g:ale_sign_warning	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let g:ale_sign_warning = get(g:, 'ale_sign_warning', '--')$/;"	v
g:ale_tex_chktex_executable	.vim_runtime/sources_non_forked/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_executable =$/;"	v
g:ale_tex_chktex_options	.vim_runtime/sources_non_forked/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_options =$/;"	v
g:ale_tsserver_types	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let g:ale_tsserver_types = {$/;"	v
g:ale_type_map	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^let g:ale_type_map = get(g:, 'ale_type_map', {})$/;"	v
g:ale_update_tagstack	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^let g:ale_update_tagstack = get(g:, 'ale_update_tagstack', 1)$/;"	v
g:ale_verilog_verilator_options	.vim_runtime/sources_non_forked/ale/ale_linters/verilog/verilator.vim	/^    let g:ale_verilog_verilator_options = ''$/;"	v
g:ale_virtualenv_dir_names	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^let g:ale_virtualenv_dir_names = get(g:, 'ale_virtualenv_dir_names', [$/;"	v
g:ale_virtualtext_cursor	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_virtualtext_cursor = get(g:, 'ale_virtualtext_cursor', 0)$/;"	v
g:ale_virtualtext_delay	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^let g:ale_virtualtext_delay = get(g:, 'ale_virtualtext_delay', 10)$/;"	v
g:ale_warn_about_trailing_blank_lines	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_blank_lines = get(g:, 'ale_warn_about_trailing_blank_lines', 1)$/;"	v
g:ale_warn_about_trailing_whitespace	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_whitespace = get(g:, 'ale_warn_about_trailing_whitespace', 1)$/;"	v
g:ale_xml_xmllint_executable	.vim_runtime/sources_non_forked/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_executable = get(g:, 'ale_xml_xmllint_executable', 'xmllint')$/;"	v
g:ale_xml_xmllint_options	.vim_runtime/sources_non_forked/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_options = get(g:, 'ale_xml_xmllint_options', '')$/;"	v
g:alternateNoDefaultAlternate	.vim/plugin/a.vim	/^   let g:alternateNoDefaultAlternate = 0$/;"	v
g:alternateRelativeFiles	.vim/plugin/a.vim	/^   let g:alternateRelativeFiles = 0$/;"	v
g:alternateSearchPath	.vim/plugin/a.vim	/^  let g:alternateSearchPath = 'sfr:..\/source,sfr:..\/src,sfr:..\/include,sfr:..\/inc'$/;"	v
g:autoloaded_ack	.vim_runtime/sources_non_forked/ack.vim/autoload/ack.vim	/^let g:autoloaded_ack = 1$/;"	v
g:autoloaded_fugitive	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:bar	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let g:bar = 2$/;"	v
g:bufExplorerDefaultHelp	.vim_runtime/vimrcs/plugins_config.vim	/^let g:bufExplorerDefaultHelp=0$/;"	v
g:bufExplorerFindActive	.vim_runtime/vimrcs/plugins_config.vim	/^let g:bufExplorerFindActive=1$/;"	v
g:bufExplorerShowRelativePath	.vim_runtime/vimrcs/plugins_config.vim	/^let g:bufExplorerShowRelativePath=1$/;"	v
g:bufExplorerSortBy	.vim_runtime/vimrcs/plugins_config.vim	/^let g:bufExplorerSortBy='name'$/;"	v
g:bufExplorerVersionWarn	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^    let g:bufExplorerVersionWarn = 1$/;"	v
g:bufexplorer_version	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let g:bufexplorer_version = "7.4.21"$/;"	v
g:colors_name	.vim_runtime/sources_forked/peaksea/colors/peaksea.vim	/^let g:colors_name = "peaksea"$/;"	v
g:colors_name	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:completekey	.vim/plugin/code_complete.vim	/^    let g:completekey = "<tab>"   "hotkey$/;"	v
g:completekey	.vim_runtime/my_configs.vim	/^let g:completekey = "<C-j>"$/;"	v
g:ctrlp_autoignore_debug	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_debug = 0$/;"	v
g:ctrlp_autoignore_loaded	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_autoignore_loaded = 1$/;"	v
g:ctrlp_autoignore_trace	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_trace = 0$/;"	v
g:ctrlp_builtins	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let g:ctrlp_builtins = len(g:ctrlp_types)-1$/;"	v
g:ctrlp_custom_ignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_custom_ignore = {}$/;"	v
g:ctrlp_custom_ignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func'] = 'ctrlp#autoignore#ignore'$/;"	v
g:ctrlp_custom_ignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-close'] = 'ctrlp#autoignore#ignore_close'$/;"	v
g:ctrlp_custom_ignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-init'] = 'ctrlp#autoignore#ignore_init'$/;"	v
g:ctrlp_custom_ignore	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ctrlp_custom_ignore = 'node_modules\\|^\\.DS_Store\\|^\\.git\\|^\\.coffee'$/;"	v
g:ctrlp_map	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ctrlp_map = '<C-f>'$/;"	v
g:ctrlp_max_height	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ctrlp_max_height = 20$/;"	v
g:ctrlp_root_markers	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_root_markers = []$/;"	v
g:ctrlp_types	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_types = s:types$/;"	v
g:ctrlp_working_path_mode	.vim_runtime/vimrcs/plugins_config.vim	/^let g:ctrlp_working_path_mode = 0$/;"	v
g:did_ruby_ftplugin_functions	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:did_xml_menu	.vim/ftplugin/xml.vim	/^	let g:did_xml_menu = 1$/;"	v
g:editorconfig_core_vimscript_debug	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:eruby_default_subtype	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:foo	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let g:foo = 1$/;"	v
g:foo	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let g:foo = 'bar'$/;"	v
g:fugitive_summary_format	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gist_api_url	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^    let g:gist_api_url = 'https:\/\/api.github.com\/'$/;"	v
g:gist_api_url	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^  let g:gist_api_url .= '\/'$/;"	v
g:gist_api_url	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^  let g:gist_api_url = substitute(s:system('git config --get github.apiurl'), "\\n", '', '')$/;"	v
g:gist_api_url	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^    let g:gist_api_url = 'https:\/\/api.github.com\/'$/;"	v
g:gist_api_url	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^  let g:gist_api_url .= '\/'$/;"	v
g:gist_api_url	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^  let g:gist_api_url = substitute(s:system('git config --get github.apiurl'), "\\n", '', '')$/;"	v
g:gist_disabled	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^        let g:gist_disabled = 1$/;"	v
g:gist_disabled	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^        let g:gist_disabled = 1$/;"	v
g:gist_list_recursively_cache	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^  let g:gist_list_recursively_cache = get(g:, 'gist_list_recursively_cache', {})$/;"	v
g:gist_list_recursively_cache	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^  let g:gist_list_recursively_cache[a:user] = webapi#json#encode(gists)$/;"	v
g:gist_list_recursively_cache	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^  let g:gist_list_recursively_cache = get(g:, 'gist_list_recursively_cache', {})$/;"	v
g:gist_list_recursively_cache	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^  let g:gist_list_recursively_cache[a:user] = webapi#json#encode(gists)$/;"	v
g:gist_update_on_write	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^  let g:gist_update_on_write = 1$/;"	v
g:gist_update_on_write	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^  let g:gist_update_on_write = 1$/;"	v
g:gitgutter_async	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_async                        = get(g:, 'gitgutter_async', 1)$/;"	v
g:gitgutter_close_preview_on_escape	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_close_preview_on_escape      = get(g:, 'gitgutter_close_preview_on_escape', 0)$/;"	v
g:gitgutter_diff_args	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_args                    = get(g:, 'gitgutter_diff_args', '')$/;"	v
g:gitgutter_diff_base	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_base                    = get(g:, 'gitgutter_diff_base', '')$/;"	v
g:gitgutter_diff_relative_to	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_relative_to             = get(g:, 'gitgutter_diff_relative_to', 'index')$/;"	v
g:gitgutter_enabled	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_enabled = get(g:, 'gitgutter_enabled', 1)$/;"	v
g:gitgutter_enabled	.vim_runtime/vimrcs/plugins_config.vim	/^let g:gitgutter_enabled=0$/;"	v
g:gitgutter_git_args	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_args                     = get(g:, 'gitgutter_git_args', '')$/;"	v
g:gitgutter_git_executable	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_executable = get(g:, 'gitgutter_git_executable', 'git')$/;"	v
g:gitgutter_grep	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_grep	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_grep = get(g:, 'gitgutter_grep', default_grep)$/;"	v
g:gitgutter_highlight_linenrs	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_linenrs = get(g:, 'gitgutter_highlight_linenrs', 0)$/;"	v
g:gitgutter_highlight_lines	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_lines   = get(g:, 'gitgutter_highlight_lines', 0)$/;"	v
g:gitgutter_log	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_log                          = get(g:, 'gitgutter_log', 0)$/;"	v
g:gitgutter_map_keys	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_map_keys                     = get(g:, 'gitgutter_map_keys', 1)$/;"	v
g:gitgutter_max_signs	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', -1)$/;"	v
g:gitgutter_max_signs	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', 500)$/;"	v
g:gitgutter_override_sign_column_highlight	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_preview_win_floating	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', 1)$/;"	v
g:gitgutter_preview_win_floating	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', default)$/;"	v
g:gitgutter_preview_win_location	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_preview_win_location = get(g:, 'gitgutter_preview_win_location', 'bo')$/;"	v
g:gitgutter_set_sign_backgrounds	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_set_sign_backgrounds = get(g:, 'gitgutter_set_sign_backgrounds', 0)$/;"	v
g:gitgutter_show_msg_on_hunk_jumping	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_show_msg_on_hunk_jumping     = get(g:, 'gitgutter_show_msg_on_hunk_jumping', 1)$/;"	v
g:gitgutter_sign_added	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_added           = get(g:, 'gitgutter_sign_added', '+')$/;"	v
g:gitgutter_sign_allow_clobber	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_allow_clobber = 1$/;"	v
g:gitgutter_sign_allow_clobber	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_allow_clobber   = get(g:, 'gitgutter_sign_allow_clobber', 0)$/;"	v
g:gitgutter_sign_modified	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified        = get(g:, 'gitgutter_sign_modified', '~')$/;"	v
g:gitgutter_sign_modified_removed	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified_removed        = get(g:, 'gitgutter_sign_modified_removed', '~_')$/;"	v
g:gitgutter_sign_priority	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_priority     = get(g:, 'gitgutter_sign_priority', 10)$/;"	v
g:gitgutter_sign_removed	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed         = get(g:, 'gitgutter_sign_removed', '_')$/;"	v
g:gitgutter_sign_removed_above_and_below	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed_above_and_below = get(g:, 'gitgutter_sign_removed_above_and_below', '_¬Ø')$/;"	v
g:gitgutter_sign_removed_first_line	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '_^')$/;"	v
g:gitgutter_sign_removed_first_line	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '‚Äæ')$/;"	v
g:gitgutter_signs	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_signs             = get(g:, 'gitgutter_signs', 1)$/;"	v
g:gitgutter_terminal_reports_focus	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_terminal_reports_focus       = get(g:, 'gitgutter_terminal_reports_focus', 1)$/;"	v
g:gitgutter_use_location_list	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_use_location_list            = get(g:, 'gitgutter_use_location_list', 0)$/;"	v
g:github_user	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^    let g:github_user = $GITHUB_USER$/;"	v
g:github_user	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^  let g:github_user = substitute(s:system('git config --get github.user'), "\\n", '', '')$/;"	v
g:github_user	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^    let g:github_user = $GITHUB_USER$/;"	v
g:github_user	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^  let g:github_user = substitute(s:system('git config --get github.user'), "\\n", '', '')$/;"	v
g:goyo_callbacks	.vim_runtime/sources_non_forked/vim-zenroom2/plugin/zenroom2.vim	/^let g:goyo_callbacks = [ function('s:zenroom_goyo_before'), function('s:zenroom_goyo_after') ]$/;"	v
g:goyo_margin_bottom	.vim_runtime/vimrcs/plugins_config.vim	/^let g:goyo_margin_bottom = 2$/;"	v
g:goyo_margin_top	.vim_runtime/vimrcs/plugins_config.vim	/^let g:goyo_margin_top = 2$/;"	v
g:goyo_width	.vim_runtime/vimrcs/plugins_config.vim	/^let g:goyo_width=100$/;"	v
g:gruvbox_bold	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_bold=1$/;"	v
g:gruvbox_contrast_dark	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_guisp_fallback	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_guisp_fallback='NONE'$/;"	v
g:gruvbox_improved_strings	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_strings=0$/;"	v
g:gruvbox_improved_warnings	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_warnings=0$/;"	v
g:gruvbox_inverse	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_inverse=1$/;"	v
g:gruvbox_invert_indent_guides	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_italic	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=1$/;"	v
g:gruvbox_termcolors	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_underline=1$/;"	v
g:indentLine_color_gui	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indent_guides_auto_colors	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_autocmds_enabled	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_autocmds_enabled         = 0$/;"	v
g:indent_guides_color_hex_guibg_pattern	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_hex_guibg_pattern  = 'guibg=\\zs' . g:indent_guides_color_hex_pattern . '\\ze'$/;"	v
g:indent_guides_color_hex_pattern	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_hex_pattern        = '#[0-9A-Fa-f]\\{6\\}'$/;"	v
g:indent_guides_color_name_guibg_pattern	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_name_guibg_pattern = "guibg='\\\\?\\\\zs[0-9A-Za-z ]\\\\+\\\\ze'\\\\?"$/;"	v
g:indent_guides_exclude_filetypes	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^  let g:indent_guides_exclude_filetypes = ['help']$/;"	v
g:indent_object_except_first_level	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^	let g:indent_object_except_first_level = 1$/;"	v
g:io_fugitive	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:lastplace_ignore	.vim_runtime/sources_non_forked/vim-lastplace/plugin/vim-lastplace.vim	/^	let g:lastplace_ignore = "gitcommit,gitrebase,svn,hgcommit"$/;"	v
g:lastplace_ignore_buftype	.vim_runtime/sources_non_forked/vim-lastplace/plugin/vim-lastplace.vim	/^	let g:lastplace_ignore_buftype = "quickfix,nofile,help"$/;"	v
g:lastplace_open_folds	.vim_runtime/sources_non_forked/vim-lastplace/plugin/vim-lastplace.vim	/^	let g:lastplace_open_folds = 1$/;"	v
g:lasttab	.vim_runtime/vimrcs/basic.vim	/^let g:lasttab = 1$/;"	v
g:less_html_style_tags	.vim_runtime/sources_non_forked/vim-less/after/syntax/html.vim	/^  let g:less_html_style_tags = 1$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'custom' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'custom' }, 'component_raw': { 'custom': 1 } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'raw' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': 'Custom' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'component_function': { 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'component_expand': { 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '0' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '0', 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '0', 'custom3': '0' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '0', 'custom3': '1' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom3': '1' } }$/;"	v
g:lightline	.vim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	.vim_runtime/my_configs.vim	/^let g:lightline = {$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'custom' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'custom' }, 'component_raw': { 'custom': 1 } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'raw' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': 'Custom' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'component_function': { 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'component_expand': { 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '0' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '0', 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '0', 'custom3': '0' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '0', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'custom' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'custom' }, 'component_raw': { 'custom': 1 } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': 'raw' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': 'Custom' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'component_function': { 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'component_expand': { 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '0' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '0', 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '0', 'custom3': '0' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '0', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom1': '1', 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom2': '1', 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3': 'Custom3' }, 'component_function_visible_condition': { 'custom3': '1' } }$/;"	v
g:lightline	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	.vim_runtime/vimrcs/plugins_config.vim	/^let g:lightline = {$/;"	v
g:lightline#colorscheme#16color#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#16color#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#16color#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#PaperColor#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palette$/;"	v
g:lightline#colorscheme#PaperColor#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#palette$/;"	v
g:lightline#colorscheme#PaperColor#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palette$/;"	v
g:lightline#colorscheme#PaperColor#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#palette$/;"	v
g:lightline#colorscheme#PaperColor#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palette$/;"	v
g:lightline#colorscheme#PaperColor#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#palette$/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#apprentice#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let g:lightline#colorscheme#apprentice#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#apprentice#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let g:lightline#colorscheme#apprentice#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#apprentice#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let g:lightline#colorscheme#apprentice#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#ayu_dark#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let g:lightline#colorscheme#ayu_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_dark#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let g:lightline#colorscheme#ayu_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_dark#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let g:lightline#colorscheme#ayu_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_light#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let g:lightline#colorscheme#ayu_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_light#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let g:lightline#colorscheme#ayu_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_light#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let g:lightline#colorscheme#ayu_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_mirage#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let g:lightline#colorscheme#ayu_mirage#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_mirage#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let g:lightline#colorscheme#ayu_mirage#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_mirage#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let g:lightline#colorscheme#ayu_mirage#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#default#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#default#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#default#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#deus#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#deus#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#deus#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#gruvbox#palette	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let g:lightline#colorscheme#gruvbox#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#jellybeans#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#jellybeans#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#jellybeans#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#landscape#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#landscape#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#materia#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#materia#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#materia#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#powerlineish#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let g:lightline#colorscheme#powerlineish#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#powerlineish#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let g:lightline#colorscheme#powerlineish#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#powerlineish#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let g:lightline#colorscheme#powerlineish#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#selenized_black#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let g:lightline#colorscheme#selenized_black#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_black#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let g:lightline#colorscheme#selenized_black#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_black#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let g:lightline#colorscheme#selenized_black#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_dark#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let g:lightline#colorscheme#selenized_dark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_dark#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let g:lightline#colorscheme#selenized_dark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_dark#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let g:lightline#colorscheme#selenized_dark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_light#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let g:lightline#colorscheme#selenized_light#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_light#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let g:lightline#colorscheme#selenized_light#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_light#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let g:lightline#colorscheme#selenized_light#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_white#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let g:lightline#colorscheme#selenized_white#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_white#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let g:lightline#colorscheme#selenized_white#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_white#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let g:lightline#colorscheme#selenized_white#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#simpleblack#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let g:lightline#colorscheme#simpleblack#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#simpleblack#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let g:lightline#colorscheme#simpleblack#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#simpleblack#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let g:lightline#colorscheme#simpleblack#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_EditorConfig	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^let g:loaded_EditorConfig = 1$/;"	v
g:loaded_abolish	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let g:loaded_abolish = 1$/;"	v
g:loaded_ack	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^let g:loaded_ack = 1$/;"	v
g:loaded_ale	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:loaded_ale = 1$/;"	v
g:loaded_ale_dont_use_this_in_other_plugins_please	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^let g:loaded_ale_dont_use_this_in_other_plugins_please = 1$/;"	v
g:loaded_commentary	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_ctrlp	.vim_runtime/sources_non_forked/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_fugitive	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gist_vim	.vim_runtime/sources_non_forked/gist-vim/plugin/gist.vim	/^let g:loaded_gist_vim = 1$/;"	v
g:loaded_gist_vim	.vim_runtime/sources_non_forked/vim-gist/plugin/gist.vim	/^let g:loaded_gist_vim = 1$/;"	v
g:loaded_gitgutter	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_indent_guides	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^let g:loaded_indent_guides = 1$/;"	v
g:loaded_lightline	.vim/bundle/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_lightline	.vim_runtime/my_plugins/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_lightline	.vim_runtime/sources_non_forked/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_nerdtree_autoload	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_pathogen	.vim_runtime/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_repeat	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_repeat	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_rust_vim	.vim_runtime/sources_non_forked/rust.vim/plugin/rust.vim	/^let g:loaded_rust_vim = 1$/;"	v
g:loaded_rust_vim_plugin_cargo	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^let g:loaded_rust_vim_plugin_cargo = 1$/;"	v
g:loaded_surround	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_rust_cargo_checker	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/cargo.vim	/^let g:loaded_syntastic_rust_cargo_checker = 1$/;"	v
g:loaded_syntastic_rust_rustc_checker	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/rustc.vim	/^let g:loaded_syntastic_rust_rustc_checker = 1$/;"	v
g:loaded_tlib	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^let g:loaded_tlib = 117$/;"	v
g:loaded_togglebg	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:loaded_zenroom2_plugin	.vim_runtime/sources_non_forked/vim-zenroom2/plugin/zenroom2.vim	/^let g:loaded_zenroom2_plugin = 1$/;"	v
g:mako_detect_lang_from_ext	.vim_runtime/sources_non_forked/vim-bundle-mako/ftdetect/mako.vim	/^  let g:mako_detect_lang_from_ext = 1$/;"	v
g:multi_cursor_next_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_next_key            = '<C-s>'$/;"	v
g:multi_cursor_normal_maps	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_normal_maps =$/;"	v
g:multi_cursor_prev_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_prev_key            = '<C-p>'$/;"	v
g:multi_cursor_quit_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_quit_key            = '<Esc>'$/;"	v
g:multi_cursor_select_all_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_select_all_key      = 'g<A-s>'$/;"	v
g:multi_cursor_select_all_word_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_select_all_word_key = '<A-s>'$/;"	v
g:multi_cursor_skip_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_skip_key            = '<C-x>'$/;"	v
g:multi_cursor_start_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_start_key           = 'g<C-s>'$/;"	v
g:multi_cursor_start_word_key	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^    let g:multi_cursor_start_word_key = g:multi_cursor_next_key$/;"	v
g:multi_cursor_start_word_key	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_start_word_key      = '<C-s>'$/;"	v
g:multi_cursor_use_default_mapping	.vim_runtime/vimrcs/plugins_config.vim	/^let g:multi_cursor_use_default_mapping=0$/;"	v
g:multi_cursor_visual_maps	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_visual_maps =$/;"	v
g:niji_dark_colours	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	.vim/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	.vim/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#namespaces#CacheResolve	.vim/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheUsing	.vim/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheUsing = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	.vim/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	.vim/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope .= "&& (!has_key(v:val, 'enum') || (has_key(v:val, 'enum') && v:val.enum =~ '^\\\\w\\\\+$')))"$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	.vim/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope = "(!has_key(v:val, 'class') && !has_key(v:val, 'struct') && !has_key(v:val, 'union') && !has_key(v:val, 'namespace')"$/;"	v
g:peepopen_loaded	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^let g:peepopen_loaded = 1$/;"	v
g:peepopen_quit	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^  let g:peepopen_quit = 0$/;"	v
g:pug_self_closing_tags	.vim_runtime/sources_non_forked/vim-pug/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:python_pep8_indent_hang_closing	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_multiline_string	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:qf_disable_statusline	.vim/bundle/lightline.vim/plugin/lightline.vim	/^let g:qf_disable_statusline = 1$/;"	v
g:qf_disable_statusline	.vim_runtime/my_plugins/lightline.vim/plugin/lightline.vim	/^let g:qf_disable_statusline = 1$/;"	v
g:qf_disable_statusline	.vim_runtime/sources_non_forked/lightline.vim/plugin/lightline.vim	/^let g:qf_disable_statusline = 1$/;"	v
g:rainbow_conf	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rbpt_colorpairs	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:re	.vim/plugin/code_complete.vim	/^    let g:re = '>`'    "region stop$/;"	v
g:repeat_reg	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_reg	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:repeat_tick	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:rs	.vim/plugin/code_complete.vim	/^    let g:rs = '`<'    "region start$/;"	v
g:ruby_default_path	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'do'$/;"	v
g:ruby_indent_hanging_elements	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_hanging_elements = 1$/;"	v
g:ruby_version_paths	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^    let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^    let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_emit_files	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^    let g:rustfmt_emit_files = s:rustfmt_version >= "0.8.2"$/;"	v
g:rustfmt_fail_silently	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^    let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_file_lines	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^    let g:rustfmt_file_lines = s:rustfmt_help =~# "--file-lines JSON"$/;"	v
g:rustfmt_options	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^    let g:rustfmt_options = ""$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^  let g:snipMate = {}$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate = {}$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.cpp =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.cu =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.eruby =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.html =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.less =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.mxml =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.objc =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.php =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.scss =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.ur =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.xhtml =$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate.scope_aliases = get(g:snipMate, 'scope_aliases', {})$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate['get_scopes'] = get(g:snipMate, 'get_scopes', funcref#Function('return split(&ft,"\\\\.")+[&syntax, "_"]'))$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate['get_snippets'] = get(g:snipMate, 'get_snippets', funcref#Function("snipMate#GetSnippets"))$/;"	v
g:snipMate	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate['no_match_completion_feedkeys_chars'] =$/;"	v
g:snipMate	.vim_runtime/vimrcs/plugins_config.vim	/^let g:snipMate = { 'snippet_version' : 1 }$/;"	v
g:snipMateSources	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^  let g:snipMateSources = {}$/;"	v
g:snipMateSources	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^  let g:snipMateSources['default'] = funcref#Function('snipMate#DefaultPool')$/;"	v
g:snips_author	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^	let g:snips_author = 'Me'$/;"	v
g:snips_author	.vim_runtime/sources_non_forked/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	.vim_runtime/sources_non_forked/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	.vim_runtime/sources_non_forked/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:syntastic_extra_filetypes	.vim_runtime/sources_non_forked/rust.vim/plugin/rust.vim	/^    let g:syntastic_extra_filetypes = ['rust']$/;"	v
g:syntastic_rust_cargo_fname	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/cargo.vim	/^let g:syntastic_rust_cargo_fname = ""$/;"	v
g:syntastic_rust_checkers	.vim_runtime/sources_non_forked/rust.vim/plugin/rust.vim	/^    let g:syntastic_rust_checkers = ['cargo']$/;"	v
g:tabular_default_format	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tagbar_type_rust	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust = {$/;"	v
g:tagbar_type_rust	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/rust.ctags'$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template = {}$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['_'] = {}$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['_']['xt'] = "\\<c-r>=strftime(\\"%Y-%m-%d %H:%M:%S\\")\\<cr>"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c'] = {}$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['cc'] = "\/*  *\/\\<left>\\<left>\\<left>"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['cd'] = "\/**<  *\/\\<left>\\<left>\\<left>"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['class'] = "class ".g:rs."...".g:re." {\\<cr>".g:rs."...".g:re."\\<cr>};"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['de'] = "#define "$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['f0']=g:rs."...".g:re."() {\\<cr>".g:rs."...".g:re."\\<cr>}"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['f1']=g:rs."...".g:re."(".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>}"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['f2']=g:rs."...".g:re."(".g:rs."...".g:re.", ".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>}"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['f3']=g:rs."...".g:re."(".g:rs."...".g:re.", ".g:rs."...".g:re.", ".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>}"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['ff'] = "#ifndef \\<c-r>=GetFileName()\\<cr>\\<CR>#define \\<c-r>=GetFileName()\\<cr>".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['for'] = "for(".g:rs."...".g:re." ; ".g:rs."...".g:re." ; ".g:rs."...".g:re.") {\\<cr>".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['if'] = "if(".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>}"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['ife'] = "if(".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>} else {\\<cr>".g:rs."...".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['ife0'] = "if (".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>} else {\\<cr>".g:rs."...".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['ife1'] = "if (".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>} ".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['ife2'] = "if (".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>} ".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['ife3'] = "if (".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>} ".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['in'] = "#include \\"\\"\\<left>"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['is'] = "#include <>\\<left>"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['main'] = "int main(int argc, char \\*argv\\[\\]) {\\<cr>".g:rs."...".g:re."\\<cr>}"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['switch'] = "switch (".g:rs."...".g:re.") {\\<cr>case ".g:rs."...".g:re." :\\<cr>break;\\<cr>case ".$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['c']['while'] = "while(".g:rs."...".g:re.") {\\<cr>".g:rs."...".g:re."\\<cr>}"$/;"	v
g:template	.vim/plugin/code_complete.vim	/^let g:template['cpp'] = g:template['c']$/;"	v
g:terminal_color_0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_0 = s:bg0[0]$/;"	v
g:terminal_color_1	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_1 = s:gb.neutral_red[0]$/;"	v
g:terminal_color_10	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_10 = s:green[0]$/;"	v
g:terminal_color_11	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_11 = s:yellow[0]$/;"	v
g:terminal_color_12	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_12 = s:blue[0]$/;"	v
g:terminal_color_13	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_13 = s:purple[0]$/;"	v
g:terminal_color_14	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_14 = s:aqua[0]$/;"	v
g:terminal_color_15	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_15 = s:fg1[0]$/;"	v
g:terminal_color_2	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_2 = s:gb.neutral_green[0]$/;"	v
g:terminal_color_3	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_3 = s:gb.neutral_yellow[0]$/;"	v
g:terminal_color_4	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_4 = s:gb.neutral_blue[0]$/;"	v
g:terminal_color_5	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_5 = s:gb.neutral_purple[0]$/;"	v
g:terminal_color_6	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_6 = s:gb.neutral_aqua[0]$/;"	v
g:terminal_color_7	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_7 = s:fg4[0]$/;"	v
g:terminal_color_8	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_8 = s:gray[0]$/;"	v
g:terminal_color_9	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_9 = s:red[0]$/;"	v
g:testname	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:tlib#cmd#last_output	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^let g:tlib#cmd#last_output = []$/;"	v
g:tlib#date#date_format	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^let g:tlib#date#date_format = '%Y-%m-%d'$/;"	v
g:tlib#date#date_rx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^let g:tlib#date#date_rx = '\\<\\(\\d\\{4}\\)-\\(\\d\\d\\)-\\(\\d\\d\\)\\>'$/;"	v
g:tlib#date#dayshift	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^let g:tlib#date#dayshift = 60 * 60 * 24$/;"	v
g:tlib#file#absolute_filename_rx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^    let g:tlib#file#absolute_filename_rx = '^\\~\\?[\\\/]'   "{{{2$/;"	v
g:tlib#file#drop	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^    let g:tlib#file#drop = has('gui')   "{{{2$/;"	v
g:tlib#file#edit_cmds	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^    let g:tlib#file#edit_cmds = g:tlib#file#use_tabs ? {'buffer': 'tab split | buffer', 'edit': 'tabedit'} : {}  "{{{2$/;"	v
g:tlib#file#use_tabs	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^    let g:tlib#file#use_tabs = 0   "{{{2$/;"	v
g:tlib#hash#use_adler32	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^    let g:tlib#hash#use_adler32 = ''   "{{{2$/;"	v
g:tlib#hash#use_crc32	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^    let g:tlib#hash#use_crc32 = ''   "{{{2$/;"	v
g:tlib#input#keyagents_InputList_m	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^    let g:tlib#input#keyagents_InputList_m = extend(g:tlib#input#keyagents_InputList_m, g:tlib_extend_keyagents_InputList_m)$/;"	v
g:tlib#input#keyagents_InputList_s	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^    let g:tlib#input#keyagents_InputList_s = extend(g:tlib#input#keyagents_InputList_s, g:tlib_extend_keyagents_InputList_s)$/;"	v
g:tlib#sys#check_cygpath	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#check_cygpath = g:tlib#sys#windows && tlib#sys#IsExecutable('cygpath', 1)   "{{{2$/;"	v
g:tlib#sys#cygwin_expr	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#cygwin_expr = '"bash -c ''". escape(%s, "''\\\\") ."''"'   "{{{2$/;"	v
g:tlib#sys#cygwin_path_rx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#cygwin_path_rx = '\/cygwin\/'   "{{{2$/;"	v
g:tlib#sys#null	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#null = g:tlib#sys#windows ? 'NUL' : (filereadable('\/dev\/null') ? '\/dev\/null' : '')    "{{{2$/;"	v
g:tlib#sys#special_protocols	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#special_protocols = ['https\\?', 'nntp', 'mailto']   "{{{2$/;"	v
g:tlib#sys#special_suffixes	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#special_suffixes = ['xlsx\\?', 'docx\\?', 'pptx\\?', 'accdb', 'mdb', 'sqlite', 'pdf', 'jpg', 'png', 'gif']    "{{{2$/;"	v
g:tlib#sys#system_browser	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent ! RunDll32.EXE URL.DLL,FileProtocolHandler' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !'. g:netrw_browsex_viewer shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !gnome-open' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !kfmclient exec' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !open' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !xdg-open' shellescape('%s') '&'"$/;"	v
g:tlib#sys#system_browser	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = ''$/;"	v
g:tlib#sys#system_rx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#system_rx = printf('\\V\\%(\\^\\%(%s\\):\\|.\\%(%s\\)\\)', join(g:tlib#sys#special_protocols, '\\|'), join(g:tlib#sys#special_suffixes, '\\|'))   "{{{2$/;"	v
g:tlib#sys#windows	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^    let g:tlib#sys#windows = &shell !~ 'sh' && (has('win16') || has('win32') || has('win64'))   "{{{2$/;"	v
g:tlib#trace#backtrace	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^    let g:tlib#trace#backtrace = 2   "{{{2$/;"	v
g:tlib#trace#printf	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^    let g:tlib#trace#printf = 'echom %s'   "{{{2$/;"	v
g:tlib#vcs#executables	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^            let g:tlib#vcs#executables[s:cmd] = executable(s:cmd1) ? s:cmd1 : ''$/;"	v
g:tlib#vim#simalt_maximize	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_maximize = 'x'   "{{{2$/;"	v
g:tlib#vim#simalt_restore	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_restore = 'r'   "{{{2$/;"	v
g:tlib#vim#use_vimtweak	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_vimtweak = 0   "{{{2$/;"	v
g:tlib#vim#use_wmctrl	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_wmctrl = executable('wmctrl')  "{{{2$/;"	v
g:typescript_compiler_binary	.vim_runtime/sources_non_forked/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_binary = "tsc"$/;"	v
g:typescript_compiler_options	.vim_runtime/sources_non_forked/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_options = ""$/;"	v
g:user_defined_snippets	.vim/plugin/code_complete.vim	/^    let g:user_defined_snippets = "$VIMRUNTIME\/plugin\/my_snippets.vim"$/;"	v
g:user_zen_mode	.vim_runtime/vimrcs/plugins_config.vim	/^let g:user_zen_mode='a'$/;"	v
g:vimshell_escape_colors	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vjde_cs_cfu	.vim/src/vjde_cs_completion.vim	/^let g:vjde_cs_cfu={}$/;"	v
g:vjde_cs_cmd	.vim/src/vjde_cs_completion.vim	/^	let g:vjde_cs_cmd='mono.exe '.g:vjde_install_path.'\/vjde\/CSParser.exe'$/;"	v
g:vjde_cs_find	.vim/src/vjde_cs_completion.vim	/^	let g:vjde_cs_find=g:vjde_install_path.'\\vjde\\TypeFinder.exe'$/;"	v
g:vjde_cs_libs	.vim/src/vjde_cs_completion.vim	/^	let g:vjde_cs_libs=''$/;"	v
g:vjde_cs_using	.vim/src/vjde_cs_completion.vim	/^	let g:vjde_cs_using=g:vjde_install_path.'\\vjde\\UsingFinder.exe'$/;"	v
g:xmldata_jsf_c	.vim/autoload/xml/jsf_c.vim	/^let g:xmldata_jsf_c= {$/;"	v
g:xmldata_jsf_h	.vim/autoload/xml/jsf_h.vim	/^let g:xmldata_jsf_h= {$/;"	v
g:xmldata_stl_c	.vim/autoload/xml/stl_c.vim	/^let g:xmldata_stl_c= {$/;"	v
g:xmldata_stl_fmt	.vim/autoload/xml/stl_fmt.vim	/^let g:xmldata_stl_fmt= {$/;"	v
g:xmldata_stl_sql	.vim/autoload/xml/stl_sql.vim	/^let g:xmldata_stl_sql= {$/;"	v
g:xmldata_stl_x	.vim/autoload/xml/stl_x.vim	/^let g:xmldata_stl_x= {$/;"	v
g:xmldata_tc	.vim/autoload/xml/tc.vim	/^let g:xmldata_tc= {$/;"	v
g:xmldata_tx	.vim/autoload/xml/tx.vim	/^let g:xmldata_tx= {$/;"	v
g:yankstack_size	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^let g:yankstack_size = 30$/;"	v
g:yankstack_yank_keys	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^  let g:yankstack_yank_keys = ['c', 'C', 'd', 'D', 's', 'S', 'x', 'X', 'y', 'Y']$/;"	v
g:yankstack_yank_keys	.vim_runtime/vimrcs/plugins_config.vim	/^let g:yankstack_yank_keys = ['y', 'd']$/;"	v
g_log_define	rainbow/log.cpp	/^rainbow::ConfigVar<std::set<LogDefine>>::ptr g_log_define = $/;"	m	namespace:rainbow	file:
g_logger	rainbow/config.cpp	/^static rainbow::Logger::ptr g_logger = RAINBOW_LOG_NAME("system");$/;"	m	namespace:rainbow	file:
g_logger	rainbow/thread.cpp	/^static rainbow::Logger::ptr g_logger = RAINBOW_LOG_NAME("system");$/;"	m	namespace:rainbow	file:
g_logger	tests/test_thread.cpp	/^rainbow::Logger::ptr g_logger = RAINBOW_LOG_ROOT();$/;"	v
g_person_map	tests/test_config.cpp	/^rainbow::ConfigVar<std::map<std::string, Person>>::ptr g_person_map = $/;"	v
g_person_map_vec	tests/test_config.cpp	/^rainbow::ConfigVar<std::map<std::string, std::vector<Person>>>::ptr g_person_map_vec = $/;"	v
gather_candidates	.vim_runtime/sources_non_forked/ale/rplugin/python3/deoplete/sources/ale.py	/^    def gather_candidates(self, context):$/;"	m	class:Source	access:public
gc	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gcc	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
genModule	.vim/src/CSParser.cs	/^        private static Boolean genModule(Module m) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Module m)
genType	.vim/src/CSParser.cs	/^        private static void genType(Type t ) {$/;"	m	class:Wangfc.CSParser	file:	access:private	signature:(Type t )
getAsList	.vim/src/vjde/completion/MultiValueMap.java	/^    public List getAsList(Object key) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key)
getClass	.vim/src/vjde/completion/Completion.java	/^  private static Class getClass(DynamicClassLoader dcl,String path,String name,String[] imports) {$/;"	m	class:Completion	file:	access:private	signature:(DynamicClassLoader dcl,String path,String name,String[] imports)
getClass4Name	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public String[] getClass4Name(String name) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String name)
getClassDoc	.vim/src/vjde/completion/SourceDocReader.java	/^	public String getClassDoc(String className) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className)
getClassInfo	.vim/src/vjde/completion/ClassInfo.java	/^  public static void getClassInfo(String className,$/;"	m	class:ClassInfo	access:public	signature:(String className, String[]imports,String path)
getClassInfo	.vim/src/vjde/completion/ClassInfo.java	/^  public static void getClassInfo(String className,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className,String path)
getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className) {$/;"	m	class:Completion	access:public	signature:(String path,String className)
getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className, int level) {$/;"	m	class:Completion	access:public	signature:(String path,String className, int level)
getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports)
getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String className,$/;"	m	class:Completion	access:public	signature:(String path,String className, String[] imports,int level)
getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports)
getClassInfo	.vim/src/vjde/completion/Completion.java	/^  public static void getClassInfo(String path,String[] names,String[] imports,int level) {$/;"	m	class:Completion	access:public	signature:(String path,String[] names,String[] imports,int level)
getClassNames	.vim/src/vjde/completion/ClassPathEntry.java	/^    List getClassNames(String unqualifiedName)$/;"	m	class:ClassPathEntry	access:default	signature:(String unqualifiedName)
getClassNames	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public String[] getClassNames(String pkg_path) {$/;"	m	class:DynamicClassLoader	access:public	signature:(String pkg_path)
getContent	rainbow/log.h	/^    std::string getContent() const { return m_ss.str(); }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getDescription	rainbow/config.h	/^    const std::string& getDescription() const { return m_description; }$/;"	f	class:rainbow::ConfigVarBase	access:public	signature:() const
getElapse	rainbow/log.h	/^    uint32_t getElapse() const { return m_elapse; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getEvent	rainbow/log.h	/^    LogEvent::ptr getEvent() const { return m_event; }$/;"	f	class:rainbow::LogEventWrap	access:public	signature:() const
getFiberId	rainbow/log.h	/^    uint32_t getFiberId() const { return m_fiberId; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getFileName	rainbow/log.h	/^    const char* getFileName() const { return m_file; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getFormatter	rainbow/log.cpp	/^LogFormatter::ptr Logger::getFormatter() const {$/;"	f	class:rainbow::Logger	signature:() const
getFormatter	rainbow/log.h	/^    LogFormatter::ptr getFormatter() const { return m_formatter; }$/;"	f	class:rainbow::LogAppender	access:public	signature:() const
getFormatter	rainbow/log.h	/^    LogFormatter::ptr getFormatter() const;$/;"	p	class:rainbow::Logger	access:public	signature:() const
getGruvColor	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^function! s:getGruvColor(group)$/;"	f
getId	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	f	signature:() const
getId	rainbow/thread.h	/^    pid_t getId() const { return m_id; }$/;"	f	class:rainbow::Thread	access:public	signature:() const
getInheritedInnerClasses	.vim/src/vjde/completion/ClassInfo.java	/^ private static void getInheritedInnerClasses(Class c, StringBuffer sb)  {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
getInnerClasses	.vim/src/vjde/completion/ClassInfo.java	/^  private static void getInnerClasses(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
getLevel	rainbow/log.h	/^    LogLevel::Level getLevel() const { return m_level; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getLevel	rainbow/log.h	/^    LogLevel::Level getLevel() const { return m_level; }$/;"	f	class:rainbow::Logger	access:public	signature:() const
getLevel	rainbow/log.h	/^    LogLevel::Level getLevel() { return m_level; }$/;"	f	class:rainbow::LogAppender	access:public	signature:()
getLine	rainbow/log.h	/^    int32_t getLine() const { return m_line; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getListener	rainbow/config.h	/^    on_change_cb getListener(uint64_t key) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(uint64_t key)
getLogger	rainbow/log.cpp	/^Logger::ptr LoggerManager::getLogger(const std::string& name) {$/;"	f	class:rainbow::LoggerManager	signature:(const std::string& name)
getLogger	rainbow/log.h	/^    Logger::ptr getLogger(const std::string& name);$/;"	p	class:rainbow::LoggerManager	access:public	signature:(const std::string& name)
getLogger	rainbow/log.h	/^    std::shared_ptr<Logger> getLogger() const {  return m_logger; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getMemberDoc	.vim/src/vjde/completion/SourceDocReader.java	/^	public String getMemberDoc(String className,String member) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member)
getMemberInfo	.vim/src/vjde/completion/ClassInfo.java	/^  private static void getMemberInfo(Class c, StringBuffer sb) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class c, StringBuffer sb)
getMemberTipDoc	.vim/src/vjde/completion/SourceDocReader.java	/^    public String getMemberTipDoc(String className,String member,int paramPos) throws Exception$/;"	m	class:SourceDocReader	access:public	signature:(String className,String member,int paramPos)
getName	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	f	signature:()
getName	rainbow/config.h	/^    const std::string& getName() const { return m_name; }$/;"	f	class:rainbow::ConfigVarBase	access:public	signature:() const
getName	rainbow/log.h	/^    const std::string getName() const { return this->m_name; }$/;"	f	class:rainbow::Logger	access:public	signature:() const
getName	rainbow/thread.h	/^    const std::string& getName() const { return m_name; }$/;"	f	class:rainbow::Thread	access:public	signature:() const
getPackageNames	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public String[] getPackageNames() {$/;"	m	class:DynamicClassLoader	access:public	signature:()
getPattern	rainbow/log.h	/^    const std::string getPattern() const { return m_pattern; }$/;"	f	class:rainbow::LogFormatter	access:public	signature:() const
getRoot	rainbow/log.h	/^    Logger::ptr getRoot() const { return m_root; }$/;"	f	class:rainbow::LoggerManager	access:public	signature:() const
getSS	rainbow/log.cpp	/^std::stringstream& LogEventWrap::getSS() {$/;"	f	class:rainbow::LogEventWrap	signature:()
getSS	rainbow/log.h	/^    std::stringstream& getSS() { return m_ss; }$/;"	f	class:rainbow::LogEvent	access:public	signature:()
getSS	rainbow/log.h	/^    std::stringstream& getSS();$/;"	p	class:rainbow::LogEventWrap	access:public	signature:()
getString	rainbow/log.cpp	/^    std::string getString() const { return m_string; }$/;"	f	class:rainbow::StringFormatItem	access:public	signature:() const
getTags	.vim/src/vjde/completion/Document.java	/^	private String getTags(String old) {$/;"	m	class:Document	file:	access:private	signature:(String old)
getThreadId	rainbow/log.h	/^    uint32_t getThreadId() const { return m_threadId; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getTime	rainbow/log.h	/^    uint32_t getTime() const { return m_time; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
getTypeName	rainbow/config.h	/^    virtual std::string getTypeName() const = 0;$/;"	p	class:rainbow::ConfigVarBase	access:public	signature:() const
getValue	rainbow/config.h	/^    const T getValue() const { return m_val; }$/;"	f	class:rainbow::ConfigVar	access:public	signature:() const
get_background_colors	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
get_browser_command	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:get_browser_command() abort$/;"	f
get_browser_command	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:get_browser_command() abort$/;"	f
get_candidate_dict	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:get_candidate_dict(text_object)$/;"	f
get_candidate_list	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:get_candidate_list()$/;"	f
get_char	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_char(...)$/;"	f
get_color	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:get_color(group, attr)$/;"	f
get_comment_format	.vim_runtime/sources_non_forked/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f	access:public
get_complete_position	.vim_runtime/sources_non_forked/ale/rplugin/python3/deoplete/sources/ale.py	/^    def get_complete_position(self, context):$/;"	m	class:Source	access:public
get_configuration	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:get_configuration()$/;"	f
get_current_filename	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:get_current_filename(no) abort$/;"	f
get_current_filename	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:get_current_filename(no) abort$/;"	f
get_current_origin_url	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_origin_url(bundle) abort$/;"	f
get_current_sha	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_sha(bundle)$/;"	f
get_desktop_rectangle	.vim/src/previewwindow.cpp	/^	void get_desktop_rectangle(MRectangle &rect) $/;"	f	signature:(MRectangle &rect)
get_desktop_rectangle	.vim/src/previewwindow.cpp	/^	void get_desktop_rectangle(MRectangle &rect) ;$/;"	p	file:	signature:(MRectangle &rect)
get_file_content	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/benchmark_spec.rb	/^def get_file_content()$/;"	f
get_file_content	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def get_file_content()$/;"	f
get_filenames	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:get_filenames(path, config_filename)$/;"	f
get_foreground_colors	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_colors(group) abort$/;"	f
get_foreground_fallback_colors	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_fallback_colors(type)$/;"	f
get_hl	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_hl(group, what, mode) abort$/;"	f
get_line_trimmed	.vim_runtime/sources_non_forked/rust.vim/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
get_option	.vim_runtime/sources_non_forked/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f	access:public
get_project_patterns	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:get_project_patterns(root_dir) abort$/;"	f
get_regex	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/statement_modifiers_spec.rb	/^      def get_regex$/;"	f
get_select_tag	.vim/src/previewwindow.cpp	/^	string get_select_tag()$/;"	f	signature:()
get_select_val	.vim/src/previewwindow.cpp	/^	void get_select_val()$/;"	f	signature:()
get_select_val	.vim/src/previewwindow.cpp	/^	void get_select_val();$/;"	p	file:	signature:()
get_short_name	.vim/src/previewwindow.cpp	/^	string get_short_name(string name) $/;"	f	signature:(string name)
get_short_tag	.vim/src/previewwindow.cpp	/^	string get_short_tag(string tag)$/;"	f	signature:(string tag)
get_text	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_text(region)$/;"	f
get_time_in_ms	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_time_in_ms()$/;"	f
get_vim_caret_pos	.vim/src/previewwindow.cpp	/^	void get_vim_caret_pos(int &x1,int &y1,$/;"	f	signature:(int &x1,int &y1, const int line,const int col, const int width1 , const int height1, const int width2 , const int height2)
get_vim_caret_pos	.vim/src/previewwindow.cpp	/^	void get_vim_caret_pos(int &x1,int &y1,$/;"	p	file:	signature:(int &x1,int &y1, const int line,const int col, const int width1 , const int height1, const int width2 , const int height2)
get_vim_text_area_rectangle	.vim/src/previewwindow.cpp	/^	void get_vim_text_area_rectangle(MRectangle &rect) $/;"	f	signature:(MRectangle &rect)
get_vim_text_area_rectangle	.vim/src/previewwindow.cpp	/^	void get_vim_text_area_rectangle(MRectangle &rect)$/;"	f	signature:(MRectangle &rect)
get_vim_text_area_rectangle	.vim/src/previewwindow.cpp	/^	void get_vim_text_area_rectangle(MRectangle &rect);$/;"	p	file:	signature:(MRectangle &rect)
get_visual_region	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_visual_region(pos)$/;"	f
get_visual_selection	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:get_visual_selection()$/;"	f
get_window_rect	.vim/src/previewwindow.cpp	/^	void get_window_rect(GdkWindow* window , MRectangle &rect)$/;"	f	signature:(GdkWindow* window , MRectangle &rect)
get_yankstack_head	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:get_yankstack_head()$/;"	f
getbookmarks	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getchar	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getenv	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
gethistdata	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getline	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:getline()$/;"	f
getnewmix	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
getundo	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
gf	.vim_runtime/sources_non_forked/open_file_under_cursor.vim/plugin/open_file_under_cursor.vim	/^nnoremap gf :call GotoFile("")<CR>$/;"	m
gg	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^  normal gg$/;"	m
gist#Gist	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^  function! gist#Gist(...) abort$/;"	f
gist#Gist	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! gist#Gist(count, bang, line1, line2, ...) abort$/;"	f
gist#Gist	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^  function! gist#Gist(...) abort$/;"	f
gist#Gist	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! gist#Gist(count, bang, line1, line2, ...) abort$/;"	f
gist#list	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! gist#list(user, ...) abort$/;"	f
gist#list	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! gist#list(user, ...) abort$/;"	f
gist#list_recursively	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! gist#list_recursively(user, ...) abort$/;"	f
gist#list_recursively	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! gist#list_recursively(user, ...) abort$/;"	f
gists	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^    let gists = gists + webapi#json#decode(res.content)$/;"	v
gists	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^    let gists = gists + webapi#json#decode(res.content)$/;"	v
git_diff	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff(...)$/;"	f
git_diff_staged	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged(...)$/;"	f
git_supports_command_line_config_override	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
git_version	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
gitgutter	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#buffer_disable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_disable() abort$/;"	f
gitgutter#buffer_enable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_enable() abort$/;"	f
gitgutter#buffer_toggle	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_toggle() abort$/;"	f
gitgutter#debug#debug	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff, ...)$/;"	f
gitgutter#diff#parse_diff	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort$/;"	f
gitgutter#diff_highlight#common_prefix	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_prefix(a, b)$/;"	f
gitgutter#diff_highlight#common_suffix	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_suffix(a, b, start)$/;"	f
gitgutter#diff_highlight#lcs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#lcs(s1, s2)$/;"	f
gitgutter#diff_highlight#process	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! gitgutter#diff_highlight#process(hunk_body)$/;"	f
gitgutter#diff_highlight#split	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#split(str, delimiter)$/;"	f
gitgutter#disable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#fold#disable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#disable()$/;"	f
gitgutter#fold#enable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#enable()$/;"	f
gitgutter#fold#foldtext	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#foldtext()$/;"	f
gitgutter#fold#is_changed	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#is_changed()$/;"	f
gitgutter#fold#level	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#level(lnum)$/;"	f
gitgutter#fold#toggle	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#toggle()$/;"	f
gitgutter#highlight#define_highlights	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#highlight#linenr_disable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_disable() abort$/;"	f
gitgutter#highlight#linenr_enable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_enable() abort$/;"	f
gitgutter#highlight#linenr_toggle	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_toggle() abort$/;"	f
gitgutter#hunk#close_hunk_preview_window	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#close_hunk_preview_window()$/;"	f
gitgutter#hunk#cursor_in_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#in_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#in_hunk(lnum)$/;"	f
gitgutter#hunk#increment_lines_added	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#is_preview_window_open	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function gitgutter#hunk#is_preview_window_open()$/;"	f
gitgutter#hunk#next_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage(...) abort$/;"	f
gitgutter#hunk#summary	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#process_buffer	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#quickfix	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#quickfix()$/;"	f
gitgutter#setup_maps	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#setup_maps()$/;"	f
gitgutter#sign#clear_signs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#reset	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#get_diff_base	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#get_diff_base(bufnr)$/;"	f
gitgutter#utility#getbufvar	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#has_repo_path	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_repo_path(bufnr)$/;"	f
gitgutter#utility#is_active	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr, continuation) abort$/;"	f
gitgutter#utility#setbufvar	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
glbpath	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
glob#Glob	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/glob.vim	/^fun! glob#Glob(pattern, ...)$/;"	f
glob_linux#FileByGlobCurrentDir	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/glob_linux.vim	/^function! glob_linux#FileByGlobCurrentDir(glob, exclude_pattern, ...)$/;"	f
globdirs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
go	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
gotoFirstLogicalTag	.vim/src/readtags.c	/^static void gotoFirstLogicalTag (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
goto_original_window	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:goto_original_window()$/;"	f
goyo#execute	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! goyo#execute(bang, dim)$/;"	f
goyo_off	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:goyo_off()$/;"	f
goyo_on	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:goyo_on(dim)$/;"	f
grab_visual	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^function! s:grab_visual() abort$/;"	f
grep_command	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:grep_command(args,bang,flags,word)$/;"	f
grep_version	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
growFields	.vim/src/readtags.c	/^static tagResult growFields (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
growString	.vim/src/readtags.c	/^static int growString (vstring *s)$/;"	f	file:	signature:(vstring *s)
gruvbox#hls_hide	.vim_runtime/sources_non_forked/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_hide()$/;"	f
gruvbox#hls_show	.vim_runtime/sources_non_forked/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_show()$/;"	f
gruvbox#hls_toggle	.vim_runtime/sources_non_forked/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_toggle()$/;"	f
gruvbox#invert_signs_toggle	.vim_runtime/sources_non_forked/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#invert_signs_toggle()$/;"	f
gsub	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gv	.vim_runtime/vimrcs/extended.vim	/^vnoremap <silent> gv :call VisualSelection('gv', '')<CR>$/;"	m
handleAction	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAction(Action action,Class c)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c)
handleAction	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAction(Action action,Class c,String m)$/;"	m	class:Struts2Configure	access:public	signature:(Action action,Class c,String m)
handleAnnotations	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c)
handleAnnotations	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleAnnotations(Annotation[] anns,Class c,Method m) {$/;"	m	class:Struts2Configure	access:public	signature:(Annotation[] anns,Class c,Method m)
handleLeftClick	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
handleMiddleMouse	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
handleXml	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Configure	access:public	signature:(Document doc)
handleXml	.vim/src/vjde/completion/Struts2Simple.java	/^	public boolean handleXml(Document doc) {$/;"	m	class:Struts2Simple	access:public	signature:(Document doc)
handle_double_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:handle_double_hunk(modified_lines)$/;"	f
handle_special_key	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_special_key(key, mode)$/;"	f
handle_visual_IA_to_insert	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_insert()$/;"	f
handle_visual_IA_to_normal	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_normal()$/;"	f
handlerClass	.vim/src/vjde/completion/Struts2Configure.java	/^	public void handlerClass(String p, String name) {$/;"	m	class:Struts2Configure	access:public	signature:(String p, String name)
hang_closing	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def hang_closing$/;"	f
hasAtt	.vim/ftplugin/xml.vim	/^fun! s:hasAtt()$/;"	f
hasMember	.vim/src/vjde/completion/ClassInfo.java	/^  public static void hasMember(String className, String memberName,String path) {$/;"	m	class:ClassInfo	access:public	signature:(String className, String memberName,String path)
has_cjk	.vim_runtime/sources_non_forked/vim-snippets/pythonx/vimsnippets.py	/^def has_cjk(s):$/;"	f	access:public
has_doc	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
has_fresh_changes	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
has_gtk	.vim/src/previewwindow.cpp	/^	_DL_EXPORT int has_gtk(char *str) $/;"	f	signature:(char *str)
has_webapi	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
hdc	.vim/src/lex.yy.c	/^HDC hdc;$/;"	v
headntail	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
height	.vim/src/previewwindow.cpp	/^		int height;$/;"	m	struct:_Rectangle	file:	access:public
hello	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/symbols_spec.rb	/^      def hello$/;"	f
helptags	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
here	.vim_runtime/sources_non_forked/editorconfig-vim/tests/core/editorconfig.bat	/^set here=%~dp0$/;"	v
hi	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
hi	.vim/bundle/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
hi	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
hi	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
hi	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
hi	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
hide_linenr	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:hide_linenr()$/;"	f
hide_statusline	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:hide_statusline()$/;"	f
highlight	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight_cursor	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_cursor(pos)$/;"	f
highlight_line	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! s:highlight_line(bufnr, lnum, group) abort$/;"	f
highlight_name_for_change	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
highlight_range	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! s:highlight_range(bufnr, range, group) abort$/;"	f
highlight_region	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_region(region)$/;"	f
hs_highlight_boolean	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
hunk_op	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op, ...)$/;"	f
hwndText	.vim/src/lex.yy.c	/^HWND hwndText; \/\/ Vim  ‰»Î¥∞ø⁄$/;"	v
hwndText	.vim/src/tipswnd.c	/^HWND hwndText; \/\/ Vim  ‰»Î¥∞ø⁄$/;"	v
i	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> i <NOP>$/;"	m
i	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
iI	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>iI :<C-u>cal <Sid>HandleTextObjectMapping(1, 1, 0, [line("."), line("."), col("."), col(".")])<CR>$/;"	m
iI	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>iI :<C-u>cal <Sid>HandleTextObjectMapping(1, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv$/;"	m
iLineCount	.vim/src/lex.yy.c	/^int iLineCount;$/;"	v
iLineCount	.vim/src/tipswnd.c	/^int iLineCount;$/;"	v
iM	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iMaxHeight	.vim/src/lex.yy.c	/^int iMaxHeight;$/;"	v
iMaxHeight	.vim/src/tipswnd.c	/^int iMaxHeight;$/;"	v
iMaxWidth	.vim/src/lex.yy.c	/^int iMaxWidth;$/;"	v
iMaxWidth	.vim/src/tipswnd.c	/^int iMaxWidth;$/;"	v
iabbrev_map	.vim/bundle/supertab/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
iabbrev_map	.vim/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
idle_handler	.vim/src/previewwindow.cpp	/^	guint idle_handler = 0;$/;"	v
ifilter	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
ignorecase	.vim/src/readtags.c	/^	    short ignorecase;$/;"	m	struct:sTagFile::__anon2	file:	access:public
ii	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^onoremap <silent>ii :<C-u>cal <Sid>HandleTextObjectMapping(1, 0, 0, [line("."), line("."), col("."), col(".")])<CR>$/;"	m
ii	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^vnoremap <silent>ii :<C-u>cal <Sid>HandleTextObjectMapping(1, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv$/;"	m
im	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
in_hunk_preview_window	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:in_hunk_preview_window()$/;"	f
incdirs	Makefile	/^incdirs := rainbow$/;"	m
indent	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def indent$/;"	f
indent	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:indent(count) abort$/;"	f
indent_guides	.vim_runtime/sources_non_forked/vim-indent-guides/plugin/indent_guides.vim	/^augroup indent_guides$/;"	a
indent_guides#basic_highlight_colors	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#basic_highlight_colors()$/;"	f
indent_guides#calculate_guide_size	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#calculate_guide_size()$/;"	f
indent_guides#capture_highlight	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#capture_highlight(group_name)$/;"	f
indent_guides#clear_matches	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#clear_matches()$/;"	f
indent_guides#define_default_highlights	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#define_default_highlights()$/;"	f
indent_guides#disable	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#disable()$/;"	f
indent_guides#enable	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#enable()$/;"	f
indent_guides#exclude_filetype	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#exclude_filetype()$/;"	f
indent_guides#gui_highlight_colors	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#gui_highlight_colors()$/;"	f
indent_guides#highlight_colors	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#highlight_colors()$/;"	f
indent_guides#indent_highlight_pattern	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#indent_highlight_pattern(indent_pattern, column_start, indent_size)$/;"	f
indent_guides#init_matches	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#init_matches()$/;"	f
indent_guides#init_script_vars	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#init_script_vars()$/;"	f
indent_guides#lighten_or_darken_color	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#lighten_or_darken_color(color)$/;"	f
indent_guides#process_autocmds	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#process_autocmds()$/;"	f
indent_guides#toggle	.vim_runtime/sources_non_forked/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#toggle()$/;"	f
indent_like_block	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
indent_like_opening_paren	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
indent_like_previous_line	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
indexOfOnly	.vim/src/vjde/completion/SourceDocReader.java	/^	static boolean indexOfOnly(String whole,String test)$/;"	m	class:SourceDocReader	access:default	signature:(String whole,String test)
info	rainbow/log.cpp	/^void Logger::info(LogEvent::ptr event) { log(LogLevel::INFO, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
info	rainbow/log.h	/^    void info(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
info_from_filename	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:info_from_filename(file) abort$/;"	f
information	.vim/src/previewwindow.cpp	/^_DL_EXPORT int information(char *str)$/;"	f	signature:(char *str)
information_window	.vim/src/previewwindow.cpp	/^int information_window(int x, int y, int width,int height,char *str)$/;"	f	signature:(int x, int y, int width,int height,char *str)
init	.vim/bundle/Vundle.vim/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
init	rainbow/log.cpp	/^void LogFormatter::init() {$/;"	f	class:rainbow::LogFormatter	signature:()
init	rainbow/log.cpp	/^void LoggerManager::init() {$/;"	f	class:rainbow::LoggerManager	signature:()
init	rainbow/log.h	/^    void init();$/;"	p	class:rainbow::LogFormatter	access:public	signature:()
init	rainbow/log.h	/^    void init();$/;"	p	class:rainbow::LoggerManager	access:public	signature:()
initCustomOpenArgs	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
init_list_store	.vim/src/previewwindow.cpp	/^	void init_list_store()$/;"	f	signature:()
init_list_store	.vim/src/previewwindow.cpp	/^	void init_list_store();$/;"	p	file:	signature:()
init_pad	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:init_pad(command)$/;"	f
init_settings	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^function! s:init_settings(settings)$/;"	f
init_window	.vim/src/previewwindow.cpp	/^	void init_window(int x,int y,int width,int height)$/;"	f	signature:(int x,int y,int width,int height)
init_window	.vim/src/previewwindow.cpp	/^	void init_window(int x,int y,int width,int height);$/;"	p	file:	signature:(int x,int y,int width,int height)
initialize	.vim/src/readtags.c	/^static tagFile *initialize (const char *const filePath, tagFileInfo *const info)$/;"	f	file:	signature:(const char *const filePath, tagFileInfo *const info)
initialized	.vim/src/readtags.c	/^    short initialized;$/;"	m	struct:sTagFile	file:	access:public
innerClassInfo	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer innerClassInfo(Class ic) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class ic)
input	.vim/src/lex.yy.c	/^static int input YY_PROTO(( void ));$/;"	p	file:	signature:( void )
inputPrompt	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
input_label	.vim/src/previewwindow.cpp	/^	GtkWidget *input_label = NULL;$/;"	v
inputreplacement	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insert_snippet_text	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:insert_snippet_text(snippet, lnum, col, indent)$/;"	f
insertcache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
instanceForEntry	.vim/src/vjde/completion/ClassPathEntry.java	/^    static ClassPathEntry instanceForEntry(File resource)$/;"	m	class:ClassPathEntry	access:default	signature:(File resource)
interceptorRefs	.vim/src/vjde/completion/Struts2Configure.java	/^				public InterceptorRef[] interceptorRefs() {$/;"	m	class:ActionImpl	access:public	signature:()
intval	.vim/src/previewwindow.cpp	/^	guint intval = 1000; \/\/interval$/;"	v
isAccessible	.vim/src/vjde/completion/ClassInfo.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers, int level)
isAccessible	.vim/src/vjde/completion/Completion.java	/^  private static boolean isAccessible(int modifiers, int level) {$/;"	m	class:Completion	file:	access:private	signature:(int modifiers, int level)
isAncestorOf	.vim/src/vjde/completion/ClassInfo.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:ClassInfo	access:public	signature:(String ancestor, String child)
isAncestorOf	.vim/src/vjde/completion/Completion.java	/^  public static void isAncestorOf(String ancestor, String child) {$/;"	m	class:Completion	access:public	signature:(String ancestor, String child)
isError	rainbow/log.h	/^    bool isError() const {$/;"	f	class:rainbow::LogFormatter	access:public	signature:() const
isLoaded	.vim/src/vjde/completion/ClassPathEntry.java	/^    public boolean isLoaded() {$/;"	m	class:ClassPathEntry	access:public	signature:()
is_added	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
is_concealed	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^    function! s:is_concealed(line, col)$/;"	f
is_cursor_inside	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:is_cursor_inside(pos, region)$/;"	f
is_dedented_already	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:is_dedented_already(current, base)$/;"	f
is_define	.vim/src/readtags.c	/^static int is_define ( const tagEntry* entry,const char* const kind)$/;"	f	file:	signature:( const tagEntry* entry,const char* const kind)
is_file_buffer	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
is_member	.vim/src/readtags.c	/^static tagResult is_member(const tagEntry *entry,const char *const k,const char* const v)$/;"	f	file:	signature:(const tagEntry *entry,const char *const k,const char* const v)
is_mkdCode	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^function! s:is_mkdCode(lnum)$/;"	f
is_modified	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
is_modified_and_added	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
is_modified_and_removed	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
is_python_string	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
is_removed	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
is_string_comment	.vim_runtime/sources_non_forked/rust.vim/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
isabs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isabs(path)$/;"	f
isatty	.vim/src/lex.yy.c	/^extern int isatty YY_PROTO(( int ));$/;"	p	file:	signature:( int )
iscmdwin	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
iscontOne	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:iscontOne(i,num,cont)$/;"	f
ispathitem	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
isterminal	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isterminal(buf)$/;"	f
j	.vim_runtime/sources_non_forked/ack.vim/ftplugin/qf.vim	/^  nnoremap <buffer> j jzz$/;"	m
job_id	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_id(job)$/;"	f
join	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	p	signature:()
join	rainbow/thread.cpp	/^void Thread::join() {$/;"	f	class:rainbow::Thread	signature:()
join	rainbow/thread.h	/^    void join();$/;"	p	class:rainbow::Thread	access:public	signature:()
join_consecutive_strings	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:join_consecutive_strings(list) abort$/;"	f
jumpToChild	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
jumpToFirstChild	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
jumpToLastChild	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
jumpToNextSibling	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
jumpToParent	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
jumpToPrevSibling	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
jumpToRoot	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
jumpToSibling	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
key	.vim/src/readtags.h	/^	const char *key;$/;"	m	struct:__anon11	access:public
key	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^        let key = matchstr(s:filetype, "[^=]*")$/;"	v
key_release_count	.vim/src/previewwindow.cpp	/^	int key_release_count=0;$/;"	v
keyword_spacing	.vim_runtime/sources_non_forked/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f	access:public
kill	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def vim.kill$/;"	F
kind	.vim/src/readtags.h	/^	const char *kind;$/;"	m	struct:__anon12	access:public
klass	.vim/src/vjde/completion/Struts2Configure.java	/^		public String klass;$/;"	f	class:Struts2Configure.MyAction	access:public
klass	.vim/src/vjde/completion/Struts2Simple.java	/^		public String klass;$/;"	f	class:Struts2Simple.MyAction	access:public
label_col	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:label_col()$/;"	f
lash	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
last_change_was_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:last_change_was_paste()$/;"	f
last_char	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:last_char()$/;"	f
lastplace	.vim_runtime/sources_non_forked/vim-lastplace/plugin/vim-lastplace.vim	/^fu! s:lastplace()$/;"	f
lastplace_plugin	.vim_runtime/sources_non_forked/vim-lastplace/plugin/vim-lastplace.vim	/^augroup lastplace_plugin$/;"	a
lastvisual	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
lcs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:lcs(s1, s2)$/;"	f
leavepre	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
left	.vim/src/lex.yy.c	/^int left;$/;"	v
left	.vim/src/tipswnd.c	/^int left;$/;"	v
left	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:left(s)$/;"	f
level	rainbow/log.cpp	/^    LogLevel::Level level = LogLevel::UNKNOW;$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
level	rainbow/log.cpp	/^    LogLevel::Level level = LogLevel::UNKNOW;$/;"	m	struct:rainbow::LogDefine	file:	access:public
libs	.vim/src/CSParser.cs	/^            static string[] libs ;$/;"	f	class:Wangfc.CSParser	file:	access:private
libs	.vim/src/TypeFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
libs	.vim/src/UsingFinder.cs	/^        static string[] libs;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
lightline	.vim/bundle/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline	.vim_runtime/my_plugins/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline	.vim_runtime/sources_non_forked/lightline-ale/plugin/lightline/ale.vim	/^augroup lightline#ale$/;"	a
lightline	.vim_runtime/sources_non_forked/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline#ale#checking	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#checking() abort$/;"	f
lightline#ale#errors	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#errors() abort$/;"	f
lightline#ale#infos	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#infos() abort$/;"	f
lightline#ale#linted	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#linted() abort$/;"	f
lightline#ale#ok	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#ok() abort$/;"	f
lightline#ale#warnings	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#warnings() abort$/;"	f
lightline#colorscheme	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#background	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#background	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#background	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#fill	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#fill	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#fill	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colorscheme#flatten	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colorscheme#flatten	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	.vim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#gui2cui	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#gui2cui	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#gui2cui_palette	.vim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui_palette(palette) abort$/;"	f
lightline#colortable#gui2cui_palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui_palette(palette) abort$/;"	f
lightline#colortable#gui2cui_palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui_palette(palette) abort$/;"	f
lightline#colortable#name_to_rgb	.vim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#colortable#name_to_rgb	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#colortable#name_to_rgb	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#concatenate	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#concatenate	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#disable	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#disable	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#disable	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#enable	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#enable	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#error	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#error	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#highlight	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#highlight	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#init	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#init	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#link	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#link	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#mode	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#mode	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#onetab	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#onetab	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#palette	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#palette	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#statusline	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#statusline	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	.vim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#filename	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#filename	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	.vim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#modified	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#modified	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	.vim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#readonly	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#readonly	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	.vim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tab#tabnum	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tab#tabnum	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabline	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabline	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#tabs	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#tabs	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#toggle	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#toggle	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline#update_disable	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline#update_disable	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
limit	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^      let limit = s:get_lastpage(res)$/;"	v
limit	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^      let limit = s:get_lastpage(res)$/;"	v
line	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
line	.vim/src/readtags.c	/^    vstring line;$/;"	m	struct:sTagFile	file:	access:public
line	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
line	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
lineNumber	.vim/src/readtags.h	/^		unsigned long lineNumber;$/;"	m	struct:__anon12::__anon13	access:public
line_adjustment_for_current_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
line_list	.vim/src/previewwindow.cpp	/^	GtkWidget *line_list = NULL;$/;"	v
linechars	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lineout	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
lines	.vim/src/previewwindow.cpp	/^	vector<string> lines;$/;"	v
list	.vim/src/readtags.c	/^	    tagExtensionField *list;$/;"	m	struct:sTagFile::__anon3	file:	access:public
list	.vim/src/readtags.h	/^		tagExtensionField *list;$/;"	m	struct:__anon12::__anon14	access:public
list4Class	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private void list4Class(String argFile,String fullname,Vector v,int length) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,String fullname,Vector v,int length)
listClass	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private void listClass(String argFile,Vector v) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(String argFile,Vector v)
listClassArray	.vim/src/vjde/completion/Completion.java	/^  static String listClassArray(Class[] classes) {$/;"	m	class:Completion	access:default	signature:(Class[] classes)
listClassInfo	.vim/src/vjde/completion/Completion.java	/^  private static void listClassInfo(Class c, int level, StringBuffer sb) {$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
listClasses	.vim/src/vjde/completion/ClassInfo.java	/^  static StringBuffer listClasses(Class[] classes) {$/;"	m	class:ClassInfo	access:default	signature:(Class[] classes)
listConstructors	.vim/src/vjde/completion/Completion.java	/^  private static void listConstructors(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
listDir	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private void listDir(File argFile,Vector v,String pre) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile,Vector v,String pre)
listExceptions	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer listExceptions(Class[] classes) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Class[] classes)
listMembers	.vim/src/readtags.c	/^static void listMembers (const char* const k , const char* const v)$/;"	f	file:	signature:(const char* const k , const char* const v)
listModifiers	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer listModifiers(int modifiers) {$/;"	m	class:ClassInfo	file:	access:private	signature:(int modifiers)
listTags	.vim/src/readtags.c	/^static void listTags (void)$/;"	f	file:	signature:(void)
list_store	.vim/src/previewwindow.cpp	/^	GtkListStore* list_store=NULL;$/;"	v
listize_mirror	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:listize_mirror(mirrors) abort$/;"	f
load	.vim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
load	.vim/src/vjde/completion/ClassPathDir.java	/^    void load() {$/;"	m	class:ClassPathDir	access:default	signature:()
load	.vim/src/vjde/completion/ClassPathEntry.java	/^    abstract void load() throws IOException;$/;"	m	class:ClassPathEntry	access:default	signature:()
load	.vim/src/vjde/completion/ClassPathZip.java	/^    void load() throws IOException {$/;"	m	class:ClassPathZip	access:default	signature:()
load	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
load	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
loadClass	.vim/src/vjde/completion/DynamicClassLoader.java	/^  public Class loadClass(String argClassName) throws ClassNotFoundException {$/;"	m	class:DynamicClassLoader	access:public	signature:(String argClassName)
loadFile	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private byte[] loadFile(File argFile) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(File argFile)
loadFile	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private byte[] loadFile(ZipFile argFile, String argClassName) {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(ZipFile argFile, String argClassName)
load_path	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private String load_path = null;$/;"	f	class:DynamicClassLoader	file:	access:private
load_project_patterns	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:load_project_patterns(root_dir) abort$/;"	f
load_scopes	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^function! s:load_scopes(bang, ...) abort$/;"	f
load_scripts	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
loaded	.vim/src/vjde/completion/ClassPathEntry.java	/^    protected boolean loaded = false;$/;"	f	class:ClassPathEntry	access:protected
loaded	.vim/src/vjde/completion/DynamicClassLoader.java	/^    HashMap loaded = new HashMap();$/;"	f	class:DynamicClassLoader	access:default
loaded_alternateFile	.vim/plugin/a.vim	/^let loaded_alternateFile = 1$/;"	v
loaded_mru	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^let loaded_mru=1$/;"	v
loaded_nerd_tree	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_snips	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_supertab	.vim/bundle/supertab/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
loaded_supertab	.vim/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
loaded_taglist	.vim/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	.vim/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	.vim/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	.vim/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
location	.vim/src/vjde/completion/Struts2Configure.java	/^				public String location() {$/;"	m	class:ResultImpl	access:public	signature:()
location	.vim/src/vjde/completion/Struts2Configure.java	/^	String location;$/;"	f	class:ResultImpl	access:default
location	.vim/src/vjde/completion/Struts2Simple.java	/^				public String location() {$/;"	m	class:ResultImpl2	access:public	signature:()
location	.vim/src/vjde/completion/Struts2Simple.java	/^	String location;$/;"	f	class:ResultImpl2	access:default
location	.vim/src/vjde/completion/Struts2Simple.java	/^        public String location() ;$/;"	m	interface:Result	access:public	signature:()
lock	rainbow/thread.h	/^    void lock() {$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:()
lock	rainbow/thread.h	/^    void lock() {$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:()
lock	rainbow/thread.h	/^    void lock() {$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:()
log	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:log(str, ...) abort$/;"	f
log	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
log	rainbow/log.cpp	/^void FileLogAppender::log(std::shared_ptr<Logger> logger, LogLevel::Level level,$/;"	f	class:rainbow::FileLogAppender	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
log	rainbow/log.cpp	/^void Logger::log(LogLevel::Level level, LogEvent::ptr event) {$/;"	f	class:rainbow::Logger	signature:(LogLevel::Level level, LogEvent::ptr event)
log	rainbow/log.cpp	/^void StdoutLogAppender::log(std::shared_ptr<Logger> logger,$/;"	f	class:rainbow::StdoutLogAppender	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
log	rainbow/log.h	/^    virtual void log(std::shared_ptr<Logger> logger, LogLevel::Level level,$/;"	p	class:rainbow::LogAppender	access:public	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
log	rainbow/log.h	/^    void log(LogLevel::Level level, LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogLevel::Level level, LogEvent::ptr event)
looking_at	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:looking_at()$/;"	f
lsCmd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
m_age	tests/test_config.cpp	/^    int m_age = 0;$/;"	m	class:Person	file:	access:public
m_appenders	rainbow/log.h	/^    std::list<LogAppender::ptr> m_appenders;  \/\/ AppenderÈõÜÂêà$/;"	m	class:rainbow::Logger	access:private
m_cb	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	v
m_cb	rainbow/thread.h	/^    std::function<void()> m_cb;$/;"	m	class:rainbow::Thread	access:private
m_cbs	rainbow/config.h	/^    std::map<uint64_t, on_change_cb> m_cbs;$/;"	m	class:rainbow::ConfigVar	access:private
m_description	rainbow/config.h	/^    std::string m_description;$/;"	m	class:rainbow::ConfigVarBase	access:protected
m_elapse	rainbow/log.h	/^    uint32_t m_elapse = 0;         \/\/ Á®ãÂ∫èÂêØÂä®ÂºÄÂßãÂà∞Áé∞Âú®ÁöÑÊØ´ÁßíÊï∞$/;"	m	class:rainbow::LogEvent	access:private
m_error	rainbow/log.h	/^    bool m_error = false;$/;"	m	class:rainbow::LogFormatter	access:private
m_event	rainbow/log.h	/^    LogEvent::ptr m_event;$/;"	m	class:rainbow::LogEventWrap	access:private
m_fiberId	rainbow/log.h	/^    uint32_t m_fiberId = 0;        \/\/ ÂçèÁ®ãid$/;"	m	class:rainbow::LogEvent	access:private
m_file	rainbow/log.h	/^    const char* m_file = nullptr;  \/\/ Êñá‰ª∂Âêç$/;"	m	class:rainbow::LogEvent	access:private
m_fileName	.vim/src/vjde/completion/SourceDocReader.java	/^	private String m_fileName;$/;"	f	class:SourceDocReader	file:	access:private
m_filename	rainbow/log.h	/^    std::string m_filename;$/;"	m	class:rainbow::FileLogAppender	access:private
m_filestream	rainbow/log.h	/^    std::ofstream m_filestream;$/;"	m	class:rainbow::FileLogAppender	access:private
m_format	rainbow/log.cpp	/^    std::string m_format;$/;"	m	class:rainbow::DateTimeFormatItem	file:	access:private
m_formatter	rainbow/log.h	/^    LogFormatter::ptr m_formatter;            \/\/ Êó•ÂøóÊ†ºÂºè$/;"	m	class:rainbow::Logger	access:private
m_formatter	rainbow/log.h	/^    LogFormatter::ptr m_formatter;$/;"	m	class:rainbow::LogAppender	access:protected
m_hasFormatter	rainbow/log.h	/^    bool m_hasFormatter = false;$/;"	m	class:rainbow::LogAppender	access:protected
m_id	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	v
m_id	rainbow/thread.h	/^    pid_t m_id;$/;"	m	class:rainbow::Thread	access:private
m_items	rainbow/log.h	/^    std::vector<FormatItem::ptr> m_items;$/;"	m	class:rainbow::LogFormatter	access:private
m_level	rainbow/log.h	/^    LogLevel::Level m_level;            \/\/ ËØ•Êó•Âøó‰∫ã‰ª∂ÁöÑÁ∫ßÂà´$/;"	m	class:rainbow::LogEvent	access:private
m_level	rainbow/log.h	/^    LogLevel::Level m_level;  \/\/ Êó•ÂøóÂô®ÁöÑÁ∫ßÂà´$/;"	m	class:rainbow::Logger	access:private
m_level	rainbow/log.h	/^    LogLevel::Level m_level;$/;"	m	class:rainbow::LogAppender	access:protected
m_line	rainbow/log.h	/^    int32_t m_line = 0;            \/\/ Ë°åÂè∑$/;"	m	class:rainbow::LogEvent	access:private
m_lock	rainbow/thread.h	/^    pthread_rwlock_t m_lock;$/;"	m	class:rainbow::RWMutex	access:private
m_locked	rainbow/thread.h	/^    bool m_locked;$/;"	m	struct:rainbow::ReadScopedLockImpl	access:private
m_locked	rainbow/thread.h	/^    bool m_locked;$/;"	m	struct:rainbow::ScopedLockImpl	access:private
m_locked	rainbow/thread.h	/^    bool m_locked;$/;"	m	struct:rainbow::WriteScopedLockImpl	access:private
m_logger	rainbow/log.h	/^    std::shared_ptr<Logger> m_logger;   \/\/ ÊåáÂêë Logger Á±ªÁöÑÊåáÈíà$/;"	m	class:rainbow::LogEvent	access:private
m_loggers	rainbow/log.h	/^    std::map<std::string, Logger::ptr> m_loggers;$/;"	m	class:rainbow::LoggerManager	access:private
m_mutex	rainbow/thread.h	/^    T& m_mutex;$/;"	m	struct:rainbow::ReadScopedLockImpl	access:private
m_mutex	rainbow/thread.h	/^    T& m_mutex;$/;"	m	struct:rainbow::ScopedLockImpl	access:private
m_mutex	rainbow/thread.h	/^    T& m_mutex;$/;"	m	struct:rainbow::WriteScopedLockImpl	access:private
m_name	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.h	/^/;"	v
m_name	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	v
m_name	rainbow/config.h	/^    std::string m_name;$/;"	m	class:rainbow::ConfigVarBase	access:protected
m_name	rainbow/log.h	/^    std::string m_name;       \/\/ Êó•ÂøóÂêçÁß∞$/;"	m	class:rainbow::Logger	access:private
m_name	rainbow/thread.h	/^    std::string m_name;$/;"	m	class:rainbow::Thread	access:private
m_name	tests/test_config.cpp	/^    std::string m_name;$/;"	m	class:Person	file:	access:public
m_pattern	rainbow/log.h	/^    std::string m_pattern;$/;"	m	class:rainbow::LogFormatter	access:private
m_root	rainbow/log.h	/^    Logger::ptr m_root;$/;"	m	class:rainbow::Logger	access:private
m_root	rainbow/log.h	/^    Logger::ptr m_root;$/;"	m	class:rainbow::LoggerManager	access:private
m_semaphore	rainbow/thread.h	/^    Semaphore m_semaphore;$/;"	m	class:rainbow::Thread	access:private
m_semaphore	rainbow/thread.h	/^    sem_t m_semaphore;$/;"	m	class:rainbow::Semaphore	access:private
m_sex	tests/test_config.cpp	/^    bool m_sex = 0;$/;"	m	class:Person	file:	access:public
m_ss	rainbow/log.h	/^    std::stringstream m_ss;             \/\/ Êó•ÂøóÊµÅ$/;"	m	class:rainbow::LogEvent	access:private
m_string	rainbow/log.cpp	/^    std::string m_string;$/;"	m	class:rainbow::StringFormatItem	file:	access:private
m_thread	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	v
m_thread	rainbow/thread.h	/^    pthread_t m_thread;$/;"	m	class:rainbow::Thread	access:private
m_threadId	rainbow/log.h	/^    uint32_t m_threadId = 0;       \/\/ Á∫øÁ®ãid$/;"	m	class:rainbow::LogEvent	access:private
m_time	rainbow/log.h	/^    uint64_t m_time;               \/\/ Êó∂Èó¥Êà≥$/;"	m	class:rainbow::LogEvent	access:private
m_val	rainbow/config.h	/^    T m_val;$/;"	m	class:rainbow::ConfigVar	access:private
m_vimHwnd	.vim/src/lex.yy.c	/^HWND m_vimHwnd; \/\/ vim ¥∞ø⁄$/;"	v
m_vimHwnd	.vim/src/previewwindow.cpp	/^	HWND m_vimHwnd;$/;"	v
m_vimHwnd	.vim/src/tipswnd.c	/^HWND m_vimHwnd; \/\/ vim ¥∞ø⁄$/;"	v
main	.vim/src/lex.yy.c	/^int main()$/;"	f
main	.vim/src/previewwindow.cpp	/^int main(int argc,char* argv[])$/;"	f	signature:(int argc,char* argv[])
main	.vim/src/readtags.c	/^int main( int argc, char* argv[] )$/;"	f	signature:( int argc, char* argv[] )
main	.vim/src/vjde/completion/ClassInfo.java	/^  public static void main (String[] args) {$/;"	m	class:ClassInfo	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/ClassesByName.java	/^	public static void main(String[] args) {$/;"	m	class:ClassesByName	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/Completion.java	/^  public static void main (String[] args) {$/;"	m	class:Completion	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/Document.java	/^        public static void main(String[] args) {$/;"	m	class:Document	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/PackageClasses.java	/^	public static void main(String[] args) {$/;"	m	class:PackageClasses	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/PackageCompletion.java	/^    public static void main(String[] args) {$/;"	m	class:PackageCompletion	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/SourceDocReader.java	/^	public static void main(String[] args) {$/;"	m	class:SourceDocReader	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/Struts2Configure.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2Configure	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/Struts2ConfigureMain.java	/^	public static void main(String[] args) {$/;"	m	class:Struts2ConfigureMain	access:public	signature:(String[] args)
main	.vim/src/vjde/completion/Struts2Simple.java	/^    public static void main(String args[]) {$/;"	m	class:Struts2Simple	access:public	signature:(String args[])
main	.vim/src/wspawn.cpp	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main	tests/test.cpp	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	tests/test_config.cpp	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	tests/test_thread.cpp	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main_syntax	.vim_runtime/sources_non_forked/typescript-vim/syntax/typescript.vim	/^  let main_syntax = "typescript"$/;"	v
main_syntax	.vim_runtime/sources_non_forked/vim-bundle-mako/syntax/mako.vim	/^  let main_syntax = b:mako_outer_lang$/;"	v
main_syntax	.vim_runtime/sources_non_forked/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	.vim_runtime/sources_non_forked/vim-pug/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
main_syntax	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
makeElement	.vim/ftplugin/xml.vim	/^function! s:makeElement()$/;"	f
make_box	.vim_runtime/sources_non_forked/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f	access:public
make_sync_command	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:make_sync_command(bang, bundle) abort$/;"	f
map	.vim/bundle/supertab/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	.vim/bundle/supertab/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map	.vim/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	.vim/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
mapKey	.vim/ftplugin/xml.vim	/^function! s:mapKey(mode, key, cmd)$/;"	f
map_dict	.vim/bundle/supertab/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
map_dict	.vim/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
map_if_not_mapped	.vim_runtime/sources_non_forked/vim-snipmate/after/plugin/snipMate.vim	/^function! s:map_if_not_mapped(lhs, rhs, mode) abort$/;"	f
mapleader	.vim_runtime/vimrcs/basic.vim	/^let mapleader = ","$/;"	v
maps_nop	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:maps_nop()$/;"	f
maps_resize	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:maps_resize()$/;"	f
markdown_room	.vim_runtime/sources_non_forked/vim-zenroom2/plugin/zenroom2.vim	/^function! s:markdown_room()$/;"	f
match_expr_on_line	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
match_window_opts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
matchaddpos	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^function! s:matchaddpos(group, pos_list) abort$/;"	f
matchbegin	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchbegin(text, close)$/;"	f
matchbuf	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchbuf(item, pat)$/;"	f
matchend	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchend(text, open)$/;"	f
matches_filename	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:matches_filename(config_filename, target_filename, glob)$/;"	f
matchfname	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	.vim/src/readtags.c	/^	    unsigned short max;$/;"	m	struct:sTagFile::__anon3	file:	access:public
max	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
max_lines	.vim/src/readtags.c	/^static int max_lines = -1;$/;"	v	file:
maxf	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
member	.vim/src/vjde/completion/Document.java	/^	String member;$/;"	f	class:Document	access:default
mergelists	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
message	.vim/bundle/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
message	.vim_runtime/my_plugins/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
message	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^function! s:message(message) abort$/;"	f
message	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^function! s:message(message) abort$/;"	f
message	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^function! s:message(message) abort$/;"	f
message	.vim_runtime/sources_non_forked/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
method	.vim/src/vjde/completion/Struts2Configure.java	/^		public String method;$/;"	f	class:Struts2Configure.MyAction	access:public
method	.vim/src/vjde/completion/Struts2Simple.java	/^		public String method;$/;"	f	class:Struts2Simple.MyAction	access:public
method	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^            def method; end$/;"	f	class:OuterClass.InnerClass
method	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass
method	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass.InnerClass
method	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        def method; end$/;"	f	class:OuterClass
mfunc	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
mirror	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let mirror = { 'line' : 0 }$/;"	v
mixedcase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:mixedcase(word)$/;"	f
mixedsort	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mixedsort2	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort2(ct, ...)$/;"	f
mmc_logmon_sup	.vim/bundle/Vundle.vim/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
mmode	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
modevar	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
msg	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multiline_indent	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def multiline_indent(prev, default)$/;"	f
multiple_cursors#debug	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#debug()$/;"	f
multiple_cursors#find	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#find(start, end, pattern)$/;"	f
multiple_cursors#get_latency_debug_file	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#get_latency_debug_file()$/;"	f
multiple_cursors#new	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#new(mode, word_boundary)$/;"	f
multiple_cursors#prev	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#prev()$/;"	f
multiple_cursors#quit	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#quit()$/;"	f
multiple_cursors#select_all	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#select_all(mode, word_boundary)$/;"	f
multiple_cursors#skip	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#skip()$/;"	f
multipliers	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
my_system	.vim/src/my_system.cpp	/^unsigned int my_system(const char *cmd,char *result,int maxLen){$/;"	f	signature:(const char *cmd,char *result,int maxLen)
my_system	.vim/src/my_system.cpp	/^unsigned int my_system(const char* pCmd, char* pResult, int size) {$/;"	f	signature:(const char* pCmd, char* pResult, int size)
my_system	.vim/src/my_system.h	/^unsigned int my_system(const char *cmd,char *result,int maxLen);$/;"	p	signature:(const char *cmd,char *result,int maxLen)
name	.vim/src/readtags.c	/^	    const char *name;$/;"	m	struct:sTagFile::__anon2	file:	access:public
name	.vim/src/readtags.c	/^	char *name;$/;"	m	struct:sTagFile::__anon4	file:	access:public
name	.vim/src/readtags.c	/^    vstring name;$/;"	m	struct:sTagFile	file:	access:public
name	.vim/src/readtags.h	/^		const char *name;$/;"	m	struct:__anon7::__anon10	access:public
name	.vim/src/readtags.h	/^	const char *name;$/;"	m	struct:__anon12	access:public
name	.vim/src/vjde/completion/Struts2Configure.java	/^				public String name() {$/;"	m	class:ResultImpl	access:public	signature:()
name	.vim/src/vjde/completion/Struts2Configure.java	/^	String name ;$/;"	f	class:ActionImpl	access:default
name	.vim/src/vjde/completion/Struts2Configure.java	/^	String name;$/;"	f	class:ResultImpl	access:default
name	.vim/src/vjde/completion/Struts2Simple.java	/^				public String name() {$/;"	m	class:ResultImpl2	access:public	signature:()
name	.vim/src/vjde/completion/Struts2Simple.java	/^	String name ;$/;"	f	class:ActionImpl2	access:default
name	.vim/src/vjde/completion/Struts2Simple.java	/^	String name;$/;"	f	class:ResultImpl2	access:default
name	.vim/src/vjde/completion/Struts2Simple.java	/^        public String name() ;$/;"	m	interface:Result	access:public	signature:()
name	rainbow/log.cpp	/^    std::string name;$/;"	m	struct:rainbow::LogDefine	file:	access:public
nameComparison	.vim/src/readtags.c	/^static int nameComparison (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
nameLength	.vim/src/readtags.c	/^	    size_t nameLength;$/;"	m	struct:sTagFile::__anon2	file:	access:public
nameToClassMap	.vim/src/vjde/completion/ClassPathEntry.java	/^    protected MultiValueMap nameToClassMap = new MultiValueMap();$/;"	f	class:ClassPathEntry	access:protected
narrowable	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
natures	.vim/bundle/supertab/ftplugin/html.vim	/^        let natures = eclim#project#util#GetProjectNatureAliases(project)$/;"	v
nearest_cargo	.vim_runtime/sources_non_forked/rust.vim/autoload/cargo.vim	/^function! s:nearest_cargo(...) abort$/;"	f
nerdtree#checkForBrowse	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#closeBookmarksOnOpen	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeBookmarksOnOpen() abort$/;"	f
nerdtree#closeTreeOnOpen	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeOnOpen() abort$/;"	f
nerdtree#compareNodePaths	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
new_parser	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:new_parser(text) abort$/;"	f
newcache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
next_sign_id	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
nocache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
normalize	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
normalize	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
normalize	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
normalize_options	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:normalize_options(flags)$/;"	f
nosort	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
not_git_dir	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
notify	rainbow/thread.cpp	/^void Semaphore::notify() {$/;"	f	class:rainbow::Semaphore	signature:()
notify	rainbow/thread.h	/^    void notify();$/;"	p	class:rainbow::Semaphore	access:public	signature:()
nr	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
nr	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
nr	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
nss	.vim/src/CSParser.cs	/^            static string[] nss  ;$/;"	f	class:Wangfc.CSParser	file:	access:private
nss	.vim/src/TypeFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
nss	.vim/src/UsingFinder.cs	/^        static string[] nss;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
o	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> o <NOP>$/;"	m
obj_dir	Makefile	/^obj_dir := .\/obj$/;"	m
objdir	Makefile	/^objdir := obj$/;"	m
object.clone	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:object.clone(...)$/;"	f
objlist	Makefile	/^objlist := $(patsubst %.cpp, $(objdir)\/%.o, $(srcs))$/;"	m
obsolete	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^function! s:obsolete(var)$/;"	f
obsolete_gitgutter_signs_to_remove	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
offset	.vim/src/lex.yy.c	/^int offset;$/;"	v
offset	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
oloredlogs	.vim_runtime/sources_non_forked/vim-markdown/Makefile	/^	build\/html2vimdoc\/bin\/pip install beautifulsoup coloredlogs==4.0 markdown$/;"	m
omni#common#debug#End	.vim/autoload/omni/common/debug.vim	/^function! omni#common#debug#End()$/;"	f
omni#common#debug#Start	.vim/autoload/omni/common/debug.vim	/^function! omni#common#debug#Start()$/;"	f
omni#common#debug#Trace	.vim/autoload/omni/common/debug.vim	/^function! omni#common#debug#Trace(szFuncName, ...)$/;"	f
omni#common#utils#CompareNumber	.vim/autoload/omni/common/utils.vim	/^function! omni#common#utils#CompareNumber(i1, i2)$/;"	f
omni#common#utils#GetWordUnderCursor	.vim/autoload/omni/common/utils.vim	/^function! omni#common#utils#GetWordUnderCursor()$/;"	f
omni#common#utils#TagList	.vim/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagList(szTagQuery)$/;"	f
omni#common#utils#TagListNoThrow	.vim/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagListNoThrow(szTagQuery)$/;"	f
omni#cpp#complete#Init	.vim/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Init()$/;"	f
omni#cpp#complete#Main	.vim/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Main(findstart, base)$/;"	f
omni#cpp#includes#Display	.vim/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#Display()$/;"	f
omni#cpp#includes#GetList	.vim/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#GetList(...)$/;"	f
omni#cpp#items#Get	.vim/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#Get(tokens, ...)$/;"	f
omni#cpp#items#ResolveItemsTypeInfo	.vim/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)$/;"	f
omni#cpp#maycomplete#Arrow	.vim/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Arrow()$/;"	f
omni#cpp#maycomplete#Complete	.vim/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Complete()$/;"	f
omni#cpp#maycomplete#Dot	.vim/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Dot()$/;"	f
omni#cpp#maycomplete#Scope	.vim/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Scope()$/;"	f
omni#cpp#namespaces#GetContexts	.vim/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetContexts()$/;"	f
omni#cpp#namespaces#GetListFromCurrentBuffer	.vim/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetListFromCurrentBuffer(...)$/;"	f
omni#cpp#namespaces#GetMapFromBuffer	.vim/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromBuffer(szFilePath, ...)$/;"	f
omni#cpp#namespaces#GetMapFromCurrentBuffer	.vim/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromCurrentBuffer()$/;"	f
omni#cpp#namespaces#GetUsingNamespaces	.vim/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetUsingNamespaces()$/;"	f
omni#cpp#namespaces#ResolveAlias	.vim/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAlias(mapNamespaceAlias, szNamespace)$/;"	f
omni#cpp#namespaces#ResolveAll	.vim/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAll(namespacesUsed)$/;"	f
omni#cpp#settings#Init	.vim/autoload/omni/cpp/settings.vim	/^function! omni#cpp#settings#Init()$/;"	f
omni#cpp#tokenizer#Tokenize	.vim/autoload/omni/cpp/tokenizer.vim	/^function! omni#cpp#tokenizer#Tokenize(szCode)$/;"	f
omni#cpp#utils#BuildParenthesisGroups	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#BuildParenthesisGroups(tokens)$/;"	f
omni#cpp#utils#CreateTypeInfo	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#CreateTypeInfo(param)$/;"	f
omni#cpp#utils#ExtractCmdFromTagItem	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractCmdFromTagItem(tagItem)$/;"	f
omni#cpp#utils#ExtractScope	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractScope(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTag	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTag(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTokens	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTokens(tokens)$/;"	f
omni#cpp#utils#GetCastType	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCastType(tokens)$/;"	f
omni#cpp#utils#GetClassInheritanceList	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetClassInheritanceList(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetCode	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCode(posStart, posEnd)$/;"	f
omni#cpp#utils#GetCodeFromLine	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCodeFromLine(szSingleLine)$/;"	f
omni#cpp#utils#GetPreviewWindowStringFromTagItem	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetPreviewWindowStringFromTagItem(tagItem)$/;"	f
omni#cpp#utils#GetResolvedTagItem	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTagItem(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetResolvedTags	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTags(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetTypeInfoString	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetTypeInfoString(typeInfo)$/;"	f
omni#cpp#utils#IsCursorInCommentOrString	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsCursorInCommentOrString()$/;"	f
omni#cpp#utils#IsTypeInfoValid	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsTypeInfoValid(typeInfo)$/;"	f
omni#cpp#utils#ResolveFilePath	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ResolveFilePath(szFile)$/;"	f
omni#cpp#utils#SimplifyParenthesis	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyParenthesis(tokens)$/;"	f
omni#cpp#utils#SimplifyScope	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyScope(szScope)$/;"	f
omni#cpp#utils#TokenizeCurrentInstruction	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstruction(...)$/;"	f
omni#cpp#utils#TokenizeCurrentInstructionUntilWord	.vim/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstructionUntilWord()$/;"	f
omni#cpp#utils#expIgnoreComments	.vim/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#expIgnoreComments = 'getline(".") =~ g:omni#cpp#utils#reIgnoreComment'$/;"	v
omni#cpp#utils#reIgnoreComment	.vim/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#reIgnoreComment = escape('\\\/\\\/\\|\\\/\\*\\|\\*\\\/', '*\/\\')$/;"	v
omni#cpp#utils#szEscapedCharacters	.vim/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#szEscapedCharacters = ' %#'$/;"	v
onPackage	.vim/src/vjde/completion/Struts2Configure.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Configure	access:public	signature:(Element pkg)
onPackage	.vim/src/vjde/completion/Struts2Simple.java	/^	public boolean onPackage(Element pkg) {$/;"	m	class:Struts2Simple	access:public	signature:(Element pkg)
onResult	.vim/src/vjde/completion/Struts2Configure.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Configure	access:public	signature:(Element act)
onResult	.vim/src/vjde/completion/Struts2Simple.java	/^	public Result[] onResult(Element act) {$/;"	m	class:Struts2Simple	access:public	signature:(Element act)
on_bufenter	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
on_change_cb	rainbow/config.h	/^    typedef std::function<void (const T& old_value, const T& new_value)> on_change_cb;$/;"	t	class:rainbow::ConfigVar	access:public
on_cursor_changed	.vim/src/previewwindow.cpp	/^void        on_cursor_changed(GtkTreeView *treeview,$/;"	f	signature:(GtkTreeView *treeview, gpointer user_data)
on_cursor_changed	.vim/src/previewwindow.cpp	/^void   on_cursor_changed(GtkTreeView *treeview,$/;"	p	file:	signature:(GtkTreeView *treeview, gpointer user_data)
on_exit_nvim	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
on_exit_vim	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(channel) dict abort$/;"	f
on_key_release_event	.vim/src/previewwindow.cpp	/^	void on_key_release_event( GtkWidget *widget, GdkEventKey *data );$/;"	p	file:	signature:( GtkWidget *widget, GdkEventKey *data )
on_key_release_event	.vim/src/previewwindow.cpp	/^void on_key_release_event( GtkWidget *widget,$/;"	f	signature:( GtkWidget *widget, GdkEventKey *data )
on_key_release_event2	.vim/src/previewwindow.cpp	/^	void on_key_release_event2( GtkWidget *widget, GdkEventKey *data );$/;"	p	file:	signature:( GtkWidget *widget, GdkEventKey *data )
on_key_release_event2	.vim/src/previewwindow.cpp	/^void on_key_release_event2( GtkWidget *widget,$/;"	f	signature:( GtkWidget *widget, GdkEventKey *data )
on_row_selected	.vim/src/previewwindow.cpp	/^	void  on_row_selected(GtkTreeView *treeview,$/;"	f	signature:(GtkTreeView *treeview, GtkTreePath *arg1, GtkTreeViewColumn *arg2, gpointer user_data)
on_row_selected	.vim/src/previewwindow.cpp	/^            void  on_row_selected      (GtkTreeView *treeview,$/;"	p	file:	signature:(GtkTreeView *treeview, GtkTreePath *arg1, GtkTreeViewColumn *arg2, gpointer user_data)
on_stderr_nvim	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, data, _event) dict abort$/;"	f
on_stderr_vim	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
on_stdout_nvim	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
on_stdout_vim	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
one	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/basic_spec.rb	/^      def one$/;"	f
one	.vim_runtime/sources_non_forked/vim-ruby/spec/indent/method_definitions_spec.rb	/^        def one(x)$/;"	f
openExplorer	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
openHSplit	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
openHSplitBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
openInNewTab	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
openInNewTabSilent	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
openNodeRecursively	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
openVSplit	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
openVSplitBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
open_browser	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:open_browser(url) abort$/;"	f
open_browser	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:open_browser(url) abort$/;"	f
open_hunk_preview_window	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:open_hunk_preview_window()$/;"	f
opened	.vim/src/readtags.h	/^		int opened;$/;"	m	struct:__anon7::__anon8	access:public
openfile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
operator ()	rainbow/config.h	/^    T operator()(const F& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const F& v)
operator ()	rainbow/config.h	/^    std::list<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	rainbow/config.h	/^    std::map<std::string, T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	rainbow/config.h	/^    std::set<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	rainbow/config.h	/^    std::string operator()(const std::list<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::list<T>& v)
operator ()	rainbow/config.h	/^    std::string operator()(const std::map<std::string, T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::map<std::string, T>& v)
operator ()	rainbow/config.h	/^    std::string operator()(const std::set<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::set<T>& v)
operator ()	rainbow/config.h	/^    std::string operator()(const std::unordered_map<std::string, T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::unordered_map<std::string, T>& v)
operator ()	rainbow/config.h	/^    std::string operator()(const std::unordered_set<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::unordered_set<T>& v)
operator ()	rainbow/config.h	/^    std::string operator()(const std::vector<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::vector<T>& v)
operator ()	rainbow/config.h	/^    std::unordered_map<std::string, T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	rainbow/config.h	/^    std::unordered_set<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	rainbow/config.h	/^    std::vector<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	rainbow/log.cpp	/^    std::set<LogDefine> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	rainbow/log.cpp	/^    std::string operator()(const std::set<LogDefine>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::set<LogDefine>& v)
operator ()	tests/test_config.cpp	/^    Person operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
operator ()	tests/test_config.cpp	/^    std::string operator()(const Person& p) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const Person& p)
operator <	rainbow/log.cpp	/^    bool operator<(const LogDefine& oth) const {$/;"	f	struct:rainbow::LogDefine	access:public	signature:(const LogDefine& oth) const
operator =	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%thread.h	/^&å/;"	p	signature:(const Thread&)
operator =	rainbow/thread.h	/^    Semaphore& operator=(const Semaphore&) = delete;$/;"	p	class:rainbow::Semaphore	access:private	signature:(const Semaphore&)
operator =	rainbow/thread.h	/^    Thread& operator=(const Thread&) = delete;$/;"	p	class:rainbow::Thread	access:private	signature:(const Thread&)
operator ==	rainbow/log.cpp	/^    bool operator==(const LogAppenderDefine& oth) const {$/;"	f	struct:rainbow::LogAppenderDefine	access:public	signature:(const LogAppenderDefine& oth) const
operator ==	rainbow/log.cpp	/^    bool operator==(const LogDefine& oth) const {$/;"	f	struct:rainbow::LogDefine	access:public	signature:(const LogDefine& oth) const
operator ==	tests/test_config.cpp	/^    bool operator==(const Person& oth) const {$/;"	f	class:Person	access:public	signature:(const Person& oth) const
opfunc	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
opfunc2	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
option	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
optionxform	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:optionxform(optionstr)$/;"	f
opts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
others	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:others(p)$/;"	f
output	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
override	rainbow/log.h	/^                     LogEvent::ptr event) override;$/;"	m	class:rainbow::FileLogAppender	access:public
override	rainbow/log.h	/^                     LogEvent::ptr event) override;$/;"	m	class:rainbow::StdoutLogAppender	access:public
override	rainbow/log.h	/^    std::string toYamlString() override;$/;"	m	class:rainbow::FileLogAppender	access:public
override	rainbow/log.h	/^    std::string toYamlString() override;$/;"	m	class:rainbow::StdoutLogAppender	access:public
page	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^    let page = page + 1$/;"	v
page	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^    let page = page + 1$/;"	v
paintX	.vim/src/lex.yy.c	/^int paintX=2;$/;"	v
paintY	.vim/src/lex.yy.c	/^int paintY=0;$/;"	v
paramSkip	.vim/src/lex.yy.c	/^int paramSkip;$/;"	v
params	.vim/src/vjde/completion/Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ActionImpl	access:public	signature:()
params	.vim/src/vjde/completion/Struts2Configure.java	/^				public String[] params() {$/;"	m	class:ResultImpl	access:public	signature:()
params	.vim/src/vjde/completion/Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ActionImpl2	access:public	signature:()
params	.vim/src/vjde/completion/Struts2Simple.java	/^				public String[] params() {$/;"	m	class:ResultImpl2	access:public	signature:()
parse	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:parse(config_filename, target_filename, lines)$/;"	f
parseExtensionFields	.vim/src/readtags.c	/^static void parseExtensionFields (tagFile *const file, tagEntry *const entry,$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry, char *const string)
parseJSON	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! s:parseJSON(buffer, lines) abort$/;"	f
parseLines	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^function! s:parseLines(buffer, lines) abort$/;"	f
parseTagLine	.vim/src/readtags.c	/^static void parseTagLine (tagFile *file, tagEntry *const entry)$/;"	f	file:	signature:(tagFile *file, tagEntry *const entry)
parse_arg	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:parse_arg(arg)$/;"	f
parse_name	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
parse_substitute	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:parse_substitute(bang,line1,line2,count,args)$/;"	f
parse_subvert	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:parse_subvert(bang,line1,line2,count,args)$/;"	f
parseline	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
parser_add_var	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_add_var(var) dict abort$/;"	f
parser_advance	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_advance(...) dict abort$/;"	f
parser_create_stubs	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_create_stubs() dict abort$/;"	f
parser_expr	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_expr() dict abort$/;"	f
parser_id	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_id() dict abort$/;"	f
parser_line	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_line() dict abort$/;"	f
parser_parse	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_parse() dict abort$/;"	f
parser_pat	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_pat(...) dict abort$/;"	f
parser_placeholder	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_placeholder() dict abort$/;"	f
parser_same	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_same(tok) dict abort$/;"	f
parser_string	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_string(till, ...) dict abort$/;"	f
parser_subst	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_subst() dict abort$/;"	f
parser_text	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_text(till) dict abort$/;"	f
parser_var	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_var() dict abort$/;"	f
parser_varend	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:parser_varend() dict abort$/;"	f
part_of_diff	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:part_of_diff(hunk_diff, first, last)$/;"	f
partial	.vim/src/readtags.c	/^	    short partial;$/;"	m	struct:sTagFile::__anon2	file:	access:public
parts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
paste_from_yankstack	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:paste_from_yankstack(key, mode, register, count, is_new)$/;"	f
paste_with_key	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:paste_with_key(key, mode, register, count)$/;"	f
pathogen#cycle_filetype	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() abort$/;"	f
pathogen#execute	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#execute(...) abort$/;"	f
pathogen#expand	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#expand(pattern) abort$/;"	f
pathogen#fnameescape	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort$/;"	f
pathogen#glob	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort$/;"	f
pathogen#glob_directories	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort$/;"	f
pathogen#helptags	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#helptags() abort$/;"	f
pathogen#incubate	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#incubate(...) abort$/;"	f
pathogen#infect	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#infect(...) abort$/;"	f
pathogen#interpose	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#interpose(name) abort$/;"	f
pathogen#is_absolute	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#is_absolute(path) abort$/;"	f
pathogen#is_disabled	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) abort$/;"	f
pathogen#join	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#join(...) abort$/;"	f
pathogen#legacyjoin	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort$/;"	f
pathogen#runtime_append_all_bundles	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort$/;"	f
pathogen#runtime_findfile	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) abort$/;"	f
pathogen#separator	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#separator() abort$/;"	f
pathogen#slash	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#slash() abort$/;"	f
pathogen#split	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#split(path) abort$/;"	f
pathogen#surround	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#surround(path) abort$/;"	f
pathogen#uniq	.vim_runtime/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort$/;"	f
paths	.vim/src/vjde/completion/Document.java	/^	String paths;$/;"	f	class:Document	access:default
pathshorten	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pattern	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
pattern	.vim/src/readtags.h	/^		const char *pattern;$/;"	m	struct:__anon12::__anon13	access:public
pattern	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
pattern	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
pattern	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:pattern(dict,boundaries)$/;"	f
populate_hunk_preview_window	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:populate_hunk_preview_window(header, body)$/;"	f
pos	.vim/src/readtags.c	/^	    off_t pos; $/;"	m	struct:sTagFile::__anon2	file:	access:public
pos	.vim/src/readtags.c	/^    off_t pos;$/;"	m	struct:sTagFile	file:	access:public
pos	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:pos(mark)$/;"	f
pre_select_buffer	.vim/src/previewwindow.cpp	/^	static char pre_select_buffer[256];\/\/user input$/;"	v	file:
preprocess_values	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:preprocess_values(job, opts)$/;"	f
preview	.vim/src/previewwindow.cpp	/^	_DL_EXPORT char* preview(char *str)$/;"	f	signature:(char *str)
preview	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
previewBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
previewNodeCurrent	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
previewNodeHSplit	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
previewNodeHSplitBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
previewNodeVSplit	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
previewNodeVSplitBookmark	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
preview_window	.vim/src/previewwindow.cpp	/^	char* preview_window(vector<string> &v,const string& base,int x,int y,int width,int height)$/;"	f	signature:(vector<string> &v,const string& base,int x,int y,int width,int height)
preview_window	.vim/src/previewwindow.cpp	/^	char* preview_window(vector<string> &v,const string& base,int x,int y,int width,int height);$/;"	p	file:	signature:(vector<string> &v,const string& base,int x,int y,int width,int height)
preview_window	.vim/src/previewwindow.hpp	/^char* preview_window(vector<const string> &v,const string& base,int x,int y,int width,int height);$/;"	p	signature:(vector<const string> &v,const string& base,int x,int y,int width,int height)
previous_indent	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def previous_indent$/;"	f
previous_token	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:previous_token()$/;"	f
printClass	.vim/src/vjde/completion/Completion.java	/^  private static String printClass(String name) {$/;"	m	class:Completion	file:	access:private	signature:(String name)
printConstructor	.vim/src/vjde/completion/Completion.java	/^  private static String printConstructor(String name, Class[] params) {$/;"	m	class:Completion	file:	access:private	signature:(String name, Class[] params)
printExceptions	.vim/src/vjde/completion/Completion.java	/^  private static String printExceptions(Class[] exceptions) {$/;"	m	class:Completion	file:	access:private	signature:(Class[] exceptions)
printField	.vim/src/vjde/completion/Completion.java	/^   private static String printField(String leader,String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String leader,String name, String type)
printField	.vim/src/vjde/completion/Completion.java	/^  private static String printField(String name, String type) {$/;"	m	class:Completion	file:	access:private	signature:(String name, String type)
printMethod	.vim/src/vjde/completion/Completion.java	/^  private static String printMethod(String name,$/;"	m	class:Completion	file:	access:private	signature:(String name, String returnType, Class[] args)
printTag	.vim/src/readtags.c	/^static void printTag (const tagEntry *entry)$/;"	f	file:	signature:(const tagEntry *entry)
printWithinQuotes	.vim/src/vjde/completion/ClassInfo.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:ClassInfo	file:	access:private	signature:(String item)
printWithinQuotes	.vim/src/vjde/completion/Completion.java	/^  private static String printWithinQuotes(String item) {$/;"	m	class:Completion	file:	access:private	signature:(String item)
process	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
process	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_added	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_hunk	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
process_modified	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_added	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_removed	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
process_removed	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
process_user_input	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:process_user_input()$/;"	f
program	.vim/src/readtags.c	/^    } program;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon4	file:	access:public
program	.vim/src/readtags.h	/^	} program;$/;"	m	struct:__anon7	typeref:struct:__anon7::__anon10	access:public
project	.vim/bundle/supertab/ftplugin/html.vim	/^      let project = eclim#project#util#GetCurrentProjectName()$/;"	v
promptToDelBuffer	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
proposed_indent	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def proposed_indent$/;"	f
prototype.AssessName	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.AssessName(world, name) dict "{{{3$/;"	f
prototype.BuildTableList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.BuildTableList() dict "{{{3$/;"	f
prototype.CleanFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.ClearAllMarks	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.ClearAllMarks() dict "{{{3$/;"	f
prototype.CloseScratch	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.CloseScratch(...) dict "{{{3$/;"	f
prototype.CurrentItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.CurrentItem() dict "{{{3$/;"	f
prototype.DisplayFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayFilter() dict "{{{3$/;"	f
prototype.DisplayFormat	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayFormat(list) dict "{{{3$/;"	f
prototype.DisplayHelp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayHelp() dict "{{{3$/;"	f
prototype.DisplayList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayList(...) dict "{{{3$/;"	f
prototype.DisplayListMark	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayListMark(x, y, mark) dict "{{{3$/;"	f
prototype.Dummy	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Test.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Dummy	.vim_runtime/sources_non_forked/tlib/autoload/tlib/TestChild.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Extend	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! s:prototype.Extend(dictionary) dict "{{{3$/;"	f
prototype.FilterIsEmpty	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.FilterIsEmpty() dict "{{{3$/;"	f
prototype.FilterRxPrefix	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FilterRxPrefix	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FollowCursor	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.FollowCursor() dict "{{{3$/;"	f
prototype.FormatArgs	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.FormatArgs(format_string, arg) dict "{{{3$/;"	f
prototype.FormatBaseFromData	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.FormatBaseFromData() abort dict "{{{3$/;"	f
prototype.FormatFilename	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^    function! s:prototype.FormatFilename(file) dict "{{{3$/;"	f
prototype.FormatName	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.FormatName(cache, format, value) dict "{{{3$/;"	f
prototype.GetBaseIdx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx(idx) dict "{{{3$/;"	f
prototype.GetBaseIdx0	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx0(idx) dict "{{{3$/;"	f
prototype.GetBaseItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetBaseItem(idx) dict "{{{3$/;"	f
prototype.GetItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetItem(idx) dict "{{{3$/;"	f
prototype.GetLineIdx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetLineIdx(lnum) dict "{{{3$/;"	f
prototype.GetListIdx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetListIdx(baseidx) dict "{{{3$/;"	f
prototype.GetResize	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetResize(size) dict "{{{3$/;"	f
prototype.GetRx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetRx(filter) dict "{{{3$/;"	f
prototype.GetRx0	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetRx0(...) dict "{{{3$/;"	f
prototype.GetSelectedItems	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.GetSelectedItems(current) dict "{{{3$/;"	f
prototype.Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Highlight_filename	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^    function! s:prototype.Highlight_filename() dict "{{{3$/;"	f
prototype.Inherit	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! s:prototype.Inherit(object) dict "{{{3$/;"	f
prototype.Init	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.InitFormatName	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^    function! s:prototype.InitFormatName() dict "{{{3 $/;"	f
prototype.InitHelp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.InitHelp() dict "{{{3$/;"	f
prototype.Initialize	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Initialize() dict "{{{3$/;"	f
prototype.IsA	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! s:prototype.IsA(class) dict "{{{3$/;"	f
prototype.IsRelated	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! s:prototype.IsRelated(object) dict "{{{3$/;"	f
prototype.IsValidFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.IsValidFilter() dict "{{{3$/;"	f
prototype.Leave	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Leave() dict "{{{3$/;"	f
prototype.MarkCurrent	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.MarkCurrent(y) dict "{{{3$/;"	f
prototype.Match	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Match(world, text) dict "{{{3$/;"	f
prototype.MatchBaseIdx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.MatchBaseIdx(idx) dict "{{{3$/;"	f
prototype.New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! s:prototype.New(...) dict "{{{3$/;"	f
prototype.PopFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.PopFilter() dict "{{{3$/;"	f
prototype.Pretty	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Pretty(filter) dict "{{{3$/;"	f
prototype.PrintLines	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.PrintLines() dict "{{{3$/;"	f
prototype.PushFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.PushFrontFilter(char) dict "{{{3$/;"	f
prototype.PushHelp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.PushHelp(...) dict "{{{3$/;"	f
prototype.Query	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Query() dict "{{{3$/;"	f
prototype.ReduceFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.ReduceFilter() dict "{{{3$/;"	f
prototype.ReduceFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.Reset	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Reset(...) dict "{{{3$/;"	f
prototype.ResetSelected	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.ResetSelected() dict "{{{3$/;"	f
prototype.Resize	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Resize(hsize, vsize) dict "{{{3$/;"	f
prototype.RespondTo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! s:prototype.RespondTo(name) dict "{{{3$/;"	f
prototype.RestoreOrigin	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.RestoreOrigin(...) dict "{{{3$/;"	f
prototype.Retrieve	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Retrieve(anyway) dict "{{{3$/;"	f
prototype.ScrollToOffset	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.ScrollToOffset() dict "{{{3$/;"	f
prototype.SelectItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SelectItem(mode, index) dict "{{{3$/;"	f
prototype.SelectItemsByNames	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SelectItemsByNames(mode, items) dict "{{{3$/;"	f
prototype.SetBaseItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetBaseItem(idx, item) dict "{{{3$/;"	f
prototype.SetFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetFilter() dict "{{{3$/;"	f
prototype.SetFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetFrontFilter(pattern) dict "{{{3$/;"	f
prototype.SetInitialFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetInitialFilter(filter) dict "{{{3$/;"	f
prototype.SetMatchMode	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetMatchMode(match_mode) dict "{{{3$/;"	f
prototype.SetOffset	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetOffset() dict "{{{3$/;"	f
prototype.SetOrigin	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetOrigin(...) dict "{{{3$/;"	f
prototype.SetPrefIdx	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetPrefIdx() dict "{{{3$/;"	f
prototype.SetStatusline	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SetStatusline(query) dict "{{{3$/;"	f
prototype.Set_display_format	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Set_display_format(value) dict "{{{3$/;"	f
prototype.Set_highlight_filename	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Set_highlight_filename() dict "{{{3$/;"	f
prototype.Super	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! s:prototype.Super(method, arglist) dict "{{{3$/;"	f
prototype.Suspend	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.Suspend() dict "{{{3$/;"	f
prototype.SwitchWindow	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.SwitchWindow(where) dict "{{{3$/;"	f
prototype.UseFilenameIndicators	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^    function! s:prototype.UseFilenameIndicators() dict "{{{3$/;"	f
prototype.UseInputListScratch	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.UseInputListScratch() dict "{{{3$/;"	f
prototype.UseScratch	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! s:prototype.UseScratch() dict "{{{3$/;"	f
ptr	rainbow/config.h	/^    typedef std::shared_ptr<ConfigVar> ptr;$/;"	t	class:rainbow::ConfigVar	access:public
ptr	rainbow/config.h	/^    typedef std::shared_ptr<ConfigVarBase> ptr;$/;"	t	class:rainbow::ConfigVarBase	access:public
ptr	rainbow/log.h	/^        typedef std::shared_ptr<FormatItem> ptr;$/;"	t	class:rainbow::LogFormatter::FormatItem	access:public
ptr	rainbow/log.h	/^    typedef std::shared_ptr<FileLogAppender> ptr;$/;"	t	class:rainbow::FileLogAppender	access:public
ptr	rainbow/log.h	/^    typedef std::shared_ptr<LogAppender> ptr;$/;"	t	class:rainbow::LogAppender	access:public
ptr	rainbow/log.h	/^    typedef std::shared_ptr<LogEvent> ptr;$/;"	t	class:rainbow::LogEvent	access:public
ptr	rainbow/log.h	/^    typedef std::shared_ptr<LogFormatter> ptr;$/;"	t	class:rainbow::LogFormatter	access:public
ptr	rainbow/log.h	/^    typedef std::shared_ptr<Logger> ptr;$/;"	t	class:rainbow::Logger	access:public
ptr	rainbow/log.h	/^    typedef std::shared_ptr<StdoutLogAppender> ptr;$/;"	t	class:rainbow::StdoutLogAppender	access:public
ptr	rainbow/thread.h	/^    typedef std::shared_ptr<Thread> ptr;$/;"	t	class:rainbow::Thread	access:public
put	.vim/src/vjde/completion/MultiValueMap.java	/^    public Object put(Object key, Object value) {$/;"	m	class:MultiValueMap	access:public	signature:(Object key, Object value)
python_highlight_all	.vim_runtime/vimrcs/filetypes.vim	/^let python_highlight_all = 1$/;"	v
q	.vim_runtime/sources_non_forked/ale/ftplugin/ale-fix-suggest.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview.vim	/^noremap <buffer> q :q!<CR>$/;"	m
query_path	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
rainbow	rainbow/config.cpp	/^namespace rainbow {$/;"	n	file:
rainbow	rainbow/config.h	/^namespace rainbow {$/;"	n
rainbow	rainbow/log.cpp	/^namespace rainbow {$/;"	n	file:
rainbow	rainbow/log.h	/^namespace rainbow {$/;"	n
rainbow	rainbow/singleton.h	/^namespace rainbow {$/;"	n
rainbow	rainbow/thread.cpp	/^namespace rainbow {$/;"	n	file:
rainbow	rainbow/thread.h	/^namespace rainbow {$/;"	n
rainbow	rainbow/util.cpp	/^namespace rainbow {$/;"	n	file:
rainbow	rainbow/util.h	/^namespace rainbow {$/;"	n
rainbow	tests/test_config.cpp	/^namespace rainbow {$/;"	n	file:
rainbow::Config	rainbow/config.h	/^class Config {$/;"	c	namespace:rainbow
rainbow::Config::ConfigVarMap	rainbow/config.h	/^    typedef std::unordered_map<std::string, ConfigVarBase::ptr> ConfigVarMap;$/;"	t	class:rainbow::Config	access:public
rainbow::Config::GetDatas	rainbow/config.h	/^    static ConfigVarMap& GetDatas() {$/;"	f	class:rainbow::Config	access:private	signature:()
rainbow::Config::LoadFromYaml	rainbow/config.cpp	/^void Config::LoadFromYaml(const YAML::Node& root) {$/;"	f	class:rainbow::Config	signature:(const YAML::Node& root)
rainbow::Config::LoadFromYaml	rainbow/config.h	/^    static void LoadFromYaml(const YAML::Node& root);$/;"	p	class:rainbow::Config	access:public	signature:(const YAML::Node& root)
rainbow::Config::LookUpBase	rainbow/config.cpp	/^ConfigVarBase::ptr Config::LookUpBase(const std::string& name) {$/;"	f	class:rainbow::Config	signature:(const std::string& name)
rainbow::Config::LookUpBase	rainbow/config.h	/^    static ConfigVarBase::ptr LookUpBase(const std::string& name);$/;"	p	class:rainbow::Config	access:public	signature:(const std::string& name)
rainbow::Config::Lookup	rainbow/config.h	/^    static typename ConfigVar<T>::ptr Lookup(const std::string& name) {$/;"	f	class:rainbow::Config	access:public	signature:(const std::string& name)
rainbow::Config::Lookup	rainbow/config.h	/^    static typename ConfigVar<T>::ptr Lookup(const std::string& name,$/;"	f	class:rainbow::Config	access:public	signature:(const std::string& name, const T& default_value, const std::string& description = ”)
rainbow::ConfigVar	rainbow/config.h	/^class ConfigVar : public ConfigVarBase {$/;"	c	namespace:rainbow	inherits:ConfigVarBase
rainbow::ConfigVar::ConfigVar	rainbow/config.h	/^    ConfigVar(const std::string& name$/;"	f	class:rainbow::ConfigVar	access:public	signature:(const std::string& name , const T& default_value , const std::string& description = ”)
rainbow::ConfigVar::addListener	rainbow/config.h	/^    void addListener(uint64_t key, on_change_cb cb) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(uint64_t key, on_change_cb cb)
rainbow::ConfigVar::clearListener	rainbow/config.h	/^    void clearListener() {$/;"	f	class:rainbow::ConfigVar	access:public	signature:()
rainbow::ConfigVar::delListener	rainbow/config.h	/^    void delListener(uint64_t key) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(uint64_t key)
rainbow::ConfigVar::fromString	rainbow/config.h	/^    bool fromString(const std::string& val) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(const std::string& val)
rainbow::ConfigVar::getListener	rainbow/config.h	/^    on_change_cb getListener(uint64_t key) {$/;"	f	class:rainbow::ConfigVar	access:public	signature:(uint64_t key)
rainbow::ConfigVar::getValue	rainbow/config.h	/^    const T getValue() const { return m_val; }$/;"	f	class:rainbow::ConfigVar	access:public	signature:() const
rainbow::ConfigVar::m_cbs	rainbow/config.h	/^    std::map<uint64_t, on_change_cb> m_cbs;$/;"	m	class:rainbow::ConfigVar	access:private
rainbow::ConfigVar::m_val	rainbow/config.h	/^    T m_val;$/;"	m	class:rainbow::ConfigVar	access:private
rainbow::ConfigVar::on_change_cb	rainbow/config.h	/^    typedef std::function<void (const T& old_value, const T& new_value)> on_change_cb;$/;"	t	class:rainbow::ConfigVar	access:public
rainbow::ConfigVar::ptr	rainbow/config.h	/^    typedef std::shared_ptr<ConfigVar> ptr;$/;"	t	class:rainbow::ConfigVar	access:public
rainbow::ConfigVar::setValue	rainbow/config.h	/^    void setValue(const T& v) { $/;"	f	class:rainbow::ConfigVar	access:public	signature:(const T& v)
rainbow::ConfigVarBase	rainbow/config.h	/^class ConfigVarBase {$/;"	c	namespace:rainbow
rainbow::ConfigVarBase::ConfigVarBase	rainbow/config.h	/^    ConfigVarBase(const std::string& name, const std::string& description = "") $/;"	f	class:rainbow::ConfigVarBase	access:public	signature:(const std::string& name, const std::string& description = ”)
rainbow::ConfigVarBase::fromString	rainbow/config.h	/^    virtual bool fromString(const std::string& val) = 0;$/;"	p	class:rainbow::ConfigVarBase	access:public	signature:(const std::string& val)
rainbow::ConfigVarBase::getDescription	rainbow/config.h	/^    const std::string& getDescription() const { return m_description; }$/;"	f	class:rainbow::ConfigVarBase	access:public	signature:() const
rainbow::ConfigVarBase::getName	rainbow/config.h	/^    const std::string& getName() const { return m_name; }$/;"	f	class:rainbow::ConfigVarBase	access:public	signature:() const
rainbow::ConfigVarBase::getTypeName	rainbow/config.h	/^    virtual std::string getTypeName() const = 0;$/;"	p	class:rainbow::ConfigVarBase	access:public	signature:() const
rainbow::ConfigVarBase::m_description	rainbow/config.h	/^    std::string m_description;$/;"	m	class:rainbow::ConfigVarBase	access:protected
rainbow::ConfigVarBase::m_name	rainbow/config.h	/^    std::string m_name;$/;"	m	class:rainbow::ConfigVarBase	access:protected
rainbow::ConfigVarBase::ptr	rainbow/config.h	/^    typedef std::shared_ptr<ConfigVarBase> ptr;$/;"	t	class:rainbow::ConfigVarBase	access:public
rainbow::ConfigVarBase::toString	rainbow/config.h	/^    virtual std::string toString() = 0;$/;"	p	class:rainbow::ConfigVarBase	access:public	signature:()
rainbow::ConfigVarBase::~ConfigVarBase	rainbow/config.h	/^    virtual ~ConfigVarBase() {}$/;"	f	class:rainbow::ConfigVarBase	access:public	signature:()
rainbow::DateTimeFormatItem	rainbow/log.cpp	/^class DateTimeFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::DateTimeFormatItem::DateTimeFormatItem	rainbow/log.cpp	/^    DateTimeFormatItem(const std::string& format = "%Y-%m-%d %H:%M:%s")$/;"	f	class:rainbow::DateTimeFormatItem	access:public	signature:(const std::string& format = ”)
rainbow::DateTimeFormatItem::m_format	rainbow/log.cpp	/^    std::string m_format;$/;"	m	class:rainbow::DateTimeFormatItem	file:	access:private
rainbow::ElapseFormatItem	rainbow/log.cpp	/^class ElapseFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::ElapseFormatItem::ElapseFormatItem	rainbow/log.cpp	/^    ElapseFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::ElapseFormatItem	access:public	signature:(const std::string str = ”)
rainbow::FiberIdFormatItem	rainbow/log.cpp	/^class FiberIdFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::FiberIdFormatItem::FiberIdFormatItem	rainbow/log.cpp	/^    FiberIdFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::FiberIdFormatItem	access:public	signature:(const std::string str = ”)
rainbow::FileLogAppender	rainbow/log.h	/^class FileLogAppender : public LogAppender {$/;"	c	namespace:rainbow	inherits:LogAppender
rainbow::FileLogAppender::FileLogAppender	rainbow/log.cpp	/^FileLogAppender::FileLogAppender(const std::string& name) : m_filename(name) {}$/;"	f	class:rainbow::FileLogAppender	signature:(const std::string& name)
rainbow::FileLogAppender::FileLogAppender	rainbow/log.h	/^    FileLogAppender(const std::string& filename);$/;"	p	class:rainbow::FileLogAppender	access:public	signature:(const std::string& filename)
rainbow::FileLogAppender::log	rainbow/log.cpp	/^void FileLogAppender::log(std::shared_ptr<Logger> logger, LogLevel::Level level,$/;"	f	class:rainbow::FileLogAppender	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
rainbow::FileLogAppender::m_filename	rainbow/log.h	/^    std::string m_filename;$/;"	m	class:rainbow::FileLogAppender	access:private
rainbow::FileLogAppender::m_filestream	rainbow/log.h	/^    std::ofstream m_filestream;$/;"	m	class:rainbow::FileLogAppender	access:private
rainbow::FileLogAppender::override	rainbow/log.h	/^                     LogEvent::ptr event) override;$/;"	m	class:rainbow::FileLogAppender	access:public
rainbow::FileLogAppender::override	rainbow/log.h	/^    std::string toYamlString() override;$/;"	m	class:rainbow::FileLogAppender	access:public
rainbow::FileLogAppender::ptr	rainbow/log.h	/^    typedef std::shared_ptr<FileLogAppender> ptr;$/;"	t	class:rainbow::FileLogAppender	access:public
rainbow::FileLogAppender::reopen	rainbow/log.cpp	/^bool FileLogAppender::reopen() {$/;"	f	class:rainbow::FileLogAppender	signature:()
rainbow::FileLogAppender::reopen	rainbow/log.h	/^    bool reopen();$/;"	p	class:rainbow::FileLogAppender	access:public	signature:()
rainbow::FileLogAppender::toYamlString	rainbow/log.cpp	/^std::string FileLogAppender::toYamlString() {$/;"	f	class:rainbow::FileLogAppender	signature:()
rainbow::FileNameFormatItem	rainbow/log.cpp	/^class FileNameFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::FileNameFormatItem::FileNameFormatItem	rainbow/log.cpp	/^    FileNameFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::FileNameFormatItem	access:public	signature:(const std::string str = ”)
rainbow::GetFiberId	rainbow/util.cpp	/^uint32_t GetFiberId() {$/;"	f	namespace:rainbow	signature:()
rainbow::GetFiberId	rainbow/util.h	/^uint32_t GetFiberId();$/;"	p	namespace:rainbow	signature:()
rainbow::GetThreadId	rainbow/util.cpp	/^pid_t GetThreadId() {$/;"	f	namespace:rainbow	signature:()
rainbow::GetThreadId	rainbow/util.h	/^pid_t GetThreadId();$/;"	p	namespace:rainbow	signature:()
rainbow::LevelFormatItem	rainbow/log.cpp	/^class LevelFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::LevelFormatItem::LevelFormatItem	rainbow/log.cpp	/^    LevelFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::LevelFormatItem	access:public	signature:(const std::string str = ”)
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::list<T>, std::string> {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::map<std::string, T>, std::string> {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::set<T>, std::string> {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::list<T> > {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::map<std::string, T> > {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::set<T> > {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::unordered_map<std::string, T> > {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::unordered_set<T> > {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::string, std::vector<T> > {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::unordered_map<std::string, T>, std::string> {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::unordered_set<T>, std::string> {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/config.h	/^class LexicalCast<std::vector<T>, std::string> {$/;"	c	namespace:rainbow
rainbow::LexicalCast	rainbow/log.cpp	/^class LexicalCast<std::set<LogDefine>, std::string> {$/;"	c	namespace:rainbow	file:
rainbow::LexicalCast	rainbow/log.cpp	/^class LexicalCast<std::string, std::set<LogDefine> > {$/;"	c	namespace:rainbow	file:
rainbow::LexicalCast	tests/test_config.cpp	/^class LexicalCast<Person, std::string> {$/;"	c	namespace:rainbow	file:
rainbow::LexicalCast	tests/test_config.cpp	/^class LexicalCast<std::string, Person> {$/;"	c	namespace:rainbow	file:
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    T operator()(const F& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const F& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::list<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::map<std::string, T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::set<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::string operator()(const std::list<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::list<T>& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::string operator()(const std::map<std::string, T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::map<std::string, T>& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::string operator()(const std::set<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::set<T>& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::string operator()(const std::unordered_map<std::string, T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::unordered_map<std::string, T>& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::string operator()(const std::unordered_set<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::unordered_set<T>& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::string operator()(const std::vector<T>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::vector<T>& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::unordered_map<std::string, T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::unordered_set<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	rainbow/config.h	/^    std::vector<T> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	rainbow/log.cpp	/^    std::set<LogDefine> operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	rainbow/log.cpp	/^    std::string operator()(const std::set<LogDefine>& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::set<LogDefine>& v)
rainbow::LexicalCast::operator ()	tests/test_config.cpp	/^    Person operator()(const std::string& v) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const std::string& v)
rainbow::LexicalCast::operator ()	tests/test_config.cpp	/^    std::string operator()(const Person& p) {$/;"	f	class:rainbow::LexicalCast	access:public	signature:(const Person& p)
rainbow::LineFormatItem	rainbow/log.cpp	/^class LineFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::LineFormatItem::LineFormatItem	rainbow/log.cpp	/^    LineFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::LineFormatItem	access:public	signature:(const std::string str = ”)
rainbow::ListAllMember	rainbow/config.cpp	/^static void ListAllMember(const std::string& prefix, $/;"	f	namespace:rainbow	signature:(const std::string& prefix, const YAML::Node& node, std::list<std::pair<std::string, const YAML::Node> >& output)
rainbow::LogAppender	rainbow/log.h	/^class LogAppender {$/;"	c	namespace:rainbow
rainbow::LogAppender::LogAppender	rainbow/log.cpp	/^LogAppender::LogAppender() {$/;"	f	class:rainbow::LogAppender	signature:()
rainbow::LogAppender::LogAppender	rainbow/log.h	/^    LogAppender();$/;"	p	class:rainbow::LogAppender	access:public	signature:()
rainbow::LogAppender::getFormatter	rainbow/log.h	/^    LogFormatter::ptr getFormatter() const { return m_formatter; }$/;"	f	class:rainbow::LogAppender	access:public	signature:() const
rainbow::LogAppender::getLevel	rainbow/log.h	/^    LogLevel::Level getLevel() { return m_level; }$/;"	f	class:rainbow::LogAppender	access:public	signature:()
rainbow::LogAppender::log	rainbow/log.h	/^    virtual void log(std::shared_ptr<Logger> logger, LogLevel::Level level,$/;"	p	class:rainbow::LogAppender	access:public	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
rainbow::LogAppender::m_formatter	rainbow/log.h	/^    LogFormatter::ptr m_formatter;$/;"	m	class:rainbow::LogAppender	access:protected
rainbow::LogAppender::m_hasFormatter	rainbow/log.h	/^    bool m_hasFormatter = false;$/;"	m	class:rainbow::LogAppender	access:protected
rainbow::LogAppender::m_level	rainbow/log.h	/^    LogLevel::Level m_level;$/;"	m	class:rainbow::LogAppender	access:protected
rainbow::LogAppender::ptr	rainbow/log.h	/^    typedef std::shared_ptr<LogAppender> ptr;$/;"	t	class:rainbow::LogAppender	access:public
rainbow::LogAppender::setFormatter	rainbow/log.cpp	/^void LogAppender::setFormatter(LogFormatter::ptr val) {$/;"	f	class:rainbow::LogAppender	signature:(LogFormatter::ptr val)
rainbow::LogAppender::setFormatter	rainbow/log.h	/^    void setFormatter(LogFormatter::ptr val);$/;"	p	class:rainbow::LogAppender	access:public	signature:(LogFormatter::ptr val)
rainbow::LogAppender::setLevel	rainbow/log.cpp	/^void LogAppender::setLevel(const LogLevel::Level& level) {$/;"	f	class:rainbow::LogAppender	signature:(const LogLevel::Level& level)
rainbow::LogAppender::setLevel	rainbow/log.h	/^    void setLevel(const LogLevel::Level& level);$/;"	p	class:rainbow::LogAppender	access:public	signature:(const LogLevel::Level& level)
rainbow::LogAppender::toYamlString	rainbow/log.h	/^    virtual std::string toYamlString() = 0;$/;"	p	class:rainbow::LogAppender	access:public	signature:()
rainbow::LogAppender::~LogAppender	rainbow/log.h	/^    virtual ~LogAppender() {}$/;"	f	class:rainbow::LogAppender	access:public	signature:()
rainbow::LogAppenderDefine	rainbow/log.cpp	/^struct LogAppenderDefine {$/;"	s	namespace:rainbow	file:
rainbow::LogAppenderDefine::file	rainbow/log.cpp	/^    std::string file;$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
rainbow::LogAppenderDefine::formatter	rainbow/log.cpp	/^    std::string formatter;$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
rainbow::LogAppenderDefine::level	rainbow/log.cpp	/^    LogLevel::Level level = LogLevel::UNKNOW;$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
rainbow::LogAppenderDefine::operator ==	rainbow/log.cpp	/^    bool operator==(const LogAppenderDefine& oth) const {$/;"	f	struct:rainbow::LogAppenderDefine	access:public	signature:(const LogAppenderDefine& oth) const
rainbow::LogAppenderDefine::type	rainbow/log.cpp	/^    int type = 0; \/\/ 1 File, 2 Stdout$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
rainbow::LogDefine	rainbow/log.cpp	/^struct LogDefine {$/;"	s	namespace:rainbow	file:
rainbow::LogDefine::appenders	rainbow/log.cpp	/^    std::vector<LogAppenderDefine> appenders;$/;"	m	struct:rainbow::LogDefine	file:	access:public
rainbow::LogDefine::formatter	rainbow/log.cpp	/^    std::string formatter;$/;"	m	struct:rainbow::LogDefine	file:	access:public
rainbow::LogDefine::level	rainbow/log.cpp	/^    LogLevel::Level level = LogLevel::UNKNOW;$/;"	m	struct:rainbow::LogDefine	file:	access:public
rainbow::LogDefine::name	rainbow/log.cpp	/^    std::string name;$/;"	m	struct:rainbow::LogDefine	file:	access:public
rainbow::LogDefine::operator <	rainbow/log.cpp	/^    bool operator<(const LogDefine& oth) const {$/;"	f	struct:rainbow::LogDefine	access:public	signature:(const LogDefine& oth) const
rainbow::LogDefine::operator ==	rainbow/log.cpp	/^    bool operator==(const LogDefine& oth) const {$/;"	f	struct:rainbow::LogDefine	access:public	signature:(const LogDefine& oth) const
rainbow::LogEvent	rainbow/log.h	/^class LogEvent {$/;"	c	namespace:rainbow
rainbow::LogEvent::LogEvent	rainbow/log.cpp	/^LogEvent::LogEvent(const std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, $/;"	f	class:rainbow::LogEvent	signature:(const std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, int32_t line, uint32_t elapse, uint32_t thread_id, uint32_t fiber_id, uint64_t time)
rainbow::LogEvent::LogEvent	rainbow/log.h	/^    LogEvent(std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, $/;"	p	class:rainbow::LogEvent	access:public	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, const char* file, int32_t m_line, uint32_t elapse, uint32_t thread_id, uint32_t fiber_id, uint64_t time)
rainbow::LogEvent::format	rainbow/log.cpp	/^void LogEvent::format(const char* fmt, ...) {$/;"	f	class:rainbow::LogEvent	signature:(const char* fmt, ...)
rainbow::LogEvent::format	rainbow/log.cpp	/^void LogEvent::format(const char* fmt, va_list al) {$/;"	f	class:rainbow::LogEvent	signature:(const char* fmt, va_list al)
rainbow::LogEvent::format	rainbow/log.h	/^    void format(const char* fmt, ...);$/;"	p	class:rainbow::LogEvent	access:public	signature:(const char* fmt, ...)
rainbow::LogEvent::format	rainbow/log.h	/^    void format(const char* fmt, va_list al);$/;"	p	class:rainbow::LogEvent	access:public	signature:(const char* fmt, va_list al)
rainbow::LogEvent::getContent	rainbow/log.h	/^    std::string getContent() const { return m_ss.str(); }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getElapse	rainbow/log.h	/^    uint32_t getElapse() const { return m_elapse; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getFiberId	rainbow/log.h	/^    uint32_t getFiberId() const { return m_fiberId; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getFileName	rainbow/log.h	/^    const char* getFileName() const { return m_file; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getLevel	rainbow/log.h	/^    LogLevel::Level getLevel() const { return m_level; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getLine	rainbow/log.h	/^    int32_t getLine() const { return m_line; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getLogger	rainbow/log.h	/^    std::shared_ptr<Logger> getLogger() const {  return m_logger; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getSS	rainbow/log.h	/^    std::stringstream& getSS() { return m_ss; }$/;"	f	class:rainbow::LogEvent	access:public	signature:()
rainbow::LogEvent::getThreadId	rainbow/log.h	/^    uint32_t getThreadId() const { return m_threadId; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::getTime	rainbow/log.h	/^    uint32_t getTime() const { return m_time; }$/;"	f	class:rainbow::LogEvent	access:public	signature:() const
rainbow::LogEvent::m_elapse	rainbow/log.h	/^    uint32_t m_elapse = 0;         \/\/ Á®ãÂ∫èÂêØÂä®ÂºÄÂßãÂà∞Áé∞Âú®ÁöÑÊØ´ÁßíÊï∞$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_fiberId	rainbow/log.h	/^    uint32_t m_fiberId = 0;        \/\/ ÂçèÁ®ãid$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_file	rainbow/log.h	/^    const char* m_file = nullptr;  \/\/ Êñá‰ª∂Âêç$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_level	rainbow/log.h	/^    LogLevel::Level m_level;            \/\/ ËØ•Êó•Âøó‰∫ã‰ª∂ÁöÑÁ∫ßÂà´$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_line	rainbow/log.h	/^    int32_t m_line = 0;            \/\/ Ë°åÂè∑$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_logger	rainbow/log.h	/^    std::shared_ptr<Logger> m_logger;   \/\/ ÊåáÂêë Logger Á±ªÁöÑÊåáÈíà$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_ss	rainbow/log.h	/^    std::stringstream m_ss;             \/\/ Êó•ÂøóÊµÅ$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_threadId	rainbow/log.h	/^    uint32_t m_threadId = 0;       \/\/ Á∫øÁ®ãid$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::m_time	rainbow/log.h	/^    uint64_t m_time;               \/\/ Êó∂Èó¥Êà≥$/;"	m	class:rainbow::LogEvent	access:private
rainbow::LogEvent::ptr	rainbow/log.h	/^    typedef std::shared_ptr<LogEvent> ptr;$/;"	t	class:rainbow::LogEvent	access:public
rainbow::LogEvent::~LogEvent	rainbow/log.h	/^    ~LogEvent() {}$/;"	f	class:rainbow::LogEvent	access:public	signature:()
rainbow::LogEventWrap	rainbow/log.h	/^class LogEventWrap {$/;"	c	namespace:rainbow
rainbow::LogEventWrap::LogEventWrap	rainbow/log.cpp	/^LogEventWrap::LogEventWrap(LogEvent::ptr e) : m_event(e) {$/;"	f	class:rainbow::LogEventWrap	signature:(LogEvent::ptr e)
rainbow::LogEventWrap::LogEventWrap	rainbow/log.h	/^    LogEventWrap(LogEvent::ptr e);$/;"	p	class:rainbow::LogEventWrap	access:public	signature:(LogEvent::ptr e)
rainbow::LogEventWrap::getEvent	rainbow/log.h	/^    LogEvent::ptr getEvent() const { return m_event; }$/;"	f	class:rainbow::LogEventWrap	access:public	signature:() const
rainbow::LogEventWrap::getSS	rainbow/log.cpp	/^std::stringstream& LogEventWrap::getSS() {$/;"	f	class:rainbow::LogEventWrap	signature:()
rainbow::LogEventWrap::getSS	rainbow/log.h	/^    std::stringstream& getSS();$/;"	p	class:rainbow::LogEventWrap	access:public	signature:()
rainbow::LogEventWrap::m_event	rainbow/log.h	/^    LogEvent::ptr m_event;$/;"	m	class:rainbow::LogEventWrap	access:private
rainbow::LogEventWrap::~LogEventWrap	rainbow/log.cpp	/^LogEventWrap::~LogEventWrap() {$/;"	f	class:rainbow::LogEventWrap	signature:()
rainbow::LogEventWrap::~LogEventWrap	rainbow/log.h	/^    ~LogEventWrap();$/;"	p	class:rainbow::LogEventWrap	access:public	signature:()
rainbow::LogFormatter	rainbow/log.h	/^class LogFormatter {$/;"	c	namespace:rainbow
rainbow::LogFormatter::FormatItem	rainbow/log.h	/^    class FormatItem {$/;"	c	class:rainbow::LogFormatter	access:public
rainbow::LogFormatter::FormatItem::FormatItem	rainbow/log.h	/^        FormatItem(const std::string& fmt = ""){};$/;"	f	class:rainbow::LogFormatter::FormatItem	access:public	signature:(const std::string& fmt = ”)
rainbow::LogFormatter::FormatItem::format	rainbow/log.cpp	/^void LogFormatter::FormatItem::format(std::ostream& os,$/;"	f	class:rainbow::LogFormatter::FormatItem	signature:(std::ostream& os, std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
rainbow::LogFormatter::FormatItem::format	rainbow/log.h	/^        virtual void format(std::ostream& os, std::shared_ptr<Logger> logger,$/;"	p	class:rainbow::LogFormatter::FormatItem	access:public	signature:(std::ostream& os, std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
rainbow::LogFormatter::FormatItem::ptr	rainbow/log.h	/^        typedef std::shared_ptr<FormatItem> ptr;$/;"	t	class:rainbow::LogFormatter::FormatItem	access:public
rainbow::LogFormatter::FormatItem::~FormatItem	rainbow/log.h	/^        virtual ~FormatItem() {}$/;"	f	class:rainbow::LogFormatter::FormatItem	access:public	signature:()
rainbow::LogFormatter::LogFormatter	rainbow/log.cpp	/^LogFormatter::LogFormatter(const std::string& pattern) : m_pattern(pattern) {$/;"	f	class:rainbow::LogFormatter	signature:(const std::string& pattern)
rainbow::LogFormatter::LogFormatter	rainbow/log.h	/^    LogFormatter(const std::string& pattern);$/;"	p	class:rainbow::LogFormatter	access:public	signature:(const std::string& pattern)
rainbow::LogFormatter::format	rainbow/log.cpp	/^std::string LogFormatter::format(std::shared_ptr<Logger> logger,$/;"	f	class:rainbow::LogFormatter	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
rainbow::LogFormatter::format	rainbow/log.h	/^    std::ostream& format(std::ostream& ofs, std::shared_ptr<Logger> ptr, LogLevel::Level level, LogEvent::ptr event);$/;"	p	class:rainbow::LogFormatter	access:public	signature:(std::ostream& ofs, std::shared_ptr<Logger> ptr, LogLevel::Level level, LogEvent::ptr event)
rainbow::LogFormatter::format	rainbow/log.h	/^    std::string format(std::shared_ptr<Logger> ptr, LogLevel::Level level,$/;"	p	class:rainbow::LogFormatter	access:public	signature:(std::shared_ptr<Logger> ptr, LogLevel::Level level, LogEvent::ptr event)
rainbow::LogFormatter::getPattern	rainbow/log.h	/^    const std::string getPattern() const { return m_pattern; }$/;"	f	class:rainbow::LogFormatter	access:public	signature:() const
rainbow::LogFormatter::init	rainbow/log.cpp	/^void LogFormatter::init() {$/;"	f	class:rainbow::LogFormatter	signature:()
rainbow::LogFormatter::init	rainbow/log.h	/^    void init();$/;"	p	class:rainbow::LogFormatter	access:public	signature:()
rainbow::LogFormatter::isError	rainbow/log.h	/^    bool isError() const {$/;"	f	class:rainbow::LogFormatter	access:public	signature:() const
rainbow::LogFormatter::m_error	rainbow/log.h	/^    bool m_error = false;$/;"	m	class:rainbow::LogFormatter	access:private
rainbow::LogFormatter::m_items	rainbow/log.h	/^    std::vector<FormatItem::ptr> m_items;$/;"	m	class:rainbow::LogFormatter	access:private
rainbow::LogFormatter::m_pattern	rainbow/log.h	/^    std::string m_pattern;$/;"	m	class:rainbow::LogFormatter	access:private
rainbow::LogFormatter::ptr	rainbow/log.h	/^    typedef std::shared_ptr<LogFormatter> ptr;$/;"	t	class:rainbow::LogFormatter	access:public
rainbow::LogIniter	rainbow/log.cpp	/^struct LogIniter {$/;"	s	namespace:rainbow	file:
rainbow::LogIniter::LogIniter	rainbow/log.cpp	/^    LogIniter() {$/;"	f	struct:rainbow::LogIniter	access:public	signature:()
rainbow::LogLevel	rainbow/log.h	/^class LogLevel {$/;"	c	namespace:rainbow
rainbow::LogLevel::DEBUG	rainbow/log.h	/^        DEBUG = 1,$/;"	e	enum:rainbow::LogLevel::Level
rainbow::LogLevel::ERROR	rainbow/log.h	/^        ERROR = 4,$/;"	e	enum:rainbow::LogLevel::Level
rainbow::LogLevel::FATAL	rainbow/log.h	/^        FATAL = 5$/;"	e	enum:rainbow::LogLevel::Level
rainbow::LogLevel::FromString	rainbow/log.cpp	/^LogLevel::Level LogLevel::FromString(const std::string& str) {$/;"	f	class:rainbow::LogLevel	signature:(const std::string& str)
rainbow::LogLevel::FromString	rainbow/log.h	/^    static LogLevel::Level FromString(const std::string& str);$/;"	p	class:rainbow::LogLevel	access:public	signature:(const std::string& str)
rainbow::LogLevel::INFO	rainbow/log.h	/^        INFO = 2,$/;"	e	enum:rainbow::LogLevel::Level
rainbow::LogLevel::Level	rainbow/log.h	/^    enum Level {$/;"	g	class:rainbow::LogLevel	access:public
rainbow::LogLevel::ToString	rainbow/log.cpp	/^const char* LogLevel::ToString(LogLevel::Level level) {$/;"	f	class:rainbow::LogLevel	signature:(LogLevel::Level level)
rainbow::LogLevel::ToString	rainbow/log.h	/^    static const char* ToString(LogLevel::Level level);$/;"	p	class:rainbow::LogLevel	access:public	signature:(LogLevel::Level level)
rainbow::LogLevel::UNKNOW	rainbow/log.h	/^        UNKNOW = 0,$/;"	e	enum:rainbow::LogLevel::Level
rainbow::LogLevel::WARN	rainbow/log.h	/^        WARN = 3,$/;"	e	enum:rainbow::LogLevel::Level
rainbow::Logger	rainbow/log.h	/^class Logger : public std::enable_shared_from_this<Logger> {$/;"	c	namespace:rainbow	inherits:std::enable_shared_from_this
rainbow::Logger::Logger	rainbow/log.cpp	/^Logger::Logger(const std::string& name)$/;"	f	class:rainbow::Logger	signature:(const std::string& name)
rainbow::Logger::Logger	rainbow/log.h	/^    Logger(const std::string& name = "root");$/;"	p	class:rainbow::Logger	access:public	signature:(const std::string& name = ”)
rainbow::Logger::addAppender	rainbow/log.cpp	/^void Logger::addAppender(LogAppender::ptr appender) {$/;"	f	class:rainbow::Logger	signature:(LogAppender::ptr appender)
rainbow::Logger::addAppender	rainbow/log.h	/^    void addAppender(LogAppender::ptr appender);$/;"	p	class:rainbow::Logger	access:public	signature:(LogAppender::ptr appender)
rainbow::Logger::clearAppenders	rainbow/log.cpp	/^void Logger::clearAppenders() {$/;"	f	class:rainbow::Logger	signature:()
rainbow::Logger::clearAppenders	rainbow/log.h	/^    void clearAppenders();$/;"	p	class:rainbow::Logger	access:public	signature:()
rainbow::Logger::debug	rainbow/log.cpp	/^void Logger::debug(LogEvent::ptr event) { log(LogLevel::DEBUG, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
rainbow::Logger::debug	rainbow/log.h	/^    void debug(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
rainbow::Logger::delAppender	rainbow/log.cpp	/^void Logger::delAppender(LogAppender::ptr appender) {$/;"	f	class:rainbow::Logger	signature:(LogAppender::ptr appender)
rainbow::Logger::delAppender	rainbow/log.h	/^    void delAppender(LogAppender::ptr appender);$/;"	p	class:rainbow::Logger	access:public	signature:(LogAppender::ptr appender)
rainbow::Logger::error	rainbow/log.cpp	/^void Logger::error(LogEvent::ptr event) { log(LogLevel::ERROR, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
rainbow::Logger::error	rainbow/log.h	/^    void error(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
rainbow::Logger::fatal	rainbow/log.cpp	/^void Logger::fatal(LogEvent::ptr event) { log(LogLevel::FATAL, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
rainbow::Logger::fatal	rainbow/log.h	/^    void fatal(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
rainbow::Logger::getFormatter	rainbow/log.cpp	/^LogFormatter::ptr Logger::getFormatter() const {$/;"	f	class:rainbow::Logger	signature:() const
rainbow::Logger::getFormatter	rainbow/log.h	/^    LogFormatter::ptr getFormatter() const;$/;"	p	class:rainbow::Logger	access:public	signature:() const
rainbow::Logger::getLevel	rainbow/log.h	/^    LogLevel::Level getLevel() const { return m_level; }$/;"	f	class:rainbow::Logger	access:public	signature:() const
rainbow::Logger::getName	rainbow/log.h	/^    const std::string getName() const { return this->m_name; }$/;"	f	class:rainbow::Logger	access:public	signature:() const
rainbow::Logger::info	rainbow/log.cpp	/^void Logger::info(LogEvent::ptr event) { log(LogLevel::INFO, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
rainbow::Logger::info	rainbow/log.h	/^    void info(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
rainbow::Logger::log	rainbow/log.cpp	/^void Logger::log(LogLevel::Level level, LogEvent::ptr event) {$/;"	f	class:rainbow::Logger	signature:(LogLevel::Level level, LogEvent::ptr event)
rainbow::Logger::log	rainbow/log.h	/^    void log(LogLevel::Level level, LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogLevel::Level level, LogEvent::ptr event)
rainbow::Logger::m_appenders	rainbow/log.h	/^    std::list<LogAppender::ptr> m_appenders;  \/\/ AppenderÈõÜÂêà$/;"	m	class:rainbow::Logger	access:private
rainbow::Logger::m_formatter	rainbow/log.h	/^    LogFormatter::ptr m_formatter;            \/\/ Êó•ÂøóÊ†ºÂºè$/;"	m	class:rainbow::Logger	access:private
rainbow::Logger::m_level	rainbow/log.h	/^    LogLevel::Level m_level;  \/\/ Êó•ÂøóÂô®ÁöÑÁ∫ßÂà´$/;"	m	class:rainbow::Logger	access:private
rainbow::Logger::m_name	rainbow/log.h	/^    std::string m_name;       \/\/ Êó•ÂøóÂêçÁß∞$/;"	m	class:rainbow::Logger	access:private
rainbow::Logger::m_root	rainbow/log.h	/^    Logger::ptr m_root;$/;"	m	class:rainbow::Logger	access:private
rainbow::Logger::ptr	rainbow/log.h	/^    typedef std::shared_ptr<Logger> ptr;$/;"	t	class:rainbow::Logger	access:public
rainbow::Logger::setAppender	rainbow/log.h	/^    void setAppender(LogLevel::Level val) { m_level = val; }$/;"	f	class:rainbow::Logger	access:public	signature:(LogLevel::Level val)
rainbow::Logger::setFormatter	rainbow/log.cpp	/^void Logger::setFormatter(LogFormatter::ptr val) {$/;"	f	class:rainbow::Logger	signature:(LogFormatter::ptr val)
rainbow::Logger::setFormatter	rainbow/log.cpp	/^void Logger::setFormatter(const std::string& val) {$/;"	f	class:rainbow::Logger	signature:(const std::string& val)
rainbow::Logger::setFormatter	rainbow/log.h	/^    void setFormatter(LogFormatter::ptr val);$/;"	p	class:rainbow::Logger	access:public	signature:(LogFormatter::ptr val)
rainbow::Logger::setFormatter	rainbow/log.h	/^    void setFormatter(const std::string& val);$/;"	p	class:rainbow::Logger	access:public	signature:(const std::string& val)
rainbow::Logger::setLevel	rainbow/log.h	/^    void setLevel(LogLevel::Level level) { m_level = level; }$/;"	f	class:rainbow::Logger	access:public	signature:(LogLevel::Level level)
rainbow::Logger::toYamlString	rainbow/log.cpp	/^std::string Logger::toYamlString() {$/;"	f	class:rainbow::Logger	signature:()
rainbow::Logger::toYamlString	rainbow/log.h	/^    std::string toYamlString();$/;"	p	class:rainbow::Logger	access:public	signature:()
rainbow::Logger::warn	rainbow/log.cpp	/^void Logger::warn(LogEvent::ptr event) { log(LogLevel::WARN, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
rainbow::Logger::warn	rainbow/log.h	/^    void warn(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
rainbow::LoggerManager	rainbow/log.h	/^class LoggerManager {$/;"	c	namespace:rainbow
rainbow::LoggerManager::LoggerManager	rainbow/log.cpp	/^LoggerManager::LoggerManager() {$/;"	f	class:rainbow::LoggerManager	signature:()
rainbow::LoggerManager::LoggerManager	rainbow/log.h	/^    LoggerManager();$/;"	p	class:rainbow::LoggerManager	access:public	signature:()
rainbow::LoggerManager::getLogger	rainbow/log.cpp	/^Logger::ptr LoggerManager::getLogger(const std::string& name) {$/;"	f	class:rainbow::LoggerManager	signature:(const std::string& name)
rainbow::LoggerManager::getLogger	rainbow/log.h	/^    Logger::ptr getLogger(const std::string& name);$/;"	p	class:rainbow::LoggerManager	access:public	signature:(const std::string& name)
rainbow::LoggerManager::getRoot	rainbow/log.h	/^    Logger::ptr getRoot() const { return m_root; }$/;"	f	class:rainbow::LoggerManager	access:public	signature:() const
rainbow::LoggerManager::init	rainbow/log.cpp	/^void LoggerManager::init() {$/;"	f	class:rainbow::LoggerManager	signature:()
rainbow::LoggerManager::init	rainbow/log.h	/^    void init();$/;"	p	class:rainbow::LoggerManager	access:public	signature:()
rainbow::LoggerManager::m_loggers	rainbow/log.h	/^    std::map<std::string, Logger::ptr> m_loggers;$/;"	m	class:rainbow::LoggerManager	access:private
rainbow::LoggerManager::m_root	rainbow/log.h	/^    Logger::ptr m_root;$/;"	m	class:rainbow::LoggerManager	access:private
rainbow::LoggerManager::toYamlString	rainbow/log.cpp	/^std::string LoggerManager::toYamlString() {$/;"	f	class:rainbow::LoggerManager	signature:()
rainbow::LoggerManager::toYamlString	rainbow/log.h	/^    std::string toYamlString();$/;"	p	class:rainbow::LoggerManager	access:public	signature:()
rainbow::LoggerMgr	rainbow/log.h	/^typedef rainbow::Singleton<LoggerManager> LoggerMgr;$/;"	t	namespace:rainbow
rainbow::MessageFormatItem	rainbow/log.cpp	/^class MessageFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::MessageFormatItem::MessageFormatItem	rainbow/log.cpp	/^    MessageFormatItem(const std::string& str = "") {}$/;"	f	class:rainbow::MessageFormatItem	access:public	signature:(const std::string& str = ”)
rainbow::NameFormatItem	rainbow/log.cpp	/^class NameFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::NameFormatItem::NameFormatItem	rainbow/log.cpp	/^    NameFormatItem(const std::string& str = "") {}$/;"	f	class:rainbow::NameFormatItem	access:public	signature:(const std::string& str = ”)
rainbow::NewLineFormatItem	rainbow/log.cpp	/^class NewLineFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::NewLineFormatItem::NewLineFormatItem	rainbow/log.cpp	/^    NewLineFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::NewLineFormatItem	access:public	signature:(const std::string str = ”)
rainbow::RWMutex	rainbow/thread.h	/^class RWMutex {$/;"	c	namespace:rainbow
rainbow::RWMutex::RWMutex	rainbow/thread.h	/^    RWMutex() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
rainbow::RWMutex::ReadLock	rainbow/thread.h	/^    typedef ReadScopedLockImpl<RWMutex> ReadLock;$/;"	t	class:rainbow::RWMutex	access:public
rainbow::RWMutex::WriteLock	rainbow/thread.h	/^    typedef WriteScopedLockImpl<RWMutex> WriteLock;$/;"	t	class:rainbow::RWMutex	access:public
rainbow::RWMutex::m_lock	rainbow/thread.h	/^    pthread_rwlock_t m_lock;$/;"	m	class:rainbow::RWMutex	access:private
rainbow::RWMutex::rdlock	rainbow/thread.h	/^    void rdlock() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
rainbow::RWMutex::unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
rainbow::RWMutex::wrlock	rainbow/thread.h	/^    void wrlock() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
rainbow::RWMutex::~RWMutex	rainbow/thread.h	/^    ~RWMutex() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
rainbow::ReadScopedLockImpl	rainbow/thread.h	/^struct ReadScopedLockImpl {$/;"	s	namespace:rainbow
rainbow::ReadScopedLockImpl::ReadScopedLockImpl	rainbow/thread.h	/^    ReadScopedLockImpl(T& mutex)$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:(T& mutex)
rainbow::ReadScopedLockImpl::lock	rainbow/thread.h	/^    void lock() {$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:()
rainbow::ReadScopedLockImpl::m_locked	rainbow/thread.h	/^    bool m_locked;$/;"	m	struct:rainbow::ReadScopedLockImpl	access:private
rainbow::ReadScopedLockImpl::m_mutex	rainbow/thread.h	/^    T& m_mutex;$/;"	m	struct:rainbow::ReadScopedLockImpl	access:private
rainbow::ReadScopedLockImpl::unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:()
rainbow::ReadScopedLockImpl::~ReadScopedLockImpl	rainbow/thread.h	/^    ~ReadScopedLockImpl() {$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:()
rainbow::ScopedLockImpl	rainbow/thread.h	/^struct ScopedLockImpl {$/;"	s	namespace:rainbow
rainbow::ScopedLockImpl::ScopedLockImpl	rainbow/thread.h	/^    ScopedLockImpl(T& mutex)$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:(T& mutex)
rainbow::ScopedLockImpl::lock	rainbow/thread.h	/^    void lock() {$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:()
rainbow::ScopedLockImpl::m_locked	rainbow/thread.h	/^    bool m_locked;$/;"	m	struct:rainbow::ScopedLockImpl	access:private
rainbow::ScopedLockImpl::m_mutex	rainbow/thread.h	/^    T& m_mutex;$/;"	m	struct:rainbow::ScopedLockImpl	access:private
rainbow::ScopedLockImpl::unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:()
rainbow::ScopedLockImpl::~ScopedLockImpl	rainbow/thread.h	/^    ~ScopedLockImpl() {$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:()
rainbow::Semaphore	rainbow/thread.h	/^class Semaphore {$/;"	c	namespace:rainbow
rainbow::Semaphore::Semaphore	rainbow/thread.cpp	/^Semaphore::Semaphore(uint32_t count) {$/;"	f	class:rainbow::Semaphore	signature:(uint32_t count)
rainbow::Semaphore::Semaphore	rainbow/thread.h	/^    Semaphore(const Semaphore&&) = delete;$/;"	p	class:rainbow::Semaphore	access:private	signature:(const Semaphore&&)
rainbow::Semaphore::Semaphore	rainbow/thread.h	/^    Semaphore(const Semaphore&) = delete;$/;"	p	class:rainbow::Semaphore	access:private	signature:(const Semaphore&)
rainbow::Semaphore::Semaphore	rainbow/thread.h	/^    Semaphore(uint32_t count = 0);$/;"	p	class:rainbow::Semaphore	access:public	signature:(uint32_t count = 0)
rainbow::Semaphore::m_semaphore	rainbow/thread.h	/^    sem_t m_semaphore;$/;"	m	class:rainbow::Semaphore	access:private
rainbow::Semaphore::notify	rainbow/thread.cpp	/^void Semaphore::notify() {$/;"	f	class:rainbow::Semaphore	signature:()
rainbow::Semaphore::notify	rainbow/thread.h	/^    void notify();$/;"	p	class:rainbow::Semaphore	access:public	signature:()
rainbow::Semaphore::operator =	rainbow/thread.h	/^    Semaphore& operator=(const Semaphore&) = delete;$/;"	p	class:rainbow::Semaphore	access:private	signature:(const Semaphore&)
rainbow::Semaphore::wait	rainbow/thread.cpp	/^void Semaphore::wait() {$/;"	f	class:rainbow::Semaphore	signature:()
rainbow::Semaphore::wait	rainbow/thread.h	/^    void wait();$/;"	p	class:rainbow::Semaphore	access:public	signature:()
rainbow::Semaphore::~Semaphore	rainbow/thread.cpp	/^Semaphore::~Semaphore() {$/;"	f	class:rainbow::Semaphore	signature:()
rainbow::Semaphore::~Semaphore	rainbow/thread.h	/^    ~Semaphore();$/;"	p	class:rainbow::Semaphore	access:public	signature:()
rainbow::Singleton	rainbow/singleton.h	/^class Singleton {$/;"	c	namespace:rainbow
rainbow::Singleton::GetInstance	rainbow/singleton.h	/^    static T* GetInstance() {$/;"	f	class:rainbow::Singleton	access:public	signature:()
rainbow::Singletonptr	rainbow/singleton.h	/^class Singletonptr {$/;"	c	namespace:rainbow
rainbow::Singletonptr::GetInstance	rainbow/singleton.h	/^    static std::shared_ptr<T> GetInstance() {$/;"	f	class:rainbow::Singletonptr	access:public	signature:()
rainbow::StdoutLogAppender	rainbow/log.h	/^class StdoutLogAppender : public LogAppender {$/;"	c	namespace:rainbow	inherits:LogAppender
rainbow::StdoutLogAppender::log	rainbow/log.cpp	/^void StdoutLogAppender::log(std::shared_ptr<Logger> logger,$/;"	f	class:rainbow::StdoutLogAppender	signature:(std::shared_ptr<Logger> logger, LogLevel::Level level, LogEvent::ptr event)
rainbow::StdoutLogAppender::override	rainbow/log.h	/^                     LogEvent::ptr event) override;$/;"	m	class:rainbow::StdoutLogAppender	access:public
rainbow::StdoutLogAppender::override	rainbow/log.h	/^    std::string toYamlString() override;$/;"	m	class:rainbow::StdoutLogAppender	access:public
rainbow::StdoutLogAppender::ptr	rainbow/log.h	/^    typedef std::shared_ptr<StdoutLogAppender> ptr;$/;"	t	class:rainbow::StdoutLogAppender	access:public
rainbow::StdoutLogAppender::toYamlString	rainbow/log.cpp	/^std::string StdoutLogAppender::toYamlString() {$/;"	f	class:rainbow::StdoutLogAppender	signature:()
rainbow::StringFormatItem	rainbow/log.cpp	/^class StringFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::StringFormatItem::StringFormatItem	rainbow/log.cpp	/^    StringFormatItem(const std::string& str) : m_string(str) {}$/;"	f	class:rainbow::StringFormatItem	access:public	signature:(const std::string& str)
rainbow::StringFormatItem::getString	rainbow/log.cpp	/^    std::string getString() const { return m_string; }$/;"	f	class:rainbow::StringFormatItem	access:public	signature:() const
rainbow::StringFormatItem::m_string	rainbow/log.cpp	/^    std::string m_string;$/;"	m	class:rainbow::StringFormatItem	file:	access:private
rainbow::TabFormatItem	rainbow/log.cpp	/^class TabFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::TabFormatItem::TabFormatItem	rainbow/log.cpp	/^     TabFormatItem(const std::string& str = "") {}$/;"	f	class:rainbow::TabFormatItem	access:public	signature:(const std::string& str = ”)
rainbow::Thread	rainbow/thread.h	/^class Thread {$/;"	c	namespace:rainbow
rainbow::Thread::GetName	rainbow/thread.cpp	/^const std::string& Thread::GetName() {$/;"	f	class:rainbow::Thread	signature:()
rainbow::Thread::GetName	rainbow/thread.h	/^    static const std::string& GetName();$/;"	p	class:rainbow::Thread	access:public	signature:()
rainbow::Thread::GetThis	rainbow/thread.cpp	/^Thread* Thread::GetThis() {$/;"	f	class:rainbow::Thread	signature:()
rainbow::Thread::GetThis	rainbow/thread.h	/^    static Thread* GetThis();$/;"	p	class:rainbow::Thread	access:public	signature:()
rainbow::Thread::SetName	rainbow/thread.cpp	/^void Thread::SetName(const std::string& name) {$/;"	f	class:rainbow::Thread	signature:(const std::string& name)
rainbow::Thread::SetName	rainbow/thread.h	/^    static void SetName(const std::string& name);$/;"	p	class:rainbow::Thread	access:public	signature:(const std::string& name)
rainbow::Thread::Thread	rainbow/thread.cpp	/^Thread::Thread(std::function<void()> cb, const std::string& name) $/;"	f	class:rainbow::Thread	signature:(std::function<void()> cb, const std::string& name)
rainbow::Thread::Thread	rainbow/thread.h	/^    Thread(const Thread&&) = delete;$/;"	p	class:rainbow::Thread	access:private	signature:(const Thread&&)
rainbow::Thread::Thread	rainbow/thread.h	/^    Thread(const Thread&) = delete;$/;"	p	class:rainbow::Thread	access:private	signature:(const Thread&)
rainbow::Thread::Thread	rainbow/thread.h	/^    Thread(std::function<void()> cb, const std::string& name);$/;"	p	class:rainbow::Thread	access:public	signature:(std::function<void()> cb, const std::string& name)
rainbow::Thread::getId	rainbow/thread.h	/^    pid_t getId() const { return m_id; }$/;"	f	class:rainbow::Thread	access:public	signature:() const
rainbow::Thread::getName	rainbow/thread.h	/^    const std::string& getName() const { return m_name; }$/;"	f	class:rainbow::Thread	access:public	signature:() const
rainbow::Thread::join	rainbow/thread.cpp	/^void Thread::join() {$/;"	f	class:rainbow::Thread	signature:()
rainbow::Thread::join	rainbow/thread.h	/^    void join();$/;"	p	class:rainbow::Thread	access:public	signature:()
rainbow::Thread::m_cb	rainbow/thread.h	/^    std::function<void()> m_cb;$/;"	m	class:rainbow::Thread	access:private
rainbow::Thread::m_id	rainbow/thread.h	/^    pid_t m_id;$/;"	m	class:rainbow::Thread	access:private
rainbow::Thread::m_name	rainbow/thread.h	/^    std::string m_name;$/;"	m	class:rainbow::Thread	access:private
rainbow::Thread::m_semaphore	rainbow/thread.h	/^    Semaphore m_semaphore;$/;"	m	class:rainbow::Thread	access:private
rainbow::Thread::m_thread	rainbow/thread.h	/^    pthread_t m_thread;$/;"	m	class:rainbow::Thread	access:private
rainbow::Thread::operator =	rainbow/thread.h	/^    Thread& operator=(const Thread&) = delete;$/;"	p	class:rainbow::Thread	access:private	signature:(const Thread&)
rainbow::Thread::ptr	rainbow/thread.h	/^    typedef std::shared_ptr<Thread> ptr;$/;"	t	class:rainbow::Thread	access:public
rainbow::Thread::run	rainbow/thread.cpp	/^void* Thread::run(void* arg) {$/;"	f	class:rainbow::Thread	signature:(void* arg)
rainbow::Thread::run	rainbow/thread.h	/^    static void* run(void* arg);$/;"	p	class:rainbow::Thread	access:private	signature:(void* arg)
rainbow::Thread::~Thread	rainbow/thread.cpp	/^Thread::~Thread() {$/;"	f	class:rainbow::Thread	signature:()
rainbow::Thread::~Thread	rainbow/thread.h	/^    ~Thread();$/;"	p	class:rainbow::Thread	access:public	signature:()
rainbow::ThreadIdFormatItem	rainbow/log.cpp	/^class ThreadIdFormatItem : public LogFormatter::FormatItem {$/;"	c	namespace:rainbow	file:	inherits:LogFormatter::FormatItem
rainbow::ThreadIdFormatItem::ThreadIdFormatItem	rainbow/log.cpp	/^    ThreadIdFormatItem(const std::string str = "") {}$/;"	f	class:rainbow::ThreadIdFormatItem	access:public	signature:(const std::string str = ”)
rainbow::WriteScopedLockImpl	rainbow/thread.h	/^struct WriteScopedLockImpl {$/;"	s	namespace:rainbow
rainbow::WriteScopedLockImpl::WriteScopedLockImpl	rainbow/thread.h	/^    WriteScopedLockImpl(T& mutex)$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:(T& mutex)
rainbow::WriteScopedLockImpl::lock	rainbow/thread.h	/^    void lock() {$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:()
rainbow::WriteScopedLockImpl::m_locked	rainbow/thread.h	/^    bool m_locked;$/;"	m	struct:rainbow::WriteScopedLockImpl	access:private
rainbow::WriteScopedLockImpl::m_mutex	rainbow/thread.h	/^    T& m_mutex;$/;"	m	struct:rainbow::WriteScopedLockImpl	access:private
rainbow::WriteScopedLockImpl::unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:()
rainbow::WriteScopedLockImpl::~WriteScopedLockImpl	rainbow/thread.h	/^    ~WriteScopedLockImpl() {$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:()
rainbow::__log_init	rainbow/log.cpp	/^static LogIniter __log_init;$/;"	m	namespace:rainbow	file:
rainbow::g_log_define	rainbow/log.cpp	/^rainbow::ConfigVar<std::set<LogDefine>>::ptr g_log_define = $/;"	m	namespace:rainbow	file:
rainbow::g_logger	rainbow/config.cpp	/^static rainbow::Logger::ptr g_logger = RAINBOW_LOG_NAME("system");$/;"	m	namespace:rainbow	file:
rainbow::g_logger	rainbow/thread.cpp	/^static rainbow::Logger::ptr g_logger = RAINBOW_LOG_NAME("system");$/;"	m	namespace:rainbow	file:
rainbow::t_thread	rainbow/thread.cpp	/^static thread_local Thread* t_thread = nullptr;$/;"	m	namespace:rainbow	file:
rainbow::t_thread_name	rainbow/thread.cpp	/^static thread_local std::string t_thread_name = "UNKNOW";$/;"	m	namespace:rainbow	file:
rdlock	rainbow/thread.h	/^    void rdlock() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
re_escape	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:re_escape(text)$/;"	f
read	.vim/src/vjde/completion/Document.java	/^	public String read() throws Exception {$/;"	m	class:Document	access:public	signature:()
read	.vim/src/vjde/completion/DynamicClassLoader.java	/^  private static byte[] read (InputStream is, int size) throws IOException {$/;"	m	class:DynamicClassLoader	file:	access:private	signature:(InputStream is, int size)
readDoc	.vim/src/vjde/completion/SourceDocReader.java	/^	private String readDoc(StreamTokenizer st) throws Exception$/;"	m	class:SourceDocReader	file:	access:private	signature:(StreamTokenizer st)
readFieldValue	.vim/src/readtags.c	/^static const char *readFieldValue ($/;"	f	file:	signature:( const tagEntry *const entry, const char *const key)
readFile	.vim/src/vjde/completion/Document.java	/^	private String readFile(File f) throws IOException {$/;"	m	class:Document	file:	access:private	signature:(File f)
readNext	.vim/src/readtags.c	/^static tagResult readNext (tagFile *const file, tagEntry *const entry)$/;"	f	file:	signature:(tagFile *const file, tagEntry *const entry)
readPseudoTags	.vim/src/readtags.c	/^static void readPseudoTags (tagFile *const file, tagFileInfo *const info)$/;"	f	file:	signature:(tagFile *const file, tagFileInfo *const info)
readSource	.vim/src/vjde/completion/Document.java	/^	private String readSource(File f ) throws Exception {$/;"	m	class:Document	file:	access:private	signature:(File f )
readTagLine	.vim/src/readtags.c	/^static int readTagLine (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
readTagLineRaw	.vim/src/readtags.c	/^static int readTagLineRaw (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
readTagLineSeek	.vim/src/readtags.c	/^static int readTagLineSeek (tagFile *const file, const off_t pos)$/;"	f	file:	signature:(tagFile *const file, const off_t pos)
read_int	.vim/src/previewwindow.cpp	/^	int read_int(string &firstline,char sp,int len,int &curr) $/;"	f	signature:(string &firstline,char sp,int len,int &curr)
record	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
recursiveListFields	.vim/src/vjde/completion/Completion.java	/^  private static void recursiveListFields(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
recursiveListInnerClasses	.vim/src/vjde/completion/Completion.java	/^  private static void recursiveListInnerClasses(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
recursiveListMethods	.vim/src/vjde/completion/Completion.java	/^  private static void recursiveListMethods(Class c,$/;"	m	class:Completion	file:	access:private	signature:(Class c, int level, StringBuffer sb)
redraw	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reformat	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refreshCurrent	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
refreshRoot	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
regexfilter	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
region	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:region(start_mark, end_mark)$/;"	f
regisfilter	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
reindent	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
reload	.vim/src/vjde/completion/ClassPathEntry.java	/^    void reload() throws IOException {$/;"	m	class:ClassPathEntry	access:default	signature:()
relsz	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:relsz(expr, limit)$/;"	f
remarksigns	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
remove_duplicate	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:remove_duplicate(input)$/;"	f
remove_last_timeout	.vim/src/previewwindow.cpp	/^	void remove_last_timeout()$/;"	f	signature:()
remove_last_timeout	.vim/src/previewwindow.cpp	/^	void remove_last_timeout();$/;"	p	file:	signature:()
remove_signs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
renameBuffer	.vim_runtime/sources_non_forked/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
reopen	rainbow/log.cpp	/^bool FileLogAppender::reopen() {$/;"	f	class:rainbow::FileLogAppender	signature:()
reopen	rainbow/log.h	/^    bool reopen();$/;"	p	class:rainbow::FileLogAppender	access:public	signature:()
repeat#errmsg	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^function! repeat#errmsg()$/;"	f
repeat#invalidate	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#invalidate	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#run	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#set	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#setreg	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeat#wrap	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
repeatPlugin	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^augroup repeatPlugin$/;"	a
repo_bare	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
repo_dir	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_find	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
repo_git_chomp	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_prepare	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_prepare(...) dict abort$/;"	f
repo_rev_parse	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
repo_tree	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
res	.vim/src/vjde/completion/Struts2Configure.java	/^	Result[] res;$/;"	f	class:ActionImpl	access:default
res	.vim/src/vjde/completion/Struts2Simple.java	/^	Result[] res;$/;"	f	class:ActionImpl2	access:default
res	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^    let res = webapi#http#get(url.'?page='.page, '', {'Authorization': auth})$/;"	v
res	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^    let res = webapi#http#get(url.'?page='.page, '', {'Authorization': auth})$/;"	v
reset_summary	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
reset_tick	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
resize_pads	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:resize_pads()$/;"	f
restore_fold_state	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:restore_fold_state()$/;"	f
restore_shell	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
result2Dict	.vim/src/vjde/completion/Struts2Configure.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Configure	access:public	signature:(MyAction action)
result2Dict	.vim/src/vjde/completion/Struts2Simple.java	/^	public StringBuffer result2Dict(MyAction action) {$/;"	m	class:Struts2Simple	access:public	signature:(MyAction action)
results	.vim/src/vjde/completion/Struts2Configure.java	/^				public Result[] results() {$/;"	m	class:ActionImpl	access:public	signature:()
results	.vim/src/vjde/completion/Struts2Simple.java	/^				public Result[] results() {$/;"	m	class:ActionImpl2	access:public	signature:()
results	.vim/src/vjde/completion/Struts2Simple.java	/^        public Result[] results() ;$/;"	m	interface:Action	access:public	signature:()
reuseWin	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
revert_highlight_fix	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_highlight_fix()$/;"	f
revert_mode	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_mode(from, to)$/;"	f
rgb	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
rgb	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
rgb	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
right	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:right(s)$/;"	f
root	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.h	/^/;"	v
rtp_add	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_add_defaults	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_defaults()$/;"	f
rtp_rm	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
ruby_minlines	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run	rainbow/thread.cpp	/^void* Thread::run(void* arg) {$/;"	f	class:rainbow::Thread	signature:(void* arg)
run	rainbow/thread.h	/^    static void* run(void* arg);$/;"	p	class:rainbow::Thread	access:private	signature:(void* arg)
run_syntax_fold	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
rust	.vim_runtime/sources_non_forked/rust.vim/after/syntax/rust.vim	/^    augroup rust.vim.after$/;"	a
rust	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^    augroup rust.vim.DelimitMate$/;"	a
rust	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^augroup rust.vim.PreWrite$/;"	a
rust#AppendCmdLine	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#GetConfigVar	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#GetConfigVar(name, default)$/;"	f
rust#IncludeExpr	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#IncludeExpr(fname) abort$/;"	f
rust#Jump	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Load	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#Load()$/;"	f
rust#Play	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rust#Test	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! rust#Test(mods, winsize, all, options) abort$/;"	f
rust#debugging#Info	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/debugging.vim	/^function! rust#debugging#Info() abort$/;"	f
rust#debugging#InfoToClipboard	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToClipboard() abort$/;"	f
rust#debugging#InfoToFile	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToFile(filename) abort$/;"	f
rust#delimitmate#onMap	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onMap() abort$/;"	f
rust#delimitmate#onUnmap	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onUnmap() abort$/;"	f
rust#tags#IsUCtags	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/tags.vim	/^function! rust#tags#IsUCtags() abort$/;"	f
rustfmt#Cmd	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#Cmd()$/;"	f
rustfmt#DetectVersion	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#DetectVersion()$/;"	f
rustfmt#Format	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#FormatRange	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
rustfmt#Load	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#Load()$/;"	f
rustfmt#PreWrite	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#PreWrite()$/;"	f
s	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^    let s = printf('%sfoo%sbar%s', c, c, c)$/;"	v
s:Attrib	.vim/ftplugin/xml.vim	/^let s:Attrib =  '\\(\\(\\s\\|\\n\\)\\+\\([^>= \\t]\\+=[^>&]\\+\\)\\(\\s\\|\\n\\)*\\)'$/;"	v
s:BEGIN_BLOCK	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BRACKET_CONTINUATION	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Bookmark	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:CACHE_DEBUG_TRACE	.vim/autoload/omni/common/debug.vim	/^let s:CACHE_DEBUG_TRACE = []$/;"	v
s:CACHE_OVERLOADED_FUNCTIONS	.vim/autoload/omni/cpp/complete.vim	/^let s:CACHE_OVERLOADED_FUNCTIONS = {}$/;"	v
s:CACHE_TAG_ENV	.vim/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_ENV = ''$/;"	v
s:CACHE_TAG_FILES	.vim/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_FILES = {}$/;"	v
s:CACHE_TAG_POPUP_ITEMS	.vim/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_POPUP_ITEMS = {}$/;"	v
s:CFG_TO_LSP_SEVERITY	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_window.vim	/^let s:CFG_TO_LSP_SEVERITY = {$/;"	v
s:COMPLETION_TRIGGER_CHARACTER	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_CHARACTER = 2$/;"	v
s:COMPLETION_TRIGGER_INVOKED	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_INVOKED = 1$/;"	v
s:COMPOUND_EXPRESSION	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION_OP	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:CloseTag	.vim/ftplugin/xml.vim	/^let s:CloseTag = '<\\\/[^>]*'. s:NoSlashBeforeGt$/;"	v
s:Creator	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Cursor	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:Cursor = {}$/;"	v
s:CursorManager	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:CursorManager = {}$/;"	v
s:DEFAULT_LEVEL	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:EndofName	.vim/ftplugin/xml.vim	/^let s:EndofName = '\\($\\|\\s\\|>\\)'$/;"	v
s:Event	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FUNCTION	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:FlagSet	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:Go	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^let s:Help = s:prototype.Help$/;"	v
s:Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^let s:Help = s:prototype.Help$/;"	v
s:Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^let s:Help = s:prototype.Help$/;"	v
s:INTERNAL_ERROR	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:INTERNAL_ERROR = -32603$/;"	v
s:INVALID_PARAMS	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_PARAMS = -32602$/;"	v
s:INVALID_REQUEST	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_REQUEST = -32600$/;"	v
s:KEYWORD_PAIRS	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KeyMap	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:LEFT_BRACE	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:LEFT_BRACE = '\\v%(^|[^\\\\])\\{'$/;"	v
s:LSP_INSERT_TEXT_FORMAT_PLAIN	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_PLAIN = 1$/;"	v
s:LSP_INSERT_TEXT_FORMAT_SNIPPET	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_SNIPPET = 2$/;"	v
s:LSP_MESSAGE_TYPE_DISABLED	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_DISABLED = 0$/;"	v
s:LSP_MESSAGE_TYPE_ERROR	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_ERROR = 1$/;"	v
s:LSP_MESSAGE_TYPE_INFORMATION	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_INFORMATION = 3$/;"	v
s:LSP_MESSAGE_TYPE_LOG	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_LOG = 4$/;"	v
s:LSP_MESSAGE_TYPE_WARNING	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_WARNING = 2$/;"	v
s:Left	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:MAX_COL_SIZE	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^let s:MAX_COL_SIZE = 1073741824 " pow(2, 30)$/;"	v
s:MAX_LOOKBACK	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_POS_VALUES	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^let s:MAX_POS_VALUES = 8$/;"	v
s:MAX_PROPERTY_NAME	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_NAME = 50$/;"	v
s:MAX_PROPERTY_VALUE	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_VALUE = 255$/;"	v
s:MAX_SECTION_NAME	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_SECTION_NAME = 4096$/;"	v
s:METHOD_NOT_FOUND	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:METHOD_NOT_FOUND = -32601$/;"	v
s:MRUList	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:MRUList = []$/;"	v
s:MRU_Exclude_List	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:MRU_Exclude_List = ["[BufExplorer]","__MRU_Files__","[Buf\\ List]"]$/;"	v
s:MenuController	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NUMERIC_RANGE	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:NUMERIC_RANGE = '\\v([+-]?\\d+)' . '\\.\\.' . '([+-]?\\d+)'$/;"	v
s:NoSlashBeforeGt	.vim/ftplugin/xml.vim	/^let s:NoSlashBeforeGt = '\\(\\\/\\)\\@\\<!>'$/;"	v
s:Notifier	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:OPTCRE	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:OPTCRE = '\\v\\s*([^:=[:space:]][^:=]*)\\s*([:=])\\s*(.*)$'$/;"	v
s:OmniCpp_ShowAccess	.vim/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowAccess = g:OmniCpp_ShowAccess$/;"	v
s:OmniCpp_ShowPrototypeInAbbr	.vim/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowPrototypeInAbbr = g:OmniCpp_ShowPrototypeInAbbr$/;"	v
s:OmniCpp_ShowScopeInAbbr	.vim/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowScopeInAbbr = g:OmniCpp_ShowScopeInAbbr$/;"	v
s:OpenOrCloseTag	.vim/ftplugin/xml.vim	/^let s:OpenOrCloseTag = '<[^!?][^>]*'. s:OptAttrib$/;"	v
s:OpenTag	.vim/ftplugin/xml.vim	/^let s:OpenTag = '<[^!\/?][^>]*' . s:OptAttrib$/;"	v
s:Opener	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:OptAttrib	.vim/ftplugin/xml.vim	/^let s:OptAttrib = s:Attrib . '*'. s:NoSlashBeforeGt$/;"	v
s:PARSE_ERROR	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:PARSE_ERROR = -32700$/;"	v
s:POSTFIX_CONDITION	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:Path	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:REQUEST_CANCELLED	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:REQUEST_CANCELLED = -32800$/;"	v
s:RIGHT_BRACE	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:RIGHT_BRACE = '\\v%(^|[^\\\\])\\}'$/;"	v
s:ReqAttrib	.vim/ftplugin/xml.vim	/^let s:ReqAttrib = s:Attrib . '\\+'. s:NoSlashBeforeGt$/;"	v
s:Right	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:SECTCRE	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:SECTCRE = '\\v^\\s*\\[(%([^\\\\#;]|\\\\.)+)\\]'$/;"	v
s:SERVER_ERROR_END	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_END = -32000$/;"	v
s:SERVER_ERROR_START	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_START = -32099$/;"	v
s:SERVER_NOT_INITIALIZED	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_NOT_INITIALIZED = -32002$/;"	v
s:SEVERITY_ERROR	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_ERROR = 1$/;"	v
s:SEVERITY_HINT	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_HINT = 4$/;"	v
s:SEVERITY_INFORMATION	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_INFORMATION = 3$/;"	v
s:SEVERITY_WARNING	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_WARNING = 2$/;"	v
s:SINGLE_LINE_ELSE	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftTab	.vim/bundle/supertab/plugin/supertab.vim	/^        let s:ShiftTab = function(stab)$/;"	v
s:ShiftTab	.vim/bundle/supertab/plugin/supertab.vim	/^      let s:ShiftTab = stab$/;"	v
s:ShiftWidth	.vim_runtime/sources_non_forked/vim-coffee-script/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:SourcedFile	.vim_runtime/sources_non_forked/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:SpaceInfront	.vim/ftplugin/xml.vim	/^let s:SpaceInfront = '^\\s*<'$/;"	v
s:Strlen	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^  let s:Strlen = function("strdisplaywidth")$/;"	v
s:Tab	.vim/bundle/supertab/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing_tab, '()$', '', ''))$/;"	v
s:Tab	.vim/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing, '()$', '', ''))$/;"	v
s:TabularCommands	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:Tlist_Skip_Refresh	.vim/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UNKNOWN_ERROR_CODE	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp/response.vim	/^let s:UNKNOWN_ERROR_CODE = -32001$/;"	v
s:_	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:_	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:_	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:__ale_julia_project_filenames	.vim_runtime/sources_non_forked/ale/autoload/ale/julia.vim	/^let s:__ale_julia_project_filenames = ['REQUIRE', 'Manifest.toml', 'Project.toml']$/;"	v
s:_cache	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:_cache = {}$/;"	v
s:_lightline	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:_lightline	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:_lightline	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:access_modifier_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:ack_mappings	.vim_runtime/sources_non_forked/ack.vim/plugin/ack.vim	/^let s:ack_mappings = {$/;"	v
s:active_cwd	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd = ''$/;"	v
s:active_cwd_len	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd_len = 0$/;"	v
s:active_patterns	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_patterns = []$/;"	v
s:addr_other	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') ? '-addr=other' : ''$/;"	v
s:addr_tabs	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:almost_black	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:almost_black = [ '#1c1c1c', 234 ]$/;"	v
s:almost_black	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:almost_black = [ '#1c1c1c', 234 ]$/;"	v
s:almost_black	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:almost_black = [ '#1c1c1c', 234 ]$/;"	v
s:aqua	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:aqua = [ '#00ffff', 14 ]$/;"	v
s:aqua	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:aqua = [ '#00ffff', 14 ]$/;"	v
s:aqua	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:aqua   = s:getGruvColor('GruvboxAqua')$/;"	v
s:aqua	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:aqua = [ '#00ffff', 14 ]$/;"	v
s:aqua	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:ars	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:assert	.vim/bundle/lightline.vim/test/autocmd.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/popup.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/quickfix.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/autocmd.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/popup.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/quickfix.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/autocmd.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/popup.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/quickfix.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:attributes	.vim_runtime/sources_non_forked/vim-pug/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:available	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:b	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:bMayComplete	.vim/autoload/omni/cpp/complete.vim	/^let s:bMayComplete = 0$/;"	v
s:back	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:background	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:background	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:background	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:backslash_continuation_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:bad_git_dir	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let s:bad_git_dir = '\/$\\|^fugitive:'$/;"	v
s:bad_input	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:bad_input = 0$/;"	v
s:bang_edits	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:bang_edits = {'split': 'Git', 'vsplit': 'vert Git', 'tabedit': 'tab Git', 'pedit': 'Git!'}$/;"	v
s:bar	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let s:bar = 4$/;"	v
s:base	.vim_runtime/sources_non_forked/tlib/autoload/tlib/signs.vim	/^let s:base = 2327$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base0 = '#e6e1cf'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base0 = '#5C6773'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base0 = '#d9d7ce'$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base0 = '#e6e1cf'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base0 = '#5C6773'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base0 = '#d9d7ce'$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base0 = '#e6e1cf'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base0 = '#5C6773'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base0 = '#d9d7ce'$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base00 = '#14191f'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base00 = '#FFFFFF'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base00 = '#272d38'$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base00 = '#14191f'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base00 = '#FFFFFF'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base00 = '#272d38'$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base00 = '#14191f'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base00 = '#FFFFFF'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base00 = '#272d38'$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base01 = '#14191f'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base01 = '#FFFFFF'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base01 = '#272d38'$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base01 = '#14191f'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base01 = '#FFFFFF'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base01 = '#272d38'$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base01 = '#14191f'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base01 = '#FFFFFF'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base01 = '#272d38'$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base02 = '#0f1419'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base02 = '#FAFAFA'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base02 = '#212733'$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444', 238 ]$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base02 = '#0f1419'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base02 = '#FAFAFA'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base02 = '#212733'$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444', 238 ]$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base02 = '#0f1419'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base02 = '#FAFAFA'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base02 = '#212733'$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444', 238 ]$/;"	v
s:base02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base023 = '#0f1419'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base023 = '#FAFAFA'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base023 = '#212733'$/;"	v
s:base023	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535', 236 ]$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base023 = '#0f1419'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base023 = '#FAFAFA'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base023 = '#212733'$/;"	v
s:base023	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535', 236 ]$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base023 = '#0f1419'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base023 = '#FAFAFA'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base023 = '#212733'$/;"	v
s:base023	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535', 236 ]$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base03 = '#e6b673'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base03 = '#E6B673'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base03 = '#ffc44c'$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base03 = '#e6b673'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base03 = '#E6B673'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base03 = '#ffc44c'$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base03 = '#e6b673'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base03 = '#E6B673'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base03 = '#ffc44c'$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base1 = '#e6e1cf'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base1 = '#5C6773'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base1 = '#d9d7ce'$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base1 = '#e6e1cf'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base1 = '#5C6773'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base1 = '#d9d7ce'$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base1 = '#e6e1cf'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base1 = '#5C6773'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base1 = '#d9d7ce'$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base2 = '#3e4b59'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base2 = '#828C99'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base2 = '#607080'$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base2 = '#3e4b59'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base2 = '#828C99'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base2 = '#607080'$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base2 = '#3e4b59'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base2 = '#828C99'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base2 = '#607080'$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base23	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base23	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base23	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base3 = '#e6e1cf'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base3 = '#5C6773'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base3 = '#d9d7ce'$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base3 = '#e6e1cf'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base3 = '#5C6773'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base3 = '#d9d7ce'$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base3 = '#e6e1cf'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base3 = '#5C6773'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base3 = '#d9d7ce'$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base3	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:before_function_called	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:before_function_called = 0$/;"	v
s:begin_failed_skip_pattern	.vim_runtime/sources_non_forked/ale/ale_linters/perl/perl.vim	/^let s:begin_failed_skip_pattern = '\\v' . join([$/;"	v
s:bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#282c34', 235 ]$/;"	v
s:bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#fafafa', 255 ]$/;"	v
s:bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#282c34', 235 ]$/;"	v
s:bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#fafafa', 255 ]$/;"	v
s:bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#282c34', 235 ]$/;"	v
s:bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#fafafa', 255 ]$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg0  = s:getGruvColor('GruvboxBg0')$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg1  = s:getGruvColor('GruvboxBg1')$/;"	v
s:bg1	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg2  = s:getGruvColor('GruvboxBg2')$/;"	v
s:bg2	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg4  = s:getGruvColor('GruvboxBg4')$/;"	v
s:bg4	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:bg_1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_1      = ['#252525', 0]$/;"	v
s:bg_1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_1      = ['#184956', 0]$/;"	v
s:bg_1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_1      = ['#ece3cc', 0]$/;"	v
s:bg_1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_1      = ['#ebebeb', 0]$/;"	v
s:bg_1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_1      = ['#252525', 0]$/;"	v
s:bg_1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_1      = ['#184956', 0]$/;"	v
s:bg_1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_1      = ['#ece3cc', 0]$/;"	v
s:bg_1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_1      = ['#ebebeb', 0]$/;"	v
s:bg_1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_1      = ['#252525', 0]$/;"	v
s:bg_1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_1      = ['#184956', 0]$/;"	v
s:bg_1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_1      = ['#ece3cc', 0]$/;"	v
s:bg_1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_1      = ['#ebebeb', 0]$/;"	v
s:bg_2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_2      = ['#3b3b3b', 8]$/;"	v
s:bg_2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_2      = ['#2d5b69', 8]$/;"	v
s:bg_2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_2      = ['#d5cdb6', 8]$/;"	v
s:bg_2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_2      = ['#cdcdcd', 8]$/;"	v
s:bg_2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_2      = ['#3b3b3b', 8]$/;"	v
s:bg_2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_2      = ['#2d5b69', 8]$/;"	v
s:bg_2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_2      = ['#d5cdb6', 8]$/;"	v
s:bg_2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_2      = ['#cdcdcd', 8]$/;"	v
s:bg_2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_2      = ['#3b3b3b', 8]$/;"	v
s:bg_2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_2      = ['#2d5b69', 8]$/;"	v
s:bg_2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_2      = ['#d5cdb6', 8]$/;"	v
s:bg_2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_2      = ['#cdcdcd', 8]$/;"	v
s:bin_dir	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^let s:bin_dir = has('unix') ? 'bin' : 'Scripts'$/;"	v
s:bins	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:black	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:black = [ '#000000', 0 ]$/;"	v
s:black	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:black	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black = [ '#000000', '0' ]$/;"	v
s:black	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:black = [ '#000000', 0 ]$/;"	v
s:black	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:black	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black = [ '#000000', '0' ]$/;"	v
s:black	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:black = [ '#000000', 0 ]$/;"	v
s:black	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:black	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black = [ '#000000', '0' ]$/;"	v
s:black2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black2 = [ '#121212', '233' ]$/;"	v
s:black2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black2 = [ '#121212', '233' ]$/;"	v
s:black2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black2 = [ '#121212', '233' ]$/;"	v
s:blobdirs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:block_continuation_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_rules	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^let s:block_rules = {$/;"	v
s:block_rules_multiple	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^let s:block_rules_multiple = {$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#0000ff', 12 ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:blue = '#36a3d9'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:blue      = ['#368aeb', 4]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:blue      = ['#4695f7', 4]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:blue      = ['#0072d4', 4]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:blue      = ['#0064e4', 4]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue = [ '#5f87af', '67' ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#0000ff', 12 ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:blue = '#36a3d9'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:blue      = ['#368aeb', 4]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:blue      = ['#4695f7', 4]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:blue      = ['#0072d4', 4]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:blue      = ['#0064e4', 4]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue = [ '#5f87af', '67' ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:blue   = s:getGruvColor('GruvboxBlue')$/;"	v
s:blue	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#0000ff', 12 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:blue = '#36a3d9'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:blue      = ['#368aeb', 4]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:blue      = ['#4695f7', 4]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:blue      = ['#0072d4', 4]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:blue      = ['#0064e4', 4]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue = [ '#5f87af', '67' ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:blue	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:blue2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue2 = [ '#91aadf', '110' ]$/;"	v
s:blue2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue2 = [ '#91aadf', '110' ]$/;"	v
s:blue2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue2 = [ '#91aadf', '110' ]$/;"	v
s:bmru	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^let s:bmru = []$/;"	v
s:bold	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:bold = ''$/;"	v
s:bold	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:bold = 'bold,'$/;"	v
s:bracket_continuation_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:brblue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brblue    = ['#4f9cfe', 12]$/;"	v
s:brblue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brblue    = ['#58a3ff', 12]$/;"	v
s:brblue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brblue    = ['#006dce', 12]$/;"	v
s:brblue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brblue    = ['#0054cf', 12]$/;"	v
s:brblue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brblue    = ['#4f9cfe', 12]$/;"	v
s:brblue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brblue    = ['#58a3ff', 12]$/;"	v
s:brblue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brblue    = ['#006dce', 12]$/;"	v
s:brblue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brblue    = ['#0054cf', 12]$/;"	v
s:brblue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brblue    = ['#4f9cfe', 12]$/;"	v
s:brblue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brblue    = ['#58a3ff', 12]$/;"	v
s:brblue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brblue    = ['#006dce', 12]$/;"	v
s:brblue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brblue    = ['#0054cf', 12]$/;"	v
s:brcyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brcyan    = ['#56d8c9', 14]$/;"	v
s:brcyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brcyan    = ['#53d6c7', 14]$/;"	v
s:brcyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brcyan    = ['#00978a', 14]$/;"	v
s:brcyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brcyan    = ['#009a8a', 14]$/;"	v
s:brcyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brcyan    = ['#56d8c9', 14]$/;"	v
s:brcyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brcyan    = ['#53d6c7', 14]$/;"	v
s:brcyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brcyan    = ['#00978a', 14]$/;"	v
s:brcyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brcyan    = ['#009a8a', 14]$/;"	v
s:brcyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brcyan    = ['#56d8c9', 14]$/;"	v
s:brcyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brcyan    = ['#53d6c7', 14]$/;"	v
s:brcyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brcyan    = ['#00978a', 14]$/;"	v
s:brcyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brcyan    = ['#009a8a', 14]$/;"	v
s:brgreen	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brgreen   = ['#83c746', 10]$/;"	v
s:brgreen	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brgreen   = ['#84c747', 10]$/;"	v
s:brgreen	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brgreen   = ['#428b00', 10]$/;"	v
s:brgreen	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brgreen   = ['#008400', 10]$/;"	v
s:brgreen	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brgreen   = ['#83c746', 10]$/;"	v
s:brgreen	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brgreen   = ['#84c747', 10]$/;"	v
s:brgreen	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brgreen   = ['#428b00', 10]$/;"	v
s:brgreen	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brgreen   = ['#008400', 10]$/;"	v
s:brgreen	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brgreen   = ['#83c746', 10]$/;"	v
s:brgreen	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brgreen   = ['#84c747', 10]$/;"	v
s:brgreen	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brgreen   = ['#428b00', 10]$/;"	v
s:brgreen	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brgreen   = ['#008400', 10]$/;"	v
s:bright	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:bright_blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:bright_magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:bright_magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:brmagenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brmagenta = ['#ff81ca', 13]$/;"	v
s:brmagenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brmagenta = ['#ff84cd', 13]$/;"	v
s:brmagenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brmagenta = ['#c44392', 13]$/;"	v
s:brmagenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brmagenta = ['#c7008b', 13]$/;"	v
s:brmagenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brmagenta = ['#ff81ca', 13]$/;"	v
s:brmagenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brmagenta = ['#ff84cd', 13]$/;"	v
s:brmagenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brmagenta = ['#c44392', 13]$/;"	v
s:brmagenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brmagenta = ['#c7008b', 13]$/;"	v
s:brmagenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brmagenta = ['#ff81ca', 13]$/;"	v
s:brmagenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brmagenta = ['#ff84cd', 13]$/;"	v
s:brmagenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brmagenta = ['#c44392', 13]$/;"	v
s:brmagenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brmagenta = ['#c7008b', 13]$/;"	v
s:browsefilter	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:brred	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brred     = ['#ff5e56', 9]$/;"	v
s:brred	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brred     = ['#ff665c', 9]$/;"	v
s:brred	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brred     = ['#cc1729', 9]$/;"	v
s:brred	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brred     = ['#bf0000', 9]$/;"	v
s:brred	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brred     = ['#ff5e56', 9]$/;"	v
s:brred	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brred     = ['#ff665c', 9]$/;"	v
s:brred	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brred     = ['#cc1729', 9]$/;"	v
s:brred	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brred     = ['#bf0000', 9]$/;"	v
s:brred	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brred     = ['#ff5e56', 9]$/;"	v
s:brred	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brred     = ['#ff665c', 9]$/;"	v
s:brred	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brred     = ['#cc1729', 9]$/;"	v
s:brred	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brred     = ['#bf0000', 9]$/;"	v
s:bryellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bryellow  = ['#efc541', 11]$/;"	v
s:bryellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bryellow  = ['#ebc13d', 11]$/;"	v
s:bryellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bryellow  = ['#a78300', 11]$/;"	v
s:bryellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bryellow  = ['#af8500', 11]$/;"	v
s:bryellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bryellow  = ['#efc541', 11]$/;"	v
s:bryellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bryellow  = ['#ebc13d', 11]$/;"	v
s:bryellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bryellow  = ['#a78300', 11]$/;"	v
s:bryellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bryellow  = ['#af8500', 11]$/;"	v
s:bryellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bryellow  = ['#efc541', 11]$/;"	v
s:bryellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bryellow  = ['#ebc13d', 11]$/;"	v
s:bryellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bryellow  = ['#a78300', 11]$/;"	v
s:bryellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bryellow  = ['#af8500', 11]$/;"	v
s:buffer_data	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^    let s:buffer_data = {}$/;"	v
s:buffer_prototype	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:bufnr	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:bufnr_width	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:bufnr_width = 3$/;"	v
s:bufprefix	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^let s:bufprefix = 'gist' . (has('unix') ? ':' : '_')$/;"	v
s:bufprefix	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^let s:bufprefix = 'gist' . (has('unix') ? ':' : '_')$/;"	v
s:bundle	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:bvars	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:c	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:c['cache_dir'] = get(s:c, 'cache_dir', expand('$HOME').'\/.vim-cache')$/;"	v
s:c	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:c['scanned_files'] = get(s:c, 'scanned_files', {})$/;"	v
s:c	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/glob.vim	/^let s:c['glob_cache'] = get(s:c, 'glob_cache', {})$/;"	v
s:c	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/glob.vim	/^let s:c['regex_ignore_directory'] = '\\<\\%([_.]darcs\\|\\.git\\|.svn\\|.hg\\|.cvs\\|.bzr\\)\\>'$/;"	v
s:c	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:c0	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^let s:c0 = -1$/;"	v
s:c1	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^let s:c1 = -1$/;"	v
s:c_flag	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:cache	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^let s:cache = {}$/;"	v
s:cache	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^let s:cache = {}$/;"	v
s:cached_map	.vim_runtime/sources_non_forked/ale/autoload/ale/filetypes.vim	/^let s:cached_map = {}$/;"	v
s:candidates	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^let s:candidates = []$/;"	v
s:ccex	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:cfilemap	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:cfilemap = {}$/;"	v
s:cfilemap	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:cfilemap.rhs = "substitute(&l:inex =~# '\\\\<v:fname\\\\>' && len(expand('<cfile>')) ? eval(substitute(&l:inex, '\\\\<v:fname\\\\>', '\\\\=string(expand(\\"<cfile>\\"))', 'g')) : '', '^$', \\"\\\\022\\\\006\\",'')"$/;"	v
s:cfilemap	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:cfilemap = v:version >= 704 ? maparg('<Plug><cfile>', 'c', 0, 1) : {}$/;"	v
s:changed_wildignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:changed_wildignore = 0$/;"	v
s:channel_log	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:channel_map	.vim_runtime/sources_non_forked/ale/autoload/ale/socket.vim	/^let s:channel_map = get(s:, 'channel_map', {})$/;"	v
s:char	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:char = ''$/;"	v
s:checked_ctags	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/tags.vim	/^let s:checked_ctags = 0$/;"	v
s:classpath_sep	.vim_runtime/sources_non_forked/ale/ale_linters/java/javac.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:classpath_sep	.vim_runtime/sources_non_forked/ale/ale_linters/kotlin/kotlinc.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:cm	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:cm = s:CursorManager.new()$/;"	v
s:cmd1	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^            let s:cmd1 = printf(g:tlib#vcs#check, s:cmd)$/;"	v
s:codefix_map	.vim_runtime/sources_non_forked/ale/autoload/ale/codefix.vim	/^let s:codefix_map = {}$/;"	v
s:coffeeIndentExpr	.vim_runtime/sources_non_forked/vim-coffee-script/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:col_end_patterns	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^let s:col_end_patterns = [$/;"	v
s:color_column	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:color_column = get(s:gb, g:gruvbox_color_column)$/;"	v
s:color_column	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:color_column = s:bg1$/;"	v
s:colorscheme_list	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:columns	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:columns = -1$/;"	v
s:columns	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:columns = -1$/;"	v
s:columns	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:columns = -1$/;"	v
s:command_output	.vim_runtime/sources_non_forked/ale/autoload/ale/assert.vim	/^let s:command_output = []$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands = {}$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev     = s:commands.abstract.clone()$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev.options = {"buffer":0,"cmdline":0,"delete":0}$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.abstract = s:object.clone()$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.delete   = s:commands.abbrev.clone()$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.delete.options.delete = 1$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.search = s:commands.abstract.clone()$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.search.options = {"word": 0, "variable": 0, "flags": ""}$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.substitute = s:commands.abstract.clone()$/;"	v
s:commands	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:commands.substitute.options = {"word": 0, "variable": 0, "flags": "g"}$/;"	v
s:commondirs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compile_commands_cache	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^    let s:compile_commands_cache = {}$/;"	v
s:conceal	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealcode	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^  let s:concealcode = ' concealends'$/;"	v
s:concealcode	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^let s:concealcode = ''$/;"	v
s:concealends	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:config	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:connections	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp.vim	/^let s:connections = get(s:, 'connections', {})$/;"	v
s:continuable_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let s:continuation = get(g:,'typescript_continuation',$/;"	v
s:continuation	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:coretype_names	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretype_names = {$/;"	v
s:coretypes	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretypes = map(copy(g:ctrlp_types), '[s:coretype_names[v:val], v:val]')$/;"	v
s:counter	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:counter = 0$/;"	v
s:cpo_sav	.vim_runtime/sources_non_forked/vim-ruby/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	.vim/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/typescript-vim/compiler/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/typescript-vim/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-ruby/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cppKeyword	.vim/autoload/omni/cpp/tokenizer.vim	/^let s:cppKeyword = ['asm', 'auto', 'bool', 'break', 'case', 'catch', 'char', 'class', 'const', 'const_cast', 'continue', 'default', 'delete', 'do', 'double', 'dynamic_cast', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'float', 'for', 'friend', 'goto', 'if', 'inline', 'int', 'long', 'mutable', 'namespace', 'new', 'operator', 'private', 'protected', 'public', 'register', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'static', 'static_cast', 'struct', 'switch', 'template', 'this', 'throw', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'virtual', 'void', 'volatile', 'wchar_t', 'while', 'and', 'and_eq', 'bitand', 'bitor', 'compl', 'not', 'not_eq', 'or', 'or_eq', 'xor', 'xor_eq']$/;"	v
s:cppOperatorPunctuator	.vim/autoload/omni/cpp/tokenizer.vim	/^let s:cppOperatorPunctuator = ['->*', '->', '--', '-=', '-', '!=', '!', '##', '#', '%:%:', '%=', '%>', '%:', '%', '&&', '&=', '&', '(', ')', '*=', '*', ',', '...', '.*', '.', '\/=', '\/', '::', ':>', ':', ';', '?', '[', ']', '^=', '^', '{', '||', '|=', '|', '}', '~', '++', '+=', '+', '<<=', '<%', '<:', '<<', '<=', '<', '==', '=', '>>=', '>>', '>=', '>']$/;"	v
s:ctagmap	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:ctagmap = {}$/;"	v
s:ctagmap	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:ctagmap = v:version >= 704 ? maparg('<Plug><ctag>', 'c', 0, 1) : {}$/;"	v
s:ctags_is_uctags	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/tags.vim	/^let s:ctags_is_uctags = 0$/;"	v
s:cuicolor	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolor	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolor	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuicolors	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuicolors	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:cuiindex	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:cuiindex	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:cur_index	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^let s:cur_index = -1$/;"	v
s:current_ale_version	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let s:current_ale_version = [3, 1, 0]$/;"	v
s:current_dir	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_syntax_save	.vim_runtime/sources_non_forked/vim-coffee-script/after/syntax/haml.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:current_syntax_save	.vim_runtime/sources_non_forked/vim-coffee-script/after/syntax/html.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:cursor_timer	.vim_runtime/sources_non_forked/ale/autoload/ale/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cursor_timer	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^let s:cursor_timer = -1$/;"	v
s:custom_handlers_map	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^let s:custom_handlers_map = get(s:, 'custom_handlers_map', {})$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:cyan      = ['#3fc5b7', 6]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:cyan      = ['#41c7b9', 6]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:cyan      = ['#009c8f', 6]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:cyan      = ['#00ad9c', 6]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:cyan      = ['#3fc5b7', 6]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:cyan      = ['#41c7b9', 6]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:cyan      = ['#009c8f', 6]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:cyan      = ['#00ad9c', 6]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:cyan      = ['#3fc5b7', 6]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:cyan      = ['#41c7b9', 6]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:cyan      = ['#009c8f', 6]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:cyan      = ['#00ad9c', 6]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:cygwin	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^let s:cygwin = {}$/;"	v
s:darkGray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:darkGray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:darkGray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:darker_grey	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:darker_grey  = [ '#262626', 235 ]$/;"	v
s:darker_grey	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:darker_grey  = [ '#262626', 235 ]$/;"	v
s:darker_grey	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:darker_grey  = [ '#262626', 235 ]$/;"	v
s:debug	.vim_runtime/sources_non_forked/vim-ruby/spec/vim/plugin/syntax_test.vim	/^let s:debug = 0$/;"	v
s:default_ale_linter_aliases	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^let s:default_ale_linter_aliases = {$/;"	v
s:default_ale_linters	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^let s:default_ale_linters = {$/;"	v
s:default_normal_maps	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_normal_maps = {'!':1, '@':1, '=':1, 'q':1, 'r':1, 't':1, 'T':1, 'y':1, '[':1, ']':1, '\\':1, 'd':1, 'f':1, 'F':1, 'g':1, '"':1, 'z':1, 'c':1, 'm':1, '<':1, '>':1}$/;"	v
s:default_registry	.vim_runtime/sources_non_forked/ale/autoload/ale/fix/registry.vim	/^let s:default_registry = {$/;"	v
s:default_visual_maps	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_visual_maps = {'i':1, 'a':1, 'f':1, 'F':1, 't':1, 'T':1}$/;"	v
s:defaults_list	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:define_cache_file	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:define_cache_file = "let this_dir = s:c['cache_dir'].'\/cached-file-contents' | let cache_file = expand(this_dir.'\/'.substitute(string([func_as_string, a:file]),'[[\\\\]{}:\/\\\\,''\\"# ]\\\\+','_','g'))"$/;"	v
s:delimitMate_extra_excluded_regions	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/delimitmate.vim	/^let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
s:delimiter	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^    let s:delimiter = '\\' . s:delimiter$/;"	v
s:did_snip_helper	.vim_runtime/sources_non_forked/vim-snipmate/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:dim_0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:dim_0     = ['#777777', 7]$/;"	v
s:dim_0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:dim_0     = ['#72898f', 7]$/;"	v
s:dim_0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:dim_0     = ['#909995', 7]$/;"	v
s:dim_0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:dim_0     = ['#878787', 7]$/;"	v
s:dim_0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:dim_0     = ['#777777', 7]$/;"	v
s:dim_0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:dim_0     = ['#72898f', 7]$/;"	v
s:dim_0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:dim_0     = ['#909995', 7]$/;"	v
s:dim_0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:dim_0     = ['#878787', 7]$/;"	v
s:dim_0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:dim_0     = ['#777777', 7]$/;"	v
s:dim_0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:dim_0     = ['#72898f', 7]$/;"	v
s:dim_0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:dim_0     = ['#909995', 7]$/;"	v
s:dim_0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:dim_0     = ['#878787', 7]$/;"	v
s:dirArrows	.vim_runtime/sources_non_forked/nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dir_for_worktree	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dir_stack	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^let s:dir_stack = []$/;"	v
s:dircounts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:disable_colors	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:disable_colors = []$/;"	v
s:displayed_warnings	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^let s:displayed_warnings = 0$/;"	v
s:doappend	.vim/plugin/code_complete.vim	/^let s:doappend = 1$/;"	v
s:done	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done_bundles	.vim_runtime/autoload/pathogen.vim	/^let s:done_bundles = {}$/;"	v
s:dot_continuation_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:edit_jobs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  let s:edit_jobs = {}$/;"	v
s:editorconfig_core_mode	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = ''$/;"	v
s:editorconfig_core_mode	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = g:EditorConfig_core_mode$/;"	v
s:editorconfig_exec_path	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = ''$/;"	v
s:editorconfig_exec_path	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = g:EditorConfig_exec_path$/;"	v
s:enable_neovim	.vim_runtime/sources_non_forked/ale/ale_linters/vim/vint.vim	/^let s:enable_neovim = has('nvim') ? ' --enable-neovim' : ''$/;"	v
s:end_col_pattern_map	.vim_runtime/sources_non_forked/ale/ale_linters/python/flake8.vim	/^let s:end_col_pattern_map = {$/;"	v
s:end_col_patterns	.vim_runtime/sources_non_forked/ale/ale_linters/nim/nimcheck.vim	/^let s:end_col_patterns = [$/;"	v
s:end_end_regex	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_end_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_middle_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:error	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:error	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:error	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:errored	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc_filename_chars	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^let s:esc_filename_chars = ' *?[{`$%#"|!<>();&' . "'\\t\\n"$/;"	v
s:exec_paths	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:executable_cache_map	.vim_runtime/sources_non_forked/ale/autoload/ale/engine.vim	/^    let s:executable_cache_map = {}$/;"	v
s:executables	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^let s:executables = [$/;"	v
s:executables	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/solhint.vim	/^let s:executables = [$/;"	v
s:executables	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^let s:executables = {}$/;"	v
s:executables	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:expand	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:expanded	.vim/plugin/code_complete.vim	/^let s:expanded = 0  "in case of inserting char after expand$/;"	v
s:extmap	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^let s:extmap = extend({$/;"	v
s:extmap	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^let s:extmap = extend({$/;"	v
s:fail	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#494b53', 238 ]$/;"	v
s:fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#abb2bf', 145 ]$/;"	v
s:fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#494b53', 238 ]$/;"	v
s:fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#abb2bf', 145 ]$/;"	v
s:fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#494b53', 238 ]$/;"	v
s:fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#abb2bf', 145 ]$/;"	v
s:fg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg1  = s:getGruvColor('GruvboxFg1')$/;"	v
s:fg1	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg4  = s:getGruvColor('GruvboxFg4')$/;"	v
s:fg4	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg_pdef	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:ficounts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:file_commit_pattern	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_pattern	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:filecounts	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:filetype_dict	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^        let s:filetype_dict[key] = val$/;"	v
s:filetype_dict	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^    let s:filetype_dict = {$/;"	v
s:filetype_dict	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^    let s:filetype_dict = {}$/;"	v
s:first_sign_id	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:flag	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:fnameescape	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:focus_was_lost	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^  let s:focus_was_lost = 0$/;"	v
s:fold_arg	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^let s:fold_arg	    = s:foldable('string')		? ' fold'   : ''$/;"	v
s:foldable_groups	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:foreground	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:foreground	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:foreground	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:format	.vim_runtime/sources_non_forked/ale/ale_linters/vim/vint.vim	/^let s:format = '-f "{file_path}:{line_number}:{column_number}: {severity}: {policy_name} - {description} (see {reference})"'$/;"	v
s:format	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^let s:format = []$/;"	v
s:formatelempat	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:fpats	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:from_mode	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:from_mode = ''$/;"	v
s:fuchsia	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:fuchsia = [ '#ff00ff', 13 ]$/;"	v
s:fuchsia	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:fuchsia = [ '#ff00ff', 13 ]$/;"	v
s:fuchsia	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:fuchsia = [ '#ff00ff', 13 ]$/;"	v
s:fullscreen	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^let s:fullscreen = 0$/;"	v
s:gap_between_regions	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^let s:gap_between_regions = 5$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_green   = ['#b8bb26', 142]     " 184-187-38$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_purple  = ['#d3869b', 175]     " 211-134-155$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0       = ['#282828', 235]     " 40-40-40$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_hard  = ['#1d2021', 234]     " 29-32-33$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_soft  = ['#32302f', 236]     " 50-48-47$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark2       = ['#504945', 239]     " 80-73-69$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_aqua     = ['#427b58', 66]      " 66-123-88$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_blue     = ['#076678', 24]      " 7-102-120$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_green    = ['#79740e', 100]     " 121-116-14$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_orange   = ['#af3a03', 130]     " 175-58-3$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_purple   = ['#8f3f71', 96]      " 143-63-113$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_red      = ['#9d0006', 88]      " 157-0-6$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_yellow   = ['#b57614', 136]     " 181-118-20$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light0      = ['#fbf1c7', 229]     " 253-244-193$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_hard = ['#f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_soft = ['#f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_aqua   = ['#689d6a', 72]      " 104-157-106$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_blue   = ['#458588', 66]      " 69-133-136$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_green  = ['#98971a', 106]     " 152-151-26$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_orange = ['#d65d0e', 166]     " 214-93-14$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_purple = ['#b16286', 132]     " 177-98-134$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_red    = ['#cc241d', 124]     " 204-36-29$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_yellow = ['#d79921', 172]     " 215-153-33$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:getcmdwintype_exists	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let s:getcmdwintype_exists = exists('*getcmdwintype')$/;"	v
s:gist_token_file	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^let s:gist_token_file = expand(get(g:, 'gist_token_file', '~\/.gist-vim'))$/;"	v
s:gist_token_file	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^let s:gist_token_file = expand(get(g:, 'gist_token_file', '~\/.gist-vim'))$/;"	v
s:git_versions	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:glbs	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:glob_cache	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/glob.vim	/^let s:glob_cache = s:c['glob_cache']$/;"	v
s:global_variable_list	.vim_runtime/sources_non_forked/ale/autoload/ale/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:global_variable_list	.vim_runtime/sources_non_forked/rust.vim/autoload/rust/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:globsubs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:go_to_definition_map	.vim_runtime/sources_non_forked/ale/autoload/ale/definition.vim	/^let s:go_to_definition_map = {}$/;"	v
s:gold	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gold = [ '#f0d50c', '220' ]$/;"	v
s:gold	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gold = [ '#f0d50c', '220' ]$/;"	v
s:gold	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gold = [ '#f0d50c', '220' ]$/;"	v
s:got_fmt_error	.vim_runtime/sources_non_forked/rust.vim/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:gray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:gray = [ '#808080', 8]$/;"	v
s:gray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray = [ '#262626', '235' ]$/;"	v
s:gray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:gray = [ '#808080', 8]$/;"	v
s:gray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray = [ '#262626', '235' ]$/;"	v
s:gray	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:gray = [ '#808080', 8]$/;"	v
s:gray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray = [ '#262626', '235' ]$/;"	v
s:gray1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#494b53', 238 ]$/;"	v
s:gray1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#5c6370', 241 ]$/;"	v
s:gray1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#494b53', 238 ]$/;"	v
s:gray1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#5c6370', 241 ]$/;"	v
s:gray1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#494b53', 238 ]$/;"	v
s:gray1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#5c6370', 241 ]$/;"	v
s:gray2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#2c323d', 235 ]$/;"	v
s:gray2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#f0f0f0', 255 ]$/;"	v
s:gray2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray2 = [ '#3a3a3a', '237' ]$/;"	v
s:gray2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#2c323d', 235 ]$/;"	v
s:gray2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#f0f0f0', 255 ]$/;"	v
s:gray2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray2 = [ '#3a3a3a', '237' ]$/;"	v
s:gray2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#2c323d', 235 ]$/;"	v
s:gray2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#f0f0f0', 255 ]$/;"	v
s:gray2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray2 = [ '#3a3a3a', '237' ]$/;"	v
s:gray3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#3e4452', 240 ]$/;"	v
s:gray3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#d0d0d0', 250 ]$/;"	v
s:gray3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray3 = [ '#4e4e4e', '239' ]$/;"	v
s:gray3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#3e4452', 240 ]$/;"	v
s:gray3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#d0d0d0', 250 ]$/;"	v
s:gray3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray3 = [ '#4e4e4e', '239' ]$/;"	v
s:gray3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#3e4452', 240 ]$/;"	v
s:gray3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#d0d0d0', 250 ]$/;"	v
s:gray3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray3 = [ '#4e4e4e', '239' ]$/;"	v
s:gray4	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray4 = [ '#626262', '241' ]$/;"	v
s:gray4	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray4 = [ '#626262', '241' ]$/;"	v
s:gray4	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray4 = [ '#626262', '241' ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:green        = [ '#5f875f',  65 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:green = '#b8cc52'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:green = '#86B300'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:green = '#bbe67e'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green = [ '#98c379', 35 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:green     = ['#70b433', 2]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:green     = ['#75b938', 2]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:green     = ['#489100', 2]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:green     = ['#1d9700', 2]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:green = [ '#57ba37', '71' ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:green        = [ '#5f875f',  65 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:green = '#b8cc52'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:green = '#86B300'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:green = '#bbe67e'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green = [ '#98c379', 35 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:green     = ['#70b433', 2]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:green     = ['#75b938', 2]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:green     = ['#489100', 2]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:green     = ['#1d9700', 2]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:green = [ '#57ba37', '71' ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:green = s:getGruvColor('GruvboxGreen')$/;"	v
s:green	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:green[1]  = 10$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:green        = [ '#5f875f',  65 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:green = '#b8cc52'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:green = '#86B300'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:green = '#bbe67e'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green = [ '#98c379', 35 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:green     = ['#70b433', 2]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:green     = ['#75b938', 2]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:green     = ['#489100', 2]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:green     = ['#1d9700', 2]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:green = [ '#57ba37', '71' ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:green	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:group	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^  let s:group = 'ruby' . s:names[s:delimiter] . 'Escape'$/;"	v
s:guicolor	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:guicolor	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:guicolor	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:hasPreviewWindow	.vim/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindow = match(&completeopt, 'preview')>=0$/;"	v
s:hasPreviewWindowOld	.vim/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindowOld = s:hasPreviewWindow$/;"	v
s:has_conceal	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:has_conceal = has('conceal')$/;"	v
s:has_dict_maparg	.vim/bundle/supertab/plugin/supertab.vim	/^  let s:has_dict_maparg = v:version > 703 || (v:version == 703 && has('patch32'))$/;"	v
s:has_features	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && exists('*job_start') && exists('*ch_close_in')$/;"	v
s:has_features	.vim_runtime/sources_non_forked/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && has('nvim-0.2.0')$/;"	v
s:has_nvim_highlight	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^let s:has_nvim_highlight = exists('*nvim_buf_add_highlight') && exists('*nvim_buf_clear_namespace')$/;"	v
s:hash_colors	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:head_cache	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:head_cache = {}$/;"	v
s:headersRegexp	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^let s:headersRegexp = '\\v^(#|.+\\n(\\=+|-+)$)'$/;"	v
s:hi_group_cursor	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_cursor = 'multiple_cursors_cursor'$/;"	v
s:hi_group_visual	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_visual = 'multiple_cursors_visual'$/;"	v
s:hlgrps	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:hls_cursor	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)$/;"	v
s:hls_cursor	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hook_list	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig.vim	/^let s:hook_list = []$/;"	v
s:hover_map	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^let s:hover_map = {}$/;"	v
s:htmlIndentExpr	.vim_runtime/sources_non_forked/vim-coffee-script/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:hunk_re	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:i	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id_counter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^let s:id_counter = 0$/;"	v
s:in_comm	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:include	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:include = &l:include$/;"	v
s:indent	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indent_access_modifier_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indexes	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:indicator_checking	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_checking = get(g:, 'lightline#ale#indicator_checking', 'Linting...')$/;"	v
s:indicator_errors	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_errors = get(g:, 'lightline#ale#indicator_errors', 'E: ')$/;"	v
s:indicator_infos	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_infos = get(g:, 'lightline#ale#indicator_infos', 'I: ')$/;"	v
s:indicator_ok	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_ok = get(g:, 'lightline#ale#indicator_ok', 'OK')$/;"	v
s:indicator_warnings	.vim_runtime/sources_non_forked/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_warnings = get(g:, 'lightline#ale#indicator_warnings', 'W: ')$/;"	v
s:init_path	.vim_runtime/sources_non_forked/ale/autoload/ale/gradle.vim	/^let s:init_path = has('win32')$/;"	v
s:initialized	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^let s:initialized = 0$/;"	v
s:inline_pattern	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^let s:inline_pattern = '\\v inlined from .* at \\<stdin\\>:(\\d+):(\\d+):$'$/;"	v
s:inverse	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert_selection	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:invert_tabline = ''$/;"	v
s:is_dark	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:italic	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:italic = ''$/;"	v
s:italic	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:italicize_strings = ''$/;"	v
s:item_pattern	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:job_kill_timers	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^    let s:job_kill_timers = {}$/;"	v
s:job_map	.vim_runtime/sources_non_forked/ale/autoload/ale/job.vim	/^    let s:job_map = {}$/;"	v
s:jobs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:jobs = {}$/;"	v
s:jumppos	.vim/plugin/code_complete.vim	/^let s:jumppos = -1$/;"	v
s:keyMaps	.vim_runtime/sources_non_forked/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:kprange	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:l0	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^let s:l0 = -1$/;"	v
s:l1	.vim_runtime/sources_non_forked/vim-indent-object/plugin/indent-object.vim	/^let s:l1 = -1$/;"	v
s:language_id_of_filetype	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/ocamllsp.vim	/^let s:language_id_of_filetype = {$/;"	v
s:last_done_pos	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:last_done_pos = []$/;"	v
s:last_list	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^    let s:last_list = []$/;"	v
s:last_options	.vim_runtime/sources_non_forked/ale/autoload/ale/preview.vim	/^    let s:last_options = {}$/;"	v
s:last_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^let s:last_paste = { 'changedtick': -1, 'key': '', 'mode': 'n', 'count': 1, 'register': '' }$/;"	v
s:last_pattern_options	.vim_runtime/sources_non_forked/ale/autoload/ale/pattern_options.vim	/^let s:last_pattern_options = {}$/;"	v
s:last_pos	.vim_runtime/sources_non_forked/ale/autoload/ale/hover.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_pos	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_start	.vim/src/vjde_cs_completion.vim	/^let s:last_start = 0$/;"	v
s:last_time	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:laststatus	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^let s:laststatus = []$/;"	v
s:latency_debug_file	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:latency_debug_file = ''$/;"	v
s:lazycat_list	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:leading_operator_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*\\%(&\\=\\.\\)'$/;"	v
s:levelRegexpDict	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^let s:levelRegexpDict = {$/;"	v
s:lightGray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:lightGray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:lightGray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:lighter_grey	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:lighter_grey = [ '#bcbcbc', 250 ]$/;"	v
s:lighter_grey	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:lighter_grey = [ '#bcbcbc', 250 ]$/;"	v
s:lighter_grey	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:lighter_grey = [ '#bcbcbc', 250 ]$/;"	v
s:lime	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:lime = [ '#00ff00', 10 ]$/;"	v
s:lime	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:lime = [ '#00ff00', 10 ]$/;"	v
s:lime	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:lime = [ '#00ff00', 10 ]$/;"	v
s:lines	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.vim_runtime/sources_non_forked/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lint_timer	.vim_runtime/sources_non_forked/ale/autoload/ale.vim	/^let s:lint_timer = -1$/;"	v
s:linters	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^let s:linters = {}$/;"	v
s:lisp_regex	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:lisp_regex = '\\v[a-zA-Z_\\-][a-zA-Z_\\-0-9]*$'$/;"	v
s:log_diff_context	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:log_diff_context = '{"filename": fugitive#Find(v:val . from, a:dir), "lnum": get(offsets, v:key), "module": strpart(v:val, 0, len(a:state.base_module)) . from}'$/;"	v
s:log_file	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:lsp_linter_map	.vim_runtime/sources_non_forked/ale/autoload/ale/lsp_linter.vim	/^    let s:lsp_linter_map = {}$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:magenta = '#ffee99'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:magenta = '#A37ACC'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:magenta = '#d4bfff'$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:magenta   = ['#eb6eb7', 5]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:magenta   = ['#f275be', 5]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:magenta   = ['#ca4898', 5]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:magenta   = ['#dd0f9d', 5]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:magenta = '#ffee99'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:magenta = '#A37ACC'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:magenta = '#d4bfff'$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:magenta   = ['#eb6eb7', 5]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:magenta   = ['#f275be', 5]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:magenta   = ['#ca4898', 5]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:magenta   = ['#dd0f9d', 5]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:magenta = '#ffee99'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:magenta = '#A37ACC'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:magenta = '#d4bfff'$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:magenta   = ['#eb6eb7', 5]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:magenta   = ['#f275be', 5]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:magenta   = ['#ca4898', 5]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:magenta   = ['#dd0f9d', 5]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:magenta	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:maroon	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:maroon = [ '#800000', 1 ]$/;"	v
s:maroon	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:maroon = [ '#800000', 1 ]$/;"	v
s:maroon	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:maroon = [ '#800000', 1 ]$/;"	v
s:match_words	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:match_words	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:max	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^let s:max = []$/;"	v
s:maxDotsInExtension	.vim/plugin/a.vim	/^let s:maxDotsInExtension = 1$/;"	v
s:medium_grey	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:medium_grey  = [ '#585858', 240 ]$/;"	v
s:medium_grey	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:medium_grey  = [ '#585858', 240 ]$/;"	v
s:medium_grey	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:medium_grey  = [ '#585858', 240 ]$/;"	v
s:menu_char_prefix	.vim/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:merge_heads	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:merge_heads = ['MERGE_HEAD', 'REBASE_HEAD', 'CHERRY_PICK_HEAD', 'REVERT_HEAD']$/;"	v
s:messages	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:mode	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:mode	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:mode	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:modes	.vim/bundle/supertab/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	.vim/bundle/supertab/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:modes	.vim/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	.vim/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:mru_list_locked	.vim_runtime/sources_non_forked/mru.vim/plugin/mru.vim	/^let s:mru_list_locked = 0$/;"	v
s:mruf_map_string	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^let s:mruf_map_string = '!stridx(v:val, cwd) ? strpart(v:val, idx) : v:val'$/;"	v
s:n	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:name	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:name = '[BufExplorer]'$/;"	v
s:names	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^let s:names = { '~': 'Tilde', '`': 'BackQuote', '!': 'Bang', '@': 'At', '#': 'Hash', '$': 'Dollar', '%': 'Percent', '^': 'Caret',$/;"	v
s:native_filenames	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^let s:native_filenames = {}$/;"	v
s:navy	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:navy = [ '#000080', 4 ]$/;"	v
s:navy	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:navy	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:navy = [ '#000080', 4 ]$/;"	v
s:navy	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:navy	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:navy = [ '#000080', 4 ]$/;"	v
s:navy	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:new_log_session	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:next_sign_id	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nomodeline	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:nomodeline	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:nomodeline	.vim_runtime/sources_non_forked/vim-gitgutter/plugin/gitgutter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:non_bracket_continuation_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:none	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:none = [ 'NONE', 'NONE' ]$/;"	v
s:none	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:none = [ 'NONE', 'NONE' ]$/;"	v
s:none	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:none = [ 'NONE', 'NONE' ]$/;"	v
s:none	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:nord0	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord0	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord0	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord10	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord10	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord10	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord11	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord11	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord11	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord12	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord12	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord12	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord13	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord13	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord13	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord14	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord14	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord14	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord15	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord15	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord15	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord3	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord3	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord3	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord4	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord4	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord4	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord5	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord5	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord5	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord6	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord6	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord6	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord7	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord7	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord7	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord8	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord8	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord8	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord9	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:nord9	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:nord9	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:nowait	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:ns_id	.vim_runtime/sources_non_forked/ale/autoload/ale/highlight.vim	/^    let s:ns_id = nvim_create_namespace('ale_highlight')$/;"	v
s:ns_id	.vim_runtime/sources_non_forked/ale/autoload/ale/virtualtext.vim	/^    let s:ns_id = nvim_create_namespace('ale')$/;"	v
s:number_column	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:number_column = get(s:gb, g:gruvbox_number_column)$/;"	v
s:number_column	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:number_column = s:none$/;"	v
s:ob	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:object	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^let s:object = {}$/;"	v
s:ocre	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:ocre         = [ '#87875f', 101 ]$/;"	v
s:ocre	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:ocre         = [ '#87875f', 101 ]$/;"	v
s:ocre	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:ocre         = [ '#87875f', 101 ]$/;"	v
s:old_cpo	.vim_runtime/sources_non_forked/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:olive	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:olive = [ '#808000', 3 ]$/;"	v
s:olive	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:olive	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:olive = [ '#808000', 3 ]$/;"	v
s:olive	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:olive	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:olive = [ '#808000', 3 ]$/;"	v
s:olive	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:omni_start_map	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:omni_start_map = {$/;"	v
s:oneline	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	.vim_runtime/sources_non_forked/vim-markdown/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:opfirst	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let s:opfirst = '^' . get(g:,'typescript_opfirst',$/;"	v
s:opfirst	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:options_list	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:orange       = [ '#ff8700', 208 ]$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:orange = '#ff7733'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:orange = '#FF7733'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:orange = '#ffae57'$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:orange       = [ '#ff8700', 208 ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:orange = '#ff7733'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:orange = '#FF7733'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:orange = '#ffae57'$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:orange = s:getGruvColor('GruvboxOrange')$/;"	v
s:orange	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:orange       = [ '#ff8700', 208 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:orange = '#ff7733'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:orange = '#FF7733'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:orange = '#ffae57'$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:orange	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:originBuffer	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:originBuffer = 0$/;"	v
s:ou	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:overwrite	.vim_runtime/sources_non_forked/vim-snipmate/after/plugin/snipMate.vim	/^		let s:overwrite = 0$/;"	v
s:overwrite	.vim_runtime/sources_non_forked/vim-snipmate/after/plugin/snipMate.vim	/^		let s:overwrite = maparg('<S-Tab>', 'i') ==? '<Plug>SuperTabBackward'$/;"	v
s:overwrite	.vim_runtime/sources_non_forked/vim-snipmate/after/plugin/snipMate.vim	/^		let s:overwrite = maparg('<Tab>', 'i') ==? '<Plug>SuperTabForward'$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:black, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:black, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:white, s:purple ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.left   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.middle = [ [ s:medium_grey, s:darker_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.right  = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.left     = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.right    = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.error    = [ [ s:almost_black, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.left     = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.middle   = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.right    = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.warning  = [ [ s:almost_black, s:orange ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.left    = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.right   = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.left    = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.middle  = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.right   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.tabsel  = [ [ s:darker_grey, s:ocre ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.left     = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.right    = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e4452', s:term_white, s:term_grey ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef', '#292c33', s:term_blue, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ], [ '#61afef', '#292c33', s:term_blue, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379', '#292c33', s:term_green, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e4452', s:term_white, s:term_grey ], [ '#98c379', '#292c33', s:term_green, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75', '#292c33', s:term_red, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ], s:p.normal.right[1], [ '#e06c75', '#292c33', s:term_red, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678dd', '#292c33', s:term_purple, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple ], s:p.normal.right[1], [ '#c678dd', '#292c33', s:term_purple, s:term_black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = copy(s:p.normal.middle)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = copy(s:p.normal.middle)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.tabline.middle)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 ], [ '#121212', '#262626', 233, 235 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, 22 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 21 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ], [ '#bcbcbc', '#585858', 250, 240 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231, 124 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, 57 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.left    = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.left    = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.middle  = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.left   = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.left    = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['mediumcyan', 'darkestblue'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.right = [ [ 'darkestblue', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.middle = [ [ 'white', 'gray0' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.right = [ ['gray10', 'gray2'], ['white', 'gray1'], ['white', 'gray0'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray0' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray0' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray2' ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.visual.left = [ ['black', 'brightestorange', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.left =  [ [ s:gray, s:black ], [ s:black2, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.right = [ [ s:black, s:black2 ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.left = [ [ s:black, s:blue ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.right = [ [ s:gray, s:gray4 ], [ s:gray3, s:gray ], [ s:gray2, s:black2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.warning = [ [ s:gold, s:black2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.left = [ [ s:gray4, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.tabsel = [ [ s:blue, s:black ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.visual.left = [ [ s:black, s:violet ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:black, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:black, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:white, s:purple ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.left   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.middle = [ [ s:medium_grey, s:darker_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.right  = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.left     = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.right    = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.error    = [ [ s:almost_black, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.left     = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.middle   = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.right    = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.warning  = [ [ s:almost_black, s:orange ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.left    = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.right   = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.left    = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.middle  = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.right   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.tabsel  = [ [ s:darker_grey, s:ocre ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.left     = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.right    = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e4452', s:term_white, s:term_grey ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef', '#292c33', s:term_blue, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ], [ '#61afef', '#292c33', s:term_blue, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379', '#292c33', s:term_green, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e4452', s:term_white, s:term_grey ], [ '#98c379', '#292c33', s:term_green, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75', '#292c33', s:term_red, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ], s:p.normal.right[1], [ '#e06c75', '#292c33', s:term_red, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678dd', '#292c33', s:term_purple, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple ], s:p.normal.right[1], [ '#c678dd', '#292c33', s:term_purple, s:term_black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = copy(s:p.normal.middle)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = copy(s:p.normal.middle)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.tabline.middle)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 ], [ '#121212', '#262626', 233, 235 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, 22 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 21 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ], [ '#bcbcbc', '#585858', 250, 240 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231, 124 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, 57 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.left    = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.left    = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.middle  = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.left   = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.left    = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['mediumcyan', 'darkestblue'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.right = [ [ 'darkestblue', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.middle = [ [ 'white', 'gray0' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.right = [ ['gray10', 'gray2'], ['white', 'gray1'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray0' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray0' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray2' ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.visual.left = [ ['black', 'brightestorange', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.left =  [ [ s:gray, s:black ], [ s:black2, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.right = [ [ s:black, s:black2 ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.left = [ [ s:black, s:blue ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.right = [ [ s:gray, s:gray4 ], [ s:gray3, s:gray ], [ s:gray2, s:black2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.warning = [ [ s:gold, s:black2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.left = [ [ s:gray4, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.tabsel = [ [ s:blue, s:black ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.visual.left = [ [ s:black, s:violet ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p = {'normal':{}, 'inactive':{}, 'insert':{}, 'replace':{}, 'visual':{}, 'tabline':{}, 'terminal':{}}$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.left =  [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.middle = [ [ s:bg4, s:bg1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.right = [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.left = [ [ s:bg0, s:blue, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.right = [ [ s:bg0, s:blue ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.error = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.left = [ [ s:bg0, s:fg4, 'bold' ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.right = [ [ s:bg0, s:fg4 ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.warning = [ [ s:bg2, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.left = [ [ s:bg0, s:aqua, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.right = [ [ s:bg0, s:aqua ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.left = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.middle = [ [ s:bg0, s:bg0 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.right = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.tabsel = [ [ s:bg0, s:fg4 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.left = [ [ s:bg0, s:green, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.right = [ [ s:bg0, s:green ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.left = [ [ s:bg0, s:orange, 'bold' ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.right = [ [ s:bg0, s:orange ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:black, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:black, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:white, s:purple ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:statusline_active_fg, s:statusline_active_bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.left   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.middle = [ [ s:medium_grey, s:darker_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.right  = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.left     = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.right    = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.error    = [ [ s:almost_black, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.left     = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.middle   = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.right    = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.warning  = [ [ s:almost_black, s:orange ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.left    = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.right   = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.left    = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.middle  = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.right   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.tabsel  = [ [ s:darker_grey, s:ocre ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.left     = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.right    = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e4452', s:term_white, s:term_grey ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef', '#292c33', s:term_blue, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ], [ '#61afef', '#292c33', s:term_blue, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379', '#292c33', s:term_green, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e4452', s:term_white, s:term_grey ], [ '#98c379', '#292c33', s:term_green, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75', '#292c33', s:term_red, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ], s:p.normal.right[1], [ '#e06c75', '#292c33', s:term_red, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678dd', '#292c33', s:term_purple, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple ], s:p.normal.right[1], [ '#c678dd', '#292c33', s:term_purple, s:term_black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = copy(s:p.normal.middle)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = copy(s:p.normal.middle)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.tabline.middle)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 ], [ '#121212', '#262626', 233, 235 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, 22 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 21 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ], [ '#bcbcbc', '#585858', 250, 240 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231, 124 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, 57 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.left    = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.left    = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.middle  = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.left   = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.left    = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['mediumcyan', 'darkestblue'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.right = [ [ 'darkestblue', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.middle = [ [ 'white', 'gray0' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.right = [ ['gray10', 'gray2'], ['white', 'gray1'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray0' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray0' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray2' ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.visual.left = [ ['black', 'brightestorange', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.left =  [ [ s:gray, s:black ], [ s:black2, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.right = [ [ s:black, s:black2 ], [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.left = [ [ s:black, s:blue ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.right = [ [ s:gray, s:gray4 ], [ s:gray3, s:gray ], [ s:gray2, s:black2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.warning = [ [ s:gold, s:black2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.left = [ [ s:gray4, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.tabsel = [ [ s:blue, s:black ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.visual.left = [ [ s:black, s:violet ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:paren_pairs	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:parser_proto	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^let s:parser_proto = {}$/;"	v
s:partial_timers	.vim_runtime/sources_non_forked/ale/autoload/ale/util.vim	/^    let s:partial_timers = {}$/;"	v
s:paste_buffer_temporary_text	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_text = ''$/;"	v
s:paste_buffer_temporary_type	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_type = ''$/;"	v
s:pat	.vim_runtime/sources_non_forked/vim-coffee-script/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:path	.vim/ftplugin/html.vim	/^let s:path = expand('<sfile>:p:h')$/;"	v
s:path	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:path = &l:path$/;"	v
s:path_format_regex	.vim_runtime/sources_non_forked/ale/autoload/ale/command.vim	/^let s:path_format_regex = '\\v\\%s(%(:h|:t|:r|:e)*)'$/;"	v
s:path_subcommands	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:path_subcommands = {}$/;"	v
s:pattern	.vim_runtime/sources_non_forked/ale/ale_linters/desktop/desktop_file_validate.vim	/^let s:pattern = '\\v^(.+): ([a-z]+): (.+)$'$/;"	v
s:pattern	.vim_runtime/sources_non_forked/ale/ale_linters/json/jq.vim	/^let s:pattern = '^parse error: \\(.\\+\\) at line \\(\\d\\+\\), column \\(\\d\\+\\)$'$/;"	v
s:pattern	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^let s:pattern = '\\v^([a-zA-Z]?:?[^:]+):(\\d+)?:?(\\d+)?:? ([^:]+): (.+)$'$/;"	v
s:peach	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:peach	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:peach	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:pink	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:pink	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:pink	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:plugin_dir	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:popupItemResultList	.vim/autoload/omni/cpp/complete.vim	/^let s:popupItemResultList = []$/;"	v
s:pragma_error	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/gcc.vim	/^let s:pragma_error = '#pragma once in main file'$/;"	v
s:pre_less_cur_syn	.vim_runtime/sources_non_forked/vim-less/after/syntax/html.vim	/^   let s:pre_less_cur_syn = b:current_syntax$/;"	v
s:prepare_env	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:prev_wildignore	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:prev_wildignore = ''$/;"	v
s:preview_bufnr	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:preview_bufnr = 0$/;"	v
s:proj_cache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:proj_cache = {}$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^let s:prototype = tlib#Object#New({'_class': ['Filter_cnf'], 'name': 'cnf'}) "{{{2$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_cnfd'], 'name': 'cnfd'}) "{{{2$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_fuzzy'], 'name': 'fuzzy'}) "{{{2$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_glob'], 'name': 'glob'}) "{{{2$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^let s:prototype  = {'_class': ['object'], '_super': [], '_id': 0} "{{{2$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Test.vim	/^let s:prototype = tlib#Object#New({'_class': ['Test']}) "{{{2$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/TestChild.vim	/^let s:prototype = tlib#Test#New({'_class': ['TestChild']}) "{{{2$/;"	v
s:prototype	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^let s:prototype = tlib#Object#New({$/;"	v
s:purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:purple = [ '#800080', 5 ]$/;"	v
s:purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:purple = [ '#800080', 5 ]$/;"	v
s:purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:purple	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:purple = [ '#800080', 5 ]$/;"	v
s:purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:r	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:reCComment	.vim/autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
s:reComment	.vim/autoload/omni/cpp/tokenizer.vim	/^let s:reComment = s:reCComment.'\\|'.s:reCppComment$/;"	v
s:reCppComment	.vim/autoload/omni/cpp/tokenizer.vim	/^let s:reCppComment = '\\\/\\\/'$/;"	v
s:reCppKeyword	.vim/autoload/omni/cpp/tokenizer.vim	/^let s:reCppKeyword = '\\C\\<'.join(s:cppKeyword, '\\>\\|\\<').'\\>'$/;"	v
s:reCppOperatorOrPunctuator	.vim/autoload/omni/cpp/tokenizer.vim	/^let s:reCppOperatorOrPunctuator = escape(join(s:cppOperatorPunctuator, '\\|'), '*.\/^~[]')$/;"	v
s:reIncludeFilePart	.vim/autoload/omni/cpp/includes.vim	/^let s:reIncludeFilePart = '\\(<\\|"\\)\\(\\f\\|\\s\\)\\+\\(>\\|"\\)'$/;"	v
s:rePreprocIncludeFile	.vim/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludeFile = s:rePreprocIncludePart . s:reIncludeFilePart$/;"	v
s:rePreprocIncludePart	.vim/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludePart = '\\C#\\s*include\\s*'$/;"	v
s:rebase_abbrevs	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#ff0000', 9 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:red          = [ '#af5f5f', 131 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:red       = ['#ed4a46', 1]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:red       = ['#fa5750', 1]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:red       = ['#d2212d', 1]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:red       = ['#d6000c', 1]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:red = [ '#d70000', '160' ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#ff0000', 9 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:red          = [ '#af5f5f', 131 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:red       = ['#ed4a46', 1]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:red       = ['#fa5750', 1]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:red       = ['#d2212d', 1]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:red       = ['#d6000c', 1]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:red = [ '#d70000', '160' ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:red[1]    = 9$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#ff0000', 9 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:red          = [ '#af5f5f', 131 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:red = '#f07178'$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:red       = ['#ed4a46', 1]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:red       = ['#fa5750', 1]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:red       = ['#d2212d', 1]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:red       = ['#d6000c', 1]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:red = [ '#d70000', '160' ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:red1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:red2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:red2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:redirects	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:redirects = {}$/;"	v
s:ref_header	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:ref_header = '\\%(Merge\\|Rebase\\|Upstream\\|Pull\\|Push\\)'$/;"	v
s:references_map	.vim_runtime/sources_non_forked/ale/autoload/ale/references.vim	/^let s:references_map = {}$/;"	v
s:register	.vim_runtime/sources_non_forked/tlib/autoload/tlib/signs.vim	/^let s:register = {}$/;"	v
s:rel	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:rename_map	.vim_runtime/sources_non_forked/ale/autoload/ale/rename.vim	/^let s:rename_map = {}$/;"	v
s:replacement_expr	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:replacement_expr =$/;"	v
s:repo_prototype	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:restoreframecmd	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^let s:restoreframecmd = ''$/;"	v
s:resume_queue	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  let s:resume_queue = []$/;"	v
s:retry_keys	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:retry_keys = ""$/;"	v
s:revision	.vim/ftplugin/xml.vim	/^let s:revision=$/;"	v
s:rootNERDTreePath	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:ruby_deindent_keywords	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	.vim_runtime/sources_non_forked/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:running	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:running = 0$/;"	v
s:runtime_loaded_map	.vim_runtime/sources_non_forked/ale/autoload/ale/linter.vim	/^let s:runtime_loaded_map = {}$/;"	v
s:s	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_background	.vim_runtime/sources_non_forked/vim-zenroom2/plugin/zenroom2.vim	/^    let s:save_background = &background$/;"	v
s:save_background	.vim_runtime/sources_non_forked/vim-zenroom2/plugin/zenroom2.vim	/^let s:save_background = ""$/;"	v
s:save_cpo	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/supertab/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.vim/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/my_plugins/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_forked/vim-peepopen/plugin/peepopen.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/compiler/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/compiler/rustc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/ftplugin/rust/tagbar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/plugin/cargo.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/plugin/rust.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/rust.vim/syntax_checkers/rust/rustc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tabular/after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/map.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/normal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/notify.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/paragraph.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/signs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/textobjects.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/tlib/plugin/02tlib.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-expand-region/plugin/expand_region.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-flake8/autoload/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-flake8/ftplugin/python_flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-snipmate/after/plugin/snipMate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim_runtime/sources_non_forked/vim-snipmate/plugin/snipMate.vim	/^let s:save_cpo = &cpo$/;"	v
s:savecpo	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	.vim_runtime/sources_non_forked/tabular/plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saved_char	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_char = ''$/;"	v
s:saved_cpo	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	.vim_runtime/sources_non_forked/editorconfig-vim/autoload/editorconfig_core/util.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	.vim_runtime/sources_non_forked/editorconfig-vim/plugin/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_keys	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_keys = ""$/;"	v
s:saved_line	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_line = 0$/;"	v
s:saved_linecount	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_linecount = -1$/;"	v
s:saved_pos	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^let s:saved_pos = []$/;"	v
s:saved_selectmode	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^let s:saved_selectmode = &selectmode$/;"	v
s:scanned_files	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:scanned_files = s:c['scanned_files']$/;"	v
s:script_path	.vim_runtime/sources_non_forked/ale/autoload/ale/gradle.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:section_commit_pattern	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_pattern	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:sep	.vim_runtime/sources_non_forked/ale/autoload/ale/c.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/eslint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/solhint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	.vim_runtime/sources_non_forked/ale/autoload/ale/python.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:set_path_handler	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:set_path_handler = {}$/;"	v
s:settings	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings = {$/;"	v
s:settings_if_default	.vim_runtime/sources_non_forked/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings_if_default = {$/;"	v
s:should_complete_map	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:should_complete_map = {$/;"	v
s:sigil	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/legacy.vim	/^let s:sigil = nr2char(31)$/;"	v
s:sign_column	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^    let s:sign_column = get(s:gb, g:gruvbox_sign_column)$/;"	v
s:sign_column	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:signature_list	.vim/plugin/code_complete.vim	/^let s:signature_list = []$/;"	v
s:silver	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:silver = [ '#c0c0c0', 7 ]$/;"	v
s:silver	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:silver = [ '#c0c0c0', 7 ]$/;"	v
s:silver	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:silver = [ '#c0c0c0', 7 ]$/;"	v
s:skip_after_opening_paren	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_expr	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),0),'name') =~? '".s:syng_strcom."'"$/;"	v
s:skip_expr	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:solarized_termcolors	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:solarized_termcolors	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:solarized_termcolors	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:solarized_termtrans_default	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sort_by	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:sort_by = ["number", "name", "fullpath", "mru", "extension"]$/;"	v
s:sorted_items	.vim_runtime/sources_non_forked/ale/autoload/ale/pattern_options.vim	/^let s:sorted_items = []$/;"	v
s:sp_back	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:special_chars	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^let s:special_chars = "$`\\n"$/;"	v
s:special_chars_syn_pattern	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi\\\\S"$/;"	v
s:special_keys	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:special_keys = {$/;"	v
s:spell_cluster	.vim_runtime/sources_non_forked/vim-ruby/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:splat_regex	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:splitMode	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:splitMode = ""$/;"	v
s:state_proto	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^let s:state_proto = {}$/;"	v
s:status	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:status	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:status	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:statusline	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^let s:statusline = []$/;"	v
s:statusline_active_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_active_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_active_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_inactive_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:statusline_inactive_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:statusline_inactive_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:stop_statement	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:subcommands_before_2_5	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:subcommands_before_2_5 = [$/;"	v
s:success	.vim/src/vjde_cs_completion.vim	/^let s:success=1$/;"	v
s:suffixesadd	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:suite	.vim/bundle/lightline.vim/test/autocmd.vim	/^let s:suite = themis#suite('autocmd')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/popup.vim	/^let s:suite = themis#suite('popup')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/quickfix.vim	/^let s:suite = themis#suite('quickfix')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	.vim/bundle/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/autocmd.vim	/^let s:suite = themis#suite('autocmd')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/popup.vim	/^let s:suite = themis#suite('popup')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/quickfix.vim	/^let s:suite = themis#suite('quickfix')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/autocmd.vim	/^let s:suite = themis#suite('autocmd')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/popup.vim	/^let s:suite = themis#suite('popup')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/quickfix.vim	/^let s:suite = themis#suite('quickfix')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:supports_sign_groups	.vim_runtime/sources_non_forked/ale/autoload/ale/sign.vim	/^let s:supports_sign_groups = has('nvim-0.4.2') || has('patch-8.1.614')$/;"	v
s:supports_star	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:symbol_map	.vim_runtime/sources_non_forked/ale/autoload/ale/symbol.vim	/^let s:symbol_map = {}$/;"	v
s:syng_com	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let s:syng_com = 'comment\\|doc'$/;"	v
s:syng_str	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let s:syng_str = 'string\\|template\\|special'$/;"	v
s:syng_strcom	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^let s:syng_strcom = 'string\\|comment\\|regex\\|special\\|doc\\|template\\%(braces\\)\\@!'$/;"	v
s:syng_strcom	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc + [$/;"	v
s:syng_string	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	.vim_runtime/sources_non_forked/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:system	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^let s:system = function(get(g:, 'webapi#system_function', 'system'))$/;"	v
s:system	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^let s:system = function(get(g:, 'webapi#system_function', 'system'))$/;"	v
s:szCurrentWorkingDir	.vim/autoload/omni/cpp/complete.vim	/^let s:szCurrentWorkingDir = getcwd()$/;"	v
s:t_none	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tabHelp	.vim/bundle/supertab/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tabHelp	.vim/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tabcnt	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:tabcnt	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:tabcnt	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:table	.vim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:table	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:table	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:tabline	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline_active_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_active_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_active_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_inactive_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabline_inactive_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabline_inactive_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabnr	.vim/bundle/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tabnr	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tabnr	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tag	.vim_runtime/sources_non_forked/vim-pug/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:teal	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:teal = [ '#008080', 6 ]$/;"	v
s:teal	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:teal = [ '#008080', 6 ]$/;"	v
s:teal	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:teal = [ '#008080', 6 ]$/;"	v
s:temp00	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_buffer	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_dir	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_dir = fnamemodify(ale#util#Tempname(), ':h')$/;"	v
s:temp_dir	.vim_runtime/sources_non_forked/ale/autoload/ale/path.vim	/^let s:temp_dir = ale#path#Simplify(fnamemodify(ale#util#Tempname(), ':h:h'))$/;"	v
s:temp_files	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_from	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_from = tempname()$/;"	v
s:temp_regex_prefix	.vim_runtime/sources_non_forked/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_regex_prefix =$/;"	v
s:temp_scripts	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_scripts = {}$/;"	v
s:term_black	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_black	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_black	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_blue	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_blue	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_blue	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_green	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_green	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_green	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_grey	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_grey	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_grey	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_purple	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_purple	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_purple	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_red	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_red	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_red	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_white	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_white	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_white	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:term_yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:term_yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:terminal_italic	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:test_repo	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:text	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:timer_args	.vim_runtime/sources_non_forked/ale/autoload/ale/list.vim	/^    let s:timer_args = {}$/;"	v
s:timer_id	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:timer_id = -1$/;"	v
s:timestamp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^let s:timestamp = -1$/;"	v
s:timestamps	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^let s:timestamps = {}$/;"	v
s:tlist_app_name	.vim/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	.vim/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	.vim/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	.vim/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	.vim/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	.vim/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	.vim/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	.vim/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	.vim/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	.vim/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	.vim/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	.vim/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	.vim/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	.vim/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	.vim/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	.vim/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	.vim/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:to_mode	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:to_mode = ''$/;"	v
s:trace_hl	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^let s:trace_hl = {'error': 'ErrorMsg', 'fatal': 'ErrorMsg', 'warning': 'WarningMsg'}$/;"	v
s:tree_up_dir_line	.vim_runtime/sources_non_forked/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trees	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:trigger_character_map	.vim_runtime/sources_non_forked/ale/autoload/ale/completion.vim	/^let s:trigger_character_map = {$/;"	v
s:type	.vim/src/vjde_cs_completion.vim	/^let s:type=''$/;"	v
s:types	.vim/bundle/supertab/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	.vim/bundle/supertab/plugin/supertab.vim	/^  let s:types =$/;"	v
s:types	.vim/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	.vim/plugin/supertab.vim	/^  let s:types =$/;"	v
s:types	.vim/src/vjde_cs_completion.vim	/^let s:types=[]$/;"	v
s:types	.vim_runtime/sources_non_forked/bufexplorer/plugin/bufexplorer.vim	/^let s:types = {"fullname": ':p', "path": ':p:h', "relativename": ':~:.', "relativepath": ':~:.:h', "shortname": ':t'}$/;"	v
s:types	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^let s:types = ['fil', 'buf', 'mru']$/;"	v
s:types	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:u	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undercurl	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:underline = ''$/;"	v
s:underline	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:underline = 'underline,'$/;"	v
s:undo_ftplugin	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.vim_runtime/sources_non_forked/vim-pug/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:uniq	.vim/bundle/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:uniq	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:uniq	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:use_word_boundary	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:use_word_boundary = 1$/;"	v
s:value	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^let s:value = []$/;"	v
s:var	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(<\\%(cword\\|cWORD\\|cexpr\\|cfile\\|sfile\\|slnum\\|afile\\|abuf\\|amatch' . (has('clientserver') ? '\\|client' : '') . '\\)>\\|%\\|#<\\=\\d\\+\\|##\\=\\)'$/;"	v
s:version_cache	.vim_runtime/sources_non_forked/ale/ale_linters/java/eclipselsp.vim	/^let s:version_cache = {}$/;"	v
s:version_cache	.vim_runtime/sources_non_forked/ale/autoload/ale/semver.vim	/^let s:version_cache = {}$/;"	v
s:version_file	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:vert_split	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:vert_split = get(s:gb, g:gruvbox_vert_split)$/;"	v
s:vert_split	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:vert_split = s:bg0$/;"	v
s:veryDarkGray	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:veryDarkGray	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:veryDarkGray	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:vim_bg	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_fg	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_markdown_folding_level	.vim_runtime/sources_non_forked/vim-markdown/after/ftplugin/markdown.vim	/^let s:vim_markdown_folding_level = get(g:, "vim_markdown_folding_level", 1)$/;"	v
s:vim_runtime	.vim_runtime/vimrcs/plugins_config.vim	/^let s:vim_runtime = expand('<sfile>:p:h')."\/.."$/;"	v
s:violet	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:violet = [ '#cf73e6', '170' ]$/;"	v
s:violet	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:violet	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:violet = [ '#cf73e6', '170' ]$/;"	v
s:violet	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:violet	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:violet = [ '#cf73e6', '170' ]$/;"	v
s:violet	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:violet	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:visual_bg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_bg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_bg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_fg	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:visual_fg	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:visual_fg	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:vjde_cs_default_types	.vim/src/vjde_cs_completion.vim	/^let s:vjde_cs_default_types={'context' : 'System.Web.HttpContext' , 'Request' : ' System.Web.HttpRequest' , 'Response' : 'System.Web.HttpResponse'}$/;"	v
s:vmode	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:vopen_warning	.vim_runtime/autoload/pathogen.vim	/^let s:vopen_warning = 0$/;"	v
s:white	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:white = [ '#ffffff', 15 ]$/;"	v
s:white	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:white	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:white = [ '#ffffff', 15 ]$/;"	v
s:white	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:white	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:white = [ '#ffffff', 15 ]$/;"	v
s:white	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:width	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^let s:width = []$/;"	v
s:wig_cond	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:window	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:window	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:window	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:winid	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:winid = 0$/;"	v
s:word_regex_list	.vim_runtime/sources_non_forked/ale/ale_linters/vim/vint.vim	/^let s:word_regex_list = [$/;"	v
s:worktree_for_dir	.vim_runtime/sources_non_forked/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:yankstack_tail	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^let s:yankstack_tail = []$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#ffff00', 11 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:yellow       = [ '#ffffaf', 229 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:yellow = '#e6b673'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:yellow = '#E6B673'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:yellow = '#ffc44c'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:yellow    = ['#ad8900', 3]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:yellow    = ['#c49700', 3]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	.vim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#ffff00', 11 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:yellow       = [ '#ffffaf', 229 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:yellow = '#e6b673'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:yellow = '#E6B673'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:yellow = '#ffc44c'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:yellow    = ['#ad8900', 3]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:yellow    = ['#c49700', 3]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:yellow = s:getGruvColor('GruvboxYellow')$/;"	v
s:yellow	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	.vim_runtime/sources_non_forked/gruvbox/colors/gruvbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#ffff00', 11 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:yellow       = [ '#ffffaf', 229 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:yellow = '#e6b673'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:yellow = '#E6B673'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:yellow = '#ffc44c'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:yellow    = ['#ad8900', 3]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:yellow    = ['#c49700', 3]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:yellow	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	.vim_runtime/sources_non_forked/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:z	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
sTagFile	.vim/src/readtags.c	/^struct sTagFile {$/;"	s	file:
sTagFile::__anon2::ignorecase	.vim/src/readtags.c	/^	    short ignorecase;$/;"	m	struct:sTagFile::__anon2	file:	access:public
sTagFile::__anon2::name	.vim/src/readtags.c	/^	    const char *name;$/;"	m	struct:sTagFile::__anon2	file:	access:public
sTagFile::__anon2::nameLength	.vim/src/readtags.c	/^	    size_t nameLength;$/;"	m	struct:sTagFile::__anon2	file:	access:public
sTagFile::__anon2::partial	.vim/src/readtags.c	/^	    short partial;$/;"	m	struct:sTagFile::__anon2	file:	access:public
sTagFile::__anon2::pos	.vim/src/readtags.c	/^	    off_t pos; $/;"	m	struct:sTagFile::__anon2	file:	access:public
sTagFile::__anon3::list	.vim/src/readtags.c	/^	    tagExtensionField *list;$/;"	m	struct:sTagFile::__anon3	file:	access:public
sTagFile::__anon3::max	.vim/src/readtags.c	/^	    unsigned short max;$/;"	m	struct:sTagFile::__anon3	file:	access:public
sTagFile::__anon4::author	.vim/src/readtags.c	/^	char *author;$/;"	m	struct:sTagFile::__anon4	file:	access:public
sTagFile::__anon4::name	.vim/src/readtags.c	/^	char *name;$/;"	m	struct:sTagFile::__anon4	file:	access:public
sTagFile::__anon4::url	.vim/src/readtags.c	/^	char *url;$/;"	m	struct:sTagFile::__anon4	file:	access:public
sTagFile::__anon4::version	.vim/src/readtags.c	/^	char *version;$/;"	m	struct:sTagFile::__anon4	file:	access:public
sTagFile::fields	.vim/src/readtags.c	/^    } fields;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon3	file:	access:public
sTagFile::format	.vim/src/readtags.c	/^    short format;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::fp	.vim/src/readtags.c	/^    FILE* fp;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::initialized	.vim/src/readtags.c	/^    short initialized;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::line	.vim/src/readtags.c	/^    vstring line;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::name	.vim/src/readtags.c	/^    vstring name;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::pos	.vim/src/readtags.c	/^    off_t pos;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::program	.vim/src/readtags.c	/^    } program;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon4	file:	access:public
sTagFile::search	.vim/src/readtags.c	/^    } search;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon2	file:	access:public
sTagFile::size	.vim/src/readtags.c	/^    off_t size;$/;"	m	struct:sTagFile	file:	access:public
sTagFile::sortMethod	.vim/src/readtags.c	/^    sortType sortMethod;$/;"	m	struct:sTagFile	file:	access:public
s_mutex	tests/test_thread.cpp	/^rainbow::RWMutex s_mutex;$/;"	v
safe_printf	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:safe_printf(format, ...)$/;"	f
samerootsyml	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanstail	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save_fold_state	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:save_fold_state()$/;"	f
save_last_seen_change	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
save_pos	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:save_pos(f,...)$/;"	f
savebookmark	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
scrolledwindow2	.vim/src/previewwindow.cpp	/^	GtkWidget *scrolledwindow2=NULL;\/\/		init_list_store();$/;"	v
scrolledwindow3	.vim/src/previewwindow.cpp	/^	GtkWidget *scrolledwindow3=NULL;\/\/		init_list_store();$/;"	v
search	.vim/src/readtags.c	/^    } search;$/;"	m	struct:sTagFile	typeref:struct:sTagFile::__anon2	file:	access:public
searchDefine	.vim/src/readtags.c	/^static int searchDefine ;$/;"	v	file:
searchsyn	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
select_in_visual_mode	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:select_in_visual_mode(region)$/;"	f
select_region	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:select_region()$/;"	f
semi	.vim_runtime/sources_non_forked/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f	access:public
send	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:send(self,func,...)$/;"	f
sep	.vim/src/readtags.c	809;"	d	file:
sep	.vim/src/readtags.c	827;"	d	file:
separator	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
setAppender	rainbow/log.h	/^    void setAppender(LogLevel::Level val) { m_level = val; }$/;"	f	class:rainbow::Logger	access:public	signature:(LogLevel::Level val)
setFormatter	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.cpp	/^/;"	p	file:	signature:(m_formatter)
setFormatter	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%rainbow%log.h	/^/;"	f	signature:(LogFormatter::ptr val)
setFormatter	rainbow/log.cpp	/^void LogAppender::setFormatter(LogFormatter::ptr val) {$/;"	f	class:rainbow::LogAppender	signature:(LogFormatter::ptr val)
setFormatter	rainbow/log.cpp	/^void Logger::setFormatter(LogFormatter::ptr val) {$/;"	f	class:rainbow::Logger	signature:(LogFormatter::ptr val)
setFormatter	rainbow/log.cpp	/^void Logger::setFormatter(const std::string& val) {$/;"	f	class:rainbow::Logger	signature:(const std::string& val)
setFormatter	rainbow/log.h	/^    void setFormatter(LogFormatter::ptr val);$/;"	p	class:rainbow::LogAppender	access:public	signature:(LogFormatter::ptr val)
setFormatter	rainbow/log.h	/^    void setFormatter(LogFormatter::ptr val);$/;"	p	class:rainbow::Logger	access:public	signature:(LogFormatter::ptr val)
setFormatter	rainbow/log.h	/^    void setFormatter(const std::string& val);$/;"	p	class:rainbow::Logger	access:public	signature:(const std::string& val)
setLevel	rainbow/log.cpp	/^void LogAppender::setLevel(const LogLevel::Level& level) {$/;"	f	class:rainbow::LogAppender	signature:(const LogLevel::Level& level)
setLevel	rainbow/log.h	/^    void setLevel(LogLevel::Level level) { m_level = level; }$/;"	f	class:rainbow::Logger	access:public	signature:(LogLevel::Level level)
setLevel	rainbow/log.h	/^    void setLevel(const LogLevel::Level& level);$/;"	p	class:rainbow::LogAppender	access:public	signature:(const LogLevel::Level& level)
setLoaded	.vim/src/vjde/completion/ClassPathEntry.java	/^    public void setLoaded(boolean loaded) {$/;"	m	class:ClassPathEntry	access:public	signature:(boolean loaded)
setValue	rainbow/config.h	/^    void setValue(const T& v) { $/;"	f	class:rainbow::ConfigVar	access:public	signature:(const T& v)
set_color	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:set_color(group, attr, color)$/;"	f
set_file_content	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/benchmark_spec.rb	/^def set_file_content(string)$/;"	f
set_file_content	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def set_file_content(string)$/;"	f
set_fold_levels	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:set_fold_levels()$/;"	f
set_hang_closing	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def set_hang_closing(value)$/;"	f
set_path_handler.err	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.err(buffer) abort$/;"	f
set_path_handler.out	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.out(buffer, path) abort$/;"	f
set_precedence	.vim/bundle/supertab/ftplugin/html.vim	/^        let set_precedence = !eclim#util#ListContains(natures, 'php')$/;"	v
set_precedence	.vim/bundle/supertab/ftplugin/html.vim	/^  let set_precedence = 1$/;"	v
set_rust_filetype	.vim_runtime/sources_non_forked/rust.vim/ftdetect/rust.vim	/^function! s:set_rust_filetype() abort$/;"	f
set_variables	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/astyle.vim	/^function! s:set_variables() abort$/;"	f
set_variables	.vim_runtime/sources_non_forked/ale/autoload/ale/fixers/clangtidy.vim	/^function! s:set_variables() abort$/;"	f
set_yankstack_head	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:set_yankstack_head(entry)$/;"	f
setentries	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
setf	.vim_runtime/sources_non_forked/vim-ruby/ftdetect/ruby.vim	/^function! s:setf(filetype) abort$/;"	f
setf	.vim_runtime/sources_non_forked/vim-ruby/ftdetect/ruby_extra.vim	/^function! s:setf(filetype) abort$/;"	f
setlines_post	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_post()$/;"	f
setlines_pre	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_pre(...)$/;"	f
settype	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setup_pad	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:setup_pad(bufnr, vert, size, repel)$/;"	f
setup_path	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_path(bufnr, continuation)$/;"	f
setupblank	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
sfile	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:sfile() abort$/;"	f
sfile	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:sfile() abort$/;"	f
shellesc	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellwords	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:shellwords(str) abort$/;"	f
shellwords	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:shellwords(str) abort$/;"	f
shiftwidth	.vim_runtime/sources_non_forked/rust.vim/indent/rust.vim	/^    function! s:shiftwidth()$/;"	f
shiftwidth	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def shiftwidth$/;"	f
shortest	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_compute_candidates	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:should_compute_candidates(mode)$/;"	f
showMenu	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
show_doc_thread	.vim/src/previewwindow.cpp	/^	gboolean show_doc_thread(gpointer data) ;\/\/show the document;$/;"	p	file:	signature:(gpointer data)
show_doc_thread	.vim/src/previewwindow.cpp	/^	gboolean show_doc_thread(gpointer data) {$/;"	f	signature:(gpointer data)
show_doc_window	.vim/src/previewwindow.cpp	/^	gboolean show_doc_window(gpointer data) ;\/\/show the document;$/;"	p	file:	signature:(gpointer data)
show_doc_window	.vim/src/previewwindow.cpp	/^	gboolean show_doc_window(gpointer data) {\/\/show the document;$/;"	f	signature:(gpointer data)
show_yank	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:show_yank(yank, index)$/;"	f
show_yanks	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:show_yanks()$/;"	f
sign	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sign(status)$/;"	f
size	.vim/src/readtags.c	/^    off_t size;$/;"	m	struct:sTagFile	file:	access:public
size	.vim/src/readtags.c	/^    size_t size;$/;"	m	struct:__anon1	file:	access:public
sizeXY	.vim/src/lex.yy.c	/^SIZE sizeXY; $/;"	v
skip	.vim/bundle/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort " Vim 8.2.0257 (00f3b4e007), 8.2.0991 (0fe937fd86), 8.2.0996 (40a019f157)$/;"	f
skip	.vim/bundle/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort$/;"	f
skip	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort " Vim 8.2.0257 (00f3b4e007), 8.2.0991 (0fe937fd86), 8.2.0996 (40a019f157)$/;"	f
skip	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort$/;"	f
skip	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort " Vim 8.2.0257 (00f3b4e007), 8.2.0991 (0fe937fd86), 8.2.0996 (40a019f157)$/;"	f
skip	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort$/;"	f
skip_func	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:skip_func()$/;"	f
skip_latency_measure	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:skip_latency_measure()$/;"	f
snakecase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:snakecase(word)$/;"	f
snipMate#BackwardsSnippet	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#BackwardsSnippet() abort$/;"	f
snipMate#CanBeTriggered	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#CanBeTriggered() abort$/;"	f
snipMate#DefaultPool	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#DefaultPool(scopes, trigger, result) abort$/;"	f
snipMate#GetSnippets	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#GetSnippets(scopes, trigger) abort$/;"	f
snipMate#GetSnippetsForWordBelowCursor	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#GetSnippetsForWordBelowCursor(word, exact) abort$/;"	f
snipMate#GetSnippetsForWordBelowCursorForComplete	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#GetSnippetsForWordBelowCursorForComplete(word) abort$/;"	f
snipMate#OpenSnippetFiles	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#OpenSnippetFiles() abort$/;"	f
snipMate#ReadSnippetsFile	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#ReadSnippetsFile(file) abort$/;"	f
snipMate#ScopesByFile	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#ScopesByFile() abort$/;"	f
snipMate#SetByPath	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#SetByPath(dict, trigger, path, snippet, bang, snipversion) abort$/;"	f
snipMate#ShowAvailableSnips	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#ShowAvailableSnips() abort$/;"	f
snipMate#TriggerSnippet	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#TriggerSnippet(...) abort$/;"	f
snipMate#WordBelowCursor	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#WordBelowCursor() abort$/;"	f
snipMate#expandSnip	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#expandSnip(snip, version, col) abort$/;"	f
snipMate#placeholder_str	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#placeholder_str(num, stops) abort$/;"	f
snipMate#sniplist_str	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#sniplist_str(snippet, stops) abort$/;"	f
snipMate_python_demo#Activate	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate_python_demo.vim	/^fun! snipMate_python_demo#Activate() abort$/;"	f
snipMate_python_demo#FunctionsFromCurrentFileAndTags	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate_python_demo.vim	/^fun! snipMate_python_demo#FunctionsFromCurrentFileAndTags(scopes, trigger, result) abort$/;"	f
snipmate#jumping#state	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! snipmate#jumping#state() abort$/;"	f
snipmate#legacy#build_stops	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/legacy.vim	/^function! snipmate#legacy#build_stops(snip, lnum, col, indent) abort$/;"	f
snipmate#legacy#process_snippet	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/legacy.vim	/^function! snipmate#legacy#process_snippet(snip) abort$/;"	f
snipmate#legacy#sigil	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/legacy.vim	/^let snipmate#legacy#sigil = s:sigil$/;"	v
snipmate#parse#snippet	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! snipmate#parse#snippet(text, ...) abort$/;"	f
snipmate#util#add_methods	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/util.vim	/^function! snipmate#util#add_methods(sfile, namespace, methods) abort$/;"	f
snipmate#util#eval	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/util.vim	/^function! snipmate#util#eval(arg)$/;"	f
snipmate#util#tabwidth	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/util.vim	/^function! snipmate#util#tabwidth()$/;"	f
snipmate_changes	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            aug snipmate_changes$/;"	a
snippet_dirs	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:snippet_dirs() abort$/;"	f
snippet_filenames	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:snippet_filenames(scope, trigger) abort$/;"	f
sort	.vim/src/readtags.h	/^		sortType sort;$/;"	m	struct:__anon7::__anon9	access:public
sort	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:sort(a,b)$/;"	f
sortByLength	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:sortByLength(i1, i2)$/;"	f
sortMethod	.vim/src/readtags.c	/^    sortType sortMethod;$/;"	m	struct:sTagFile	file:	access:public
sortType	.vim/src/readtags.h	/^} sortType ;$/;"	t	typeref:enum:__anon5
sort_text_object	.vim_runtime/sources_non_forked/vim-expand-region/autoload/expand_region.vim	/^function! s:sort_text_object(l, r)$/;"	f
source_snippet	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipMate.vim	/^function! s:source_snippet() abort$/;"	f
space	.vim/src/vjde/completion/Struts2Configure.java	/^		public String space;$/;"	f	class:Struts2Configure.MyAction	access:public
space	.vim/src/vjde/completion/Struts2Simple.java	/^		public String space;$/;"	f	class:Struts2Simple.MyAction	access:public
space_before_function_paren	.vim_runtime/sources_non_forked/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f	access:public
spacecase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:spacecase(word)$/;"	f
split	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:split(str, delimiter)$/;"	f
src	.vim/src/vjde/completion/Document.java	/^	String src;$/;"	f	class:Document	access:default
srcdirs	Makefile	/^srcdirs := rainbow tests$/;"	m
srcs	Makefile	/^srcs := thread.cpp config.cpp log.cpp util.cpp test_thread.cpp$/;"	m
stab	.vim/bundle/supertab/plugin/supertab.vim	/^        let stab = ''$/;"	v
stab	.vim/bundle/supertab/plugin/supertab.vim	/^        let stab = substitute(stab, '()$', '', '')$/;"	v
stab	.vim/bundle/supertab/plugin/supertab.vim	/^        let stab = substitute(stab, '<SID>\\c', '<SNR>' . existing_stab.sid . '_', '')$/;"	v
stab	.vim/bundle/supertab/plugin/supertab.vim	/^      let stab = substitute(stab, '\\(<[-a-zA-Z0-9]\\+>\\)', '\\\\\\1', 'g')$/;"	v
stab	.vim/bundle/supertab/plugin/supertab.vim	/^    let stab = maparg('<s-tab>', 'i')$/;"	v
stage	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
start_latency_measure	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:start_latency_measure()$/;"	f
state_find_next_stop	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_find_next_stop(backwards) dict abort$/;"	f
state_find_update_objects	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_find_update_objects(item) dict abort$/;"	f
state_jump_stop	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_jump_stop(backwards) dict abort$/;"	f
state_remove	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_remove() dict abort$/;"	f
state_remove_nested	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_remove_nested(...) dict abort$/;"	f
state_select_word	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_select_word() dict abort$/;"	f
state_set_stop	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_set_stop(backwards) dict abort$/;"	f
state_update	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_update(item, change_len, mirror_change) dict abort$/;"	f
state_update_changes	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_update_changes() dict abort$/;"	f
state_update_mirrors	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/jumping.vim	/^function! s:state_update_mirrors(change) dict abort$/;"	f
status	.vim/src/readtags.h	/^	} status;$/;"	m	struct:__anon7	typeref:struct:__anon7::__anon8	access:public
std::endl	.vim_runtime/temp_dirs/undodir/%home%zhangyu%rainbow%tests%test_config.cpp	/^	·/;"	m	class:std	file:
stop	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let stop = [2, 'abc']$/;"	v
stop	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^            let stop = b:snip_state.stops[1]$/;"	v
stop_job_if_exists	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:stop_job_if_exists()$/;"	f
stop_timer_if_exists	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:stop_timer_if_exists()$/;"	f
stoped	.vim/src/lex.yy.c	/^BOOL stoped ;$/;"	v
stoped	.vim/src/tipswnd.c	/^BOOL stoped ;$/;"	v
strip	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:strip(str)$/;"	f
strip_trailing_new_line	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
strip_white_space	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
strnuppercmp	.vim/src/readtags.c	/^static int strnuppercmp (const char *s1, const char *s2, size_t n)$/;"	f	file:	signature:(const char *s1, const char *s2, size_t n)
strpart	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:strpart(s, i, l)$/;"	f
struppercmp	.vim/src/readtags.c	/^static int struppercmp (const char *s1, const char *s2)$/;"	f	file:	signature:(const char *s1, const char *s2)
strwidth	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^	fu! s:strwidth(str)$/;"	f
sub	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subesc	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:subesc(pattern)$/;"	f
sublist	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
subseparator	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
subseparator	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
subseparator	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
subseparator	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
subseparator	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
subseparator	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
substitute_command	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:substitute_command(cmd,bad,good,flags)$/;"	f
substitute_paste	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:substitute_paste(offset, current_mode)$/;"	f
substitute_visual	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/legacy.vim	/^function! s:substitute_visual(snippet, visual) abort$/;"	f
subvert_dispatcher	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:subvert_dispatcher(bang,line1,line2,count,args)$/;"	f
suite.active_inactive	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
suite.active_inactive	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
suite.active_inactive	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/autocmd.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/popup.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/quickfix.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/autocmd.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/popup.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/quickfix.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/my_plugins/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/autocmd.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/popup.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/quickfix.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim_runtime/sources_non_forked/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
suite.component_raw	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
suite.component_raw	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
suite.component_raw	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
suite.component_type	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
suite.component_type	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
suite.component_type	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
suite.component_type	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
suite.component_type	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
suite.component_type	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
suite.custom	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
suite.custom	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
suite.custom	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
suite.custom_error	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
suite.custom_error	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
suite.custom_error	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
suite.custom_left_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
suite.custom_left_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
suite.custom_left_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
suite.custom_mixed	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
suite.custom_mixed	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
suite.custom_mixed	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
suite.custom_mixed_2	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
suite.custom_mixed_2	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
suite.custom_mixed_2	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
suite.custom_number	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
suite.custom_number	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
suite.custom_number	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
suite.custom_one	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
suite.custom_one	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
suite.custom_one	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
suite.custom_right_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
suite.custom_right_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
suite.custom_right_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
suite.custom_string	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
suite.custom_string	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
suite.custom_string	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
suite.custom_two	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
suite.custom_two	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
suite.custom_two	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
suite.custom_type	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
suite.custom_type	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
suite.custom_type	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
suite.custom_type_error	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
suite.custom_type_error	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
suite.custom_type_error	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
suite.custom_type_flatten	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
suite.custom_type_flatten	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
suite.custom_type_flatten	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
suite.custom_type_left_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
suite.custom_type_left_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
suite.custom_type_left_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
suite.custom_type_mixed	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
suite.custom_type_mixed	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
suite.custom_type_mixed	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
suite.custom_type_mixed_2	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
suite.custom_type_mixed_2	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
suite.custom_type_mixed_2	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
suite.custom_type_notfound	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
suite.custom_type_notfound	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
suite.custom_type_notfound	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
suite.custom_type_number	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
suite.custom_type_number	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
suite.custom_type_number	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
suite.custom_type_one	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
suite.custom_type_one	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
suite.custom_type_one	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
suite.custom_type_right_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
suite.custom_type_right_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
suite.custom_type_right_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
suite.custom_type_string	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
suite.custom_type_string	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
suite.custom_type_string	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
suite.custom_type_two	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
suite.custom_type_two	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
suite.custom_type_two	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
suite.custom_type_void_string	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
suite.custom_type_void_string	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
suite.custom_type_void_string	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
suite.custom_type_void_string_array	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
suite.custom_type_void_string_array	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
suite.custom_type_void_string_array	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
suite.custom_type_void_string_array_2	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
suite.custom_type_void_string_array_2	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
suite.custom_type_void_string_array_2	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
suite.custom_type_void_string_array_3	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
suite.custom_type_void_string_array_3	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
suite.custom_type_void_string_array_3	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
suite.custom_type_void_string_array_4	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
suite.custom_type_void_string_array_4	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
suite.custom_type_void_string_array_4	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
suite.custom_void_string	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
suite.custom_void_string	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
suite.custom_void_string	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
suite.custom_void_string_array	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
suite.custom_void_string_array	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
suite.custom_void_string_array	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
suite.custom_void_string_array_2	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
suite.custom_void_string_array_2	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
suite.custom_void_string_array_2	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
suite.custom_void_string_array_3	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
suite.custom_void_string_array_3	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
suite.custom_void_string_array_3	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
suite.custom_void_string_array_4	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
suite.custom_void_string_array_4	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
suite.custom_void_string_array_4	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
suite.default	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
suite.default	.vim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
suite.default	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
suite.default	.vim_runtime/my_plugins/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
suite.default	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
suite.default	.vim_runtime/sources_non_forked/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
suite.dictionary_function	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
suite.dictionary_function	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
suite.dictionary_function	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
suite.disable_enable	.vim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
suite.disable_enable	.vim_runtime/my_plugins/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
suite.disable_enable	.vim_runtime/sources_non_forked/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
suite.disabled	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
suite.disabled	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
suite.disabled	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
suite.doautoall	.vim/bundle/lightline.vim/test/autocmd.vim	/^function! s:suite.doautoall()$/;"	f
suite.doautoall	.vim_runtime/my_plugins/lightline.vim/test/autocmd.vim	/^function! s:suite.doautoall()$/;"	f
suite.doautoall	.vim_runtime/sources_non_forked/lightline.vim/test/autocmd.vim	/^function! s:suite.doautoall()$/;"	f
suite.duplicated_both_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
suite.duplicated_both_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
suite.duplicated_both_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
suite.duplicated_both_nil_left_most	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
suite.duplicated_both_nil_left_most	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
suite.duplicated_both_nil_left_most	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
suite.duplicated_both_nil_right_most	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
suite.duplicated_both_nil_right_most	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
suite.duplicated_both_nil_right_most	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
suite.duplicated_left_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
suite.duplicated_left_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
suite.duplicated_left_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
suite.duplicated_right_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
suite.duplicated_right_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
suite.duplicated_right_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
suite.duplicated_string	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
suite.duplicated_string	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
suite.duplicated_string	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
suite.duplicated_type_both_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
suite.duplicated_type_both_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
suite.duplicated_type_both_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
suite.duplicated_type_both_nil_left_most	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
suite.duplicated_type_both_nil_left_most	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
suite.duplicated_type_both_nil_left_most	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
suite.duplicated_type_both_nil_right_most	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
suite.duplicated_type_both_nil_right_most	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
suite.duplicated_type_both_nil_right_most	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
suite.duplicated_type_left_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
suite.duplicated_type_left_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
suite.duplicated_type_left_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
suite.duplicated_type_right_nil	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
suite.duplicated_type_right_nil	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
suite.duplicated_type_right_nil	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
suite.enabled	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
suite.enabled	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
suite.enabled	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
suite.error	.vim/bundle/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
suite.error	.vim_runtime/my_plugins/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
suite.error	.vim_runtime/sources_non_forked/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
suite.expand	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
suite.expand	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
suite.expand	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
suite.filename	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
suite.filename	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
suite.filename	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
suite.filename_modified	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
suite.filename_modified	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
suite.filename_modified	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
suite.flatten	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
suite.flatten	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
suite.flatten	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
suite.hi_clear	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.hi_clear()$/;"	f
suite.hi_clear	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.hi_clear()$/;"	f
suite.hi_clear	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.hi_clear()$/;"	f
suite.highlight	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
suite.highlight	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
suite.highlight	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
suite.insert	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
suite.insert	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
suite.insert	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
suite.insert	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
suite.insert	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
suite.insert	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
suite.keep_original	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
suite.keep_original	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
suite.keep_original	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
suite.left_right	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
suite.left_right	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
suite.left_right	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
suite.left_right	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
suite.left_right	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
suite.left_right	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
suite.link	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
suite.link	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
suite.link	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
suite.many1	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
suite.many1	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
suite.many1	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
suite.many2	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
suite.many2	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
suite.many2	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
suite.many3	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
suite.many3	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
suite.many3	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
suite.mode	.vim/bundle/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
suite.mode	.vim_runtime/my_plugins/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
suite.mode	.vim_runtime/sources_non_forked/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
suite.mode_map	.vim/bundle/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
suite.mode_map	.vim_runtime/my_plugins/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
suite.mode_map	.vim_runtime/sources_non_forked/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
suite.modified	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
suite.modified	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
suite.modified	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
suite.multiple	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
suite.multiple	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
suite.multiple	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
suite.multiple_type	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
suite.multiple_type	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
suite.multiple_type	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
suite.nil	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
suite.nil	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
suite.nil	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
suite.nil	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
suite.nil	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
suite.nil	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
suite.no_components	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
suite.no_components	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
suite.no_components	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
suite.notfound	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
suite.notfound	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
suite.notfound	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
suite.one	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
suite.one	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
suite.one	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
suite.one	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
suite.one	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
suite.one	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
suite.one_empty	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
suite.one_empty	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
suite.one_empty	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
suite.onetab	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
suite.onetab	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
suite.onetab	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
suite.quickfix_statusline	.vim/bundle/lightline.vim/test/quickfix.vim	/^function! s:suite.quickfix_statusline()$/;"	f
suite.quickfix_statusline	.vim_runtime/my_plugins/lightline.vim/test/quickfix.vim	/^function! s:suite.quickfix_statusline()$/;"	f
suite.quickfix_statusline	.vim_runtime/sources_non_forked/lightline.vim/test/quickfix.vim	/^function! s:suite.quickfix_statusline()$/;"	f
suite.raw_type	.vim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
suite.raw_type	.vim_runtime/my_plugins/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
suite.raw_type	.vim_runtime/sources_non_forked/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
suite.replace	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
suite.replace	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
suite.replace	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
suite.replace	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
suite.replace	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
suite.replace	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
suite.subseparator	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
suite.subseparator	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
suite.subseparator	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
suite.subseparator	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
suite.subseparator	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
suite.subseparator	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
suite.subseparator_component	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
suite.subseparator_component	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
suite.subseparator_component	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
suite.subseparator_component_expand	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
suite.subseparator_component_expand	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
suite.subseparator_component_expand	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
suite.subseparator_component_expand_1	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
suite.subseparator_component_expand_1	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
suite.subseparator_component_expand_1	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
suite.subseparator_component_expand_2	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
suite.subseparator_component_expand_2	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
suite.subseparator_component_expand_2	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
suite.subseparator_component_expand_3	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
suite.subseparator_component_expand_3	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
suite.subseparator_component_expand_3	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
suite.subseparator_component_function	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
suite.subseparator_component_function	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
suite.subseparator_component_function	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
suite.subseparator_component_function_1	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
suite.subseparator_component_function_1	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
suite.subseparator_component_function_1	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
suite.subseparator_component_function_2	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
suite.subseparator_component_function_2	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
suite.subseparator_component_function_2	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
suite.subseparator_component_function_3	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
suite.subseparator_component_function_3	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
suite.subseparator_component_function_3	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
suite.subseparator_component_function_4	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
suite.subseparator_component_function_4	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
suite.subseparator_component_function_4	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
suite.subseparator_component_function_5	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
suite.subseparator_component_function_5	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
suite.subseparator_component_function_5	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
suite.subseparator_component_function_6	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
suite.subseparator_component_function_6	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
suite.subseparator_component_function_6	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
suite.subseparator_component_function_7	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
suite.subseparator_component_function_7	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
suite.subseparator_component_function_7	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
suite.subseparator_component_function_visible_condition_1	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
suite.subseparator_component_function_visible_condition_1	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
suite.subseparator_component_function_visible_condition_1	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
suite.subseparator_component_function_visible_condition_2	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
suite.subseparator_component_function_visible_condition_2	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
suite.subseparator_component_function_visible_condition_2	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
suite.subseparator_component_function_visible_condition_3	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
suite.subseparator_component_function_visible_condition_3	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
suite.subseparator_component_function_visible_condition_3	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
suite.subseparator_component_function_visible_condition_4	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
suite.subseparator_component_function_visible_condition_4	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
suite.subseparator_component_function_visible_condition_4	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
suite.subseparator_component_function_visible_condition_5	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
suite.subseparator_component_function_visible_condition_5	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
suite.subseparator_component_function_visible_condition_5	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
suite.subseparator_component_function_visible_condition_6	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
suite.subseparator_component_function_visible_condition_6	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
suite.subseparator_component_function_visible_condition_6	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
suite.subseparator_component_function_visible_condition_7	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
suite.subseparator_component_function_visible_condition_7	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
suite.subseparator_component_function_visible_condition_7	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
suite.subseparator_component_not_found	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
suite.subseparator_component_not_found	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
suite.subseparator_component_not_found	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
suite.subseparator_component_not_found_1	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
suite.subseparator_component_not_found_1	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
suite.subseparator_component_not_found_1	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
suite.subseparator_component_not_found_2	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
suite.subseparator_component_not_found_2	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
suite.subseparator_component_not_found_2	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
suite.subseparator_component_visible_condition_1	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
suite.subseparator_component_visible_condition_1	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
suite.subseparator_component_visible_condition_1	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
suite.subseparator_component_visible_condition_2	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
suite.subseparator_component_visible_condition_2	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
suite.subseparator_component_visible_condition_2	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
suite.subseparator_component_visible_condition_3	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
suite.subseparator_component_visible_condition_3	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
suite.subseparator_component_visible_condition_3	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
suite.subseparator_component_visible_condition_4	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
suite.subseparator_component_visible_condition_4	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
suite.subseparator_component_visible_condition_4	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
suite.subseparator_component_visible_condition_5	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
suite.subseparator_component_visible_condition_5	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
suite.subseparator_component_visible_condition_5	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
suite.subseparator_component_visible_condition_6	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
suite.subseparator_component_visible_condition_6	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
suite.subseparator_component_visible_condition_6	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
suite.subseparator_component_visible_condition_7	.vim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
suite.subseparator_component_visible_condition_7	.vim_runtime/my_plugins/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
suite.subseparator_component_visible_condition_7	.vim_runtime/sources_non_forked/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
suite.tab_component	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
suite.tab_component	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
suite.tab_component	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
suite.tab_component_empty_left	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
suite.tab_component_empty_left	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
suite.tab_component_empty_left	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
suite.tab_component_empty_middle	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
suite.tab_component_empty_middle	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
suite.tab_component_empty_middle	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
suite.tab_component_function	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
suite.tab_component_function	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
suite.tab_component_function	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
suite.tabclose	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
suite.tabclose	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
suite.tabclose	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
suite.tabclose_last	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
suite.tabclose_last	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
suite.tabclose_last	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
suite.tabline	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
suite.tabline	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
suite.tabline	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
suite.tabnew	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
suite.tabnew_20	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
suite.tabnew_20	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
suite.tabnew_20	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
suite.tabnew_20_tabfirst	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
suite.tabnew_20_tabfirst	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
suite.tabnew_20_tabfirst	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
suite.tabnew_20_tabfirst_tabnext	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
suite.tabnew_20_tabfirst_tabnext	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
suite.tabnew_20_tabfirst_tabnext	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
suite.tabnew_20_tabnext_10	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
suite.tabnew_20_tabnext_10	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
suite.tabnew_20_tabnext_10	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
suite.tabnew_20_tabprevious	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
suite.tabnew_20_tabprevious	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
suite.tabnew_20_tabprevious	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
suite.tabnew_20_tabprevious_tabprevious	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
suite.tabnew_20_tabprevious_tabprevious	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
suite.tabnew_20_tabprevious_tabprevious	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
suite.tabnew_first	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
suite.tabnew_first	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
suite.tabnew_first	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
suite.tabnew_tabfirst	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
suite.tabnew_tabfirst	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
suite.tabnew_tabfirst	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
suite.tabnew_tabnew	.vim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
suite.tabnew_tabnew	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
suite.tabnew_tabnew	.vim_runtime/my_plugins/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
suite.tabnew_tabnew	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
suite.tabnew_tabnew	.vim_runtime/sources_non_forked/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
suite.tabnew_tabnew	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
suite.tabnew_tabnew_tabfirst	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
suite.tabnew_tabnew_tabfirst	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
suite.tabnew_tabnew_tabfirst	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
suite.tabnew_tabnew_tabprevious	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
suite.tabnew_tabnew_tabprevious	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
suite.tabnew_tabnew_tabprevious	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
suite.tabnext	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
suite.tabnext	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
suite.tabnext	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
suite.tabonly	.vim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
suite.tabonly	.vim_runtime/my_plugins/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
suite.tabonly	.vim_runtime/sources_non_forked/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
suite.tabs	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
suite.tabs	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
suite.tabs	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
suite.three	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
suite.three	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
suite.three	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
suite.three	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
suite.three	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
suite.three	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
suite.three_duplicated	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
suite.three_duplicated	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
suite.three_duplicated	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
suite.three_empty_all	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
suite.three_empty_all	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
suite.three_empty_all	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
suite.three_empty_left	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
suite.three_empty_left	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
suite.three_empty_left	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
suite.three_empty_left_middle	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
suite.three_empty_left_middle	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
suite.three_empty_left_middle	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
suite.three_empty_left_right	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
suite.three_empty_left_right	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
suite.three_empty_left_right	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
suite.three_empty_middle	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
suite.three_empty_middle	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
suite.three_empty_middle	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
suite.three_empty_middle_right	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
suite.three_empty_middle_right	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
suite.three_empty_middle_right	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
suite.three_empty_right	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
suite.three_empty_right	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
suite.three_empty_right	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
suite.toggle	.vim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
suite.toggle	.vim_runtime/my_plugins/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
suite.toggle	.vim_runtime/sources_non_forked/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
suite.two	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
suite.two	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
suite.two	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
suite.two	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
suite.two	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
suite.two	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
suite.two_duplicated	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
suite.two_duplicated	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
suite.two_duplicated	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
suite.two_empty_both	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
suite.two_empty_both	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
suite.two_empty_both	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
suite.two_empty_left	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
suite.two_empty_left	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
suite.two_empty_left	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
suite.two_empty_right	.vim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
suite.two_empty_right	.vim_runtime/my_plugins/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
suite.two_empty_right	.vim_runtime/sources_non_forked/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
suite.visual	.vim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
suite.visual	.vim/bundle/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
suite.visual	.vim_runtime/my_plugins/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
suite.visual	.vim_runtime/my_plugins/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
suite.visual	.vim_runtime/sources_non_forked/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
suite.visual	.vim_runtime/sources_non_forked/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
suite.win_execute_setfiletype	.vim/bundle/lightline.vim/test/popup.vim	/^function! s:suite.win_execute_setfiletype()$/;"	f
suite.win_execute_setfiletype	.vim_runtime/my_plugins/lightline.vim/test/popup.vim	/^function! s:suite.win_execute_setfiletype()$/;"	f
suite.win_execute_setfiletype	.vim_runtime/sources_non_forked/lightline.vim/test/popup.vim	/^function! s:suite.win_execute_setfiletype()$/;"	f
summary	.vim_runtime/sources_non_forked/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
supertab_close_preview	.vim/bundle/supertab/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
supertab_close_preview	.vim/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
surroundings	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
sw	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^  function s:sw()$/;"	f
sw	.vim_runtime/sources_non_forked/vim-javascript/indent/javascript.vim	/^  function s:sw()$/;"	f
sw	.vim_runtime/sources_non_forked/vim-python-pep8-indent/indent/python.vim	/^    function! s:sw()$/;"	f
syn_at	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:syn_at(l,c)$/;"	f
sync	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
synid	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
system	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
system	.vim_runtime/sources_non_forked/rust.vim/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
t	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> t :call ale#preview#OpenSelectionInTab()<CR>$/;"	m
t_thread	rainbow/thread.cpp	/^static thread_local Thread* t_thread = nullptr;$/;"	m	namespace:rainbow	file:
t_thread_name	rainbow/thread.cpp	/^static thread_local std::string t_thread_name = "UNKNOW";$/;"	m	namespace:rainbow	file:
tab	.vim/bundle/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
tab	.vim_runtime/my_plugins/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
tab	.vim_runtime/sources_non_forked/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
tabstop	.vim_runtime/sources_non_forked/vim-python-pep8-indent/spec/spec_helper.rb	/^    def tabstop$/;"	f
tabular#DoGTabularize	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! tabular#DoGTabularize()$/;"	f
tabular#ElementFormatPattern	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRangeWithOptions	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range$/;"	f
tabular#SplitDelimUnitTest	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! tabular#SplitDelimUnitTest()$/;"	f
tabular#TabularizeStrings	.vim_runtime/sources_non_forked/tabular/autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tag	.vim/src/previewwindow.cpp	/^	guint tag = 0;\/\/timeout id$/;"	v
tagEntry	.vim/src/readtags.h	/^} tagEntry;$/;"	t	typeref:struct:__anon12
tagExtensionField	.vim/src/readtags.h	/^} tagExtensionField;$/;"	t	typeref:struct:__anon11
tagFile	.vim/src/readtags.h	/^typedef struct sTagFile tagFile;$/;"	t	typeref:struct:sTagFile
tagFileInfo	.vim/src/readtags.h	/^} tagFileInfo;$/;"	t	typeref:struct:__anon7
tagMaps	.vim/src/vjde/completion/Document.java	/^	static HashMap tagMaps= new HashMap();$/;"	f	class:Document	access:default
tagResult	.vim/src/readtags.h	/^typedef enum { TagFailure = 0, TagSuccess = 1 } tagResult;$/;"	t	typeref:enum:__anon6
tagsClose	.vim/src/readtags.c	/^extern tagResult tagsClose (tagFile *const file)$/;"	f	signature:(tagFile *const file)
tagsClose	.vim/src/readtags.h	/^extern tagResult tagsClose (tagFile *const file);$/;"	p	signature:(tagFile *const file)
tagsField	.vim/src/readtags.c	/^extern const char *tagsField (const tagEntry *const entry, const char *const key)$/;"	f	signature:(const tagEntry *const entry, const char *const key)
tagsField	.vim/src/readtags.h	/^extern const char *tagsField (const tagEntry *const entry, const char *const key);$/;"	p	signature:(const tagEntry *const entry, const char *const key)
tagsFind	.vim/src/readtags.c	/^extern tagResult tagsFind (tagFile *const file, tagEntry *const entry,$/;"	f	signature:(tagFile *const file, tagEntry *const entry, const char *const name, const int options)
tagsFind	.vim/src/readtags.h	/^extern tagResult tagsFind (tagFile *const file, tagEntry *const entry, const char *const name, const int options);$/;"	p	signature:(tagFile *const file, tagEntry *const entry, const char *const name, const int options)
tagsFindNext	.vim/src/readtags.c	/^extern tagResult tagsFindNext (tagFile *const file, tagEntry *const entry)$/;"	f	signature:(tagFile *const file, tagEntry *const entry)
tagsFindNext	.vim/src/readtags.h	/^extern tagResult tagsFindNext (tagFile *const file, tagEntry *const entry);$/;"	p	signature:(tagFile *const file, tagEntry *const entry)
tagsFirst	.vim/src/readtags.c	/^extern tagResult tagsFirst (tagFile *const file, tagEntry *const entry)$/;"	f	signature:(tagFile *const file, tagEntry *const entry)
tagsFirst	.vim/src/readtags.h	/^extern tagResult tagsFirst (tagFile *const file, tagEntry *const entry);$/;"	p	signature:(tagFile *const file, tagEntry *const entry)
tagsNext	.vim/src/readtags.c	/^extern tagResult tagsNext (tagFile *const file, tagEntry *const entry)$/;"	f	signature:(tagFile *const file, tagEntry *const entry)
tagsNext	.vim/src/readtags.h	/^extern tagResult tagsNext (tagFile *const file, tagEntry *const entry);$/;"	p	signature:(tagFile *const file, tagEntry *const entry)
tagsOpen	.vim/src/readtags.c	/^extern tagFile *tagsOpen (const char *const filePath, tagFileInfo *const info)$/;"	f	signature:(const char *const filePath, tagFileInfo *const info)
tagsOpen	.vim/src/readtags.h	/^extern tagFile *tagsOpen (const char *const filePath, tagFileInfo *const info);$/;"	p	signature:(const char *const filePath, tagFileInfo *const info)
tagsSetSortType	.vim/src/readtags.c	/^extern tagResult tagsSetSortType (tagFile *const file, const sortType type)$/;"	f	signature:(tagFile *const file, const sortType type)
tagsSetSortType	.vim/src/readtags.h	/^extern tagResult tagsSetSortType (tagFile *const file, const sortType type);$/;"	p	signature:(tagFile *const file, const sortType type)
tail	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
target	Makefile	/^target := bin\/test_thread$/;"	m
temp_directory	.vim_runtime/update_plugins.py	/^    temp_directory = tempfile.mkdtemp()$/;"	v
term	.vim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
term	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
term	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
terminate	.vim/src/readtags.c	/^static void terminate (tagFile *const file)$/;"	f	file:	signature:(tagFile *const file)
tern_col	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:tern_col(p)$/;"	f
tern_skip	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:tern_skip(p)$/;"	f
test	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let test = tlib#Test#New()$/;"	v
test1	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let test1 = tlib#Test#New()$/;"	v
test_class	tests/test_config.cpp	/^void test_class() {$/;"	f	signature:()
test_editorconfig	.vim_runtime/sources_non_forked/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_editorconfig(vim, file_name, expected_values)$/;"	f
test_instance	.vim_runtime/sources_non_forked/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_instance(vim)$/;"	f
test_log	tests/test_config.cpp	/^void test_log() {$/;"	f	signature:()
test_snipmate_format	.vim_runtime/sources_non_forked/vim-snippets/tests.sh	/^function test_snipmate_format {$/;"	f
test_space_indented	.vim_runtime/sources_non_forked/vim-snippets/tests.sh	/^function test_space_indented {$/;"	f
testc	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let testc = tlib#TestChild#New()$/;"	v
testworld	.vim_runtime/sources_non_forked/tlib/test/tlib.vim	/^let testworld = tlib#World#New()$/;"	v
text	.vim_runtime/sources_non_forked/vim-snipmate/t/parser.vim	/^        let text = 'a `fnamemodify("x.y", ":r")` ${2:(${3\/a\/b})}'$/;"	v
textdialog	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
textobject	.vim_runtime/sources_non_forked/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
throw	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:throw(msg)$/;"	f
throw	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
timeout_handler	.vim/src/previewwindow.cpp	/^	guint timeout_handler = 0;$/;"	v
tiny_cmd#Get	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Get(nr)$/;"	f
tiny_cmd#Pop	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Pop(nr)$/;"	f
tiny_cmd#Put	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Put(a)$/;"	f
tipsWnd	.vim/src/lex.yy.c	/^_DL_EXPORT int tipsWnd(char *in)$/;"	f	signature:(char *in)
tipsWnd	.vim/src/tipswnd.c	/^_DL_EXPORT int tipsWnd(char *in)$/;"	f	signature:(char *in)
titlecase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:titlecase(word)$/;"	f
tlib#Filter_cnf#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnf.vim	/^function! tlib#Filter_cnf#New(...) "{{{3$/;"	f
tlib#Filter_cnfd#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_cnfd.vim	/^function! tlib#Filter_cnfd#New(...) "{{{3$/;"	f
tlib#Filter_fuzzy#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_fuzzy.vim	/^function! tlib#Filter_fuzzy#New(...) "{{{3$/;"	f
tlib#Filter_glob#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Filter_glob.vim	/^function! tlib#Filter_glob#New(...) "{{{3$/;"	f
tlib#Object#Methods	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! tlib#Object#Methods(object, ...) "{{{3$/;"	f
tlib#Object#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Object.vim	/^function! tlib#Object#New(...) "{{{3$/;"	f
tlib#Test#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/Test.vim	/^function! tlib#Test#New(...) "{{{3$/;"	f
tlib#TestChild#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/TestChild.vim	/^function! tlib#TestChild#New(...) "{{{3$/;"	f
tlib#World#New	.vim_runtime/sources_non_forked/tlib/autoload/tlib/World.vim	/^function! tlib#World#New(...)$/;"	f
tlib#agent#AND	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#AND(world, selected) "{{{3$/;"	f
tlib#agent#Complete	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Complete(world, selected) abort "{{{3$/;"	f
tlib#agent#CompleteAgentNames	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#CompleteAgentNames(ArgLead, CmdLine, CursorPos)$/;"	f
tlib#agent#Copy	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Copy(world, selected) "{{{3$/;"	f
tlib#agent#CopyItems	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#CopyItems(world, selected) "{{{3$/;"	f
tlib#agent#Cut	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Cut(world, selected) "{{{3$/;"	f
tlib#agent#Debug	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Debug(world, selected) "{{{3$/;"	f
tlib#agent#DeleteItems	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#DeleteItems(world, selected) "{{{3$/;"	f
tlib#agent#DoAtLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#DoAtLine(world, selected) "{{{3$/;"	f
tlib#agent#Down	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Down(world, selected, ...) "{{{3$/;"	f
tlib#agent#DownN	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#DownN(world, selected) "{{{3$/;"	f
tlib#agent#EditFile	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFile(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInSplit	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInTab	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInTab(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInVSplit	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInVSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditItem(world, selected) "{{{3$/;"	f
tlib#agent#EditReturnValue	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditReturnValue(world, rv) "{{{3$/;"	f
tlib#agent#End	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#End(world, selected) "{{{3$/;"	f
tlib#agent#ExecAgentByName	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ExecAgentByName(world, selected) "{{{3$/;"	f
tlib#agent#Exit	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Exit(world, selected) "{{{3$/;"	f
tlib#agent#GotoLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#GotoLine(world, selected) "{{{3$/;"	f
tlib#agent#Help	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Help(world, selected) "{{{3$/;"	f
tlib#agent#Home	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Home(world, selected) "{{{3$/;"	f
tlib#agent#Input	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Input(world, selected) "{{{3$/;"	f
tlib#agent#NewItem	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#NewItem(world, selected) "{{{3$/;"	f
tlib#agent#Null	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Null(world, selected) "{{{3$/;"	f
tlib#agent#OR	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#OR(world, selected) "{{{3$/;"	f
tlib#agent#PageDown	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#PageDown(world, selected) "{{{3$/;"	f
tlib#agent#PageUp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#PageUp(world, selected) "{{{3$/;"	f
tlib#agent#Paste	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Paste(world, selected) "{{{3$/;"	f
tlib#agent#PopFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#PopFilter(world, selected) "{{{3$/;"	f
tlib#agent#PreviewLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#PreviewLine(world, selected) "{{{3$/;"	f
tlib#agent#ReduceFilter	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ReduceFilter(world, selected) "{{{3$/;"	f
tlib#agent#Reset	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Reset(world, selected) "{{{3$/;"	f
tlib#agent#RestrictView	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#RestrictView(world, selected) "{{{3$/;"	f
tlib#agent#Select	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Select(world, selected) "{{{3$/;"	f
tlib#agent#SelectAll	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#SelectAll(world, selected) "{{{3$/;"	f
tlib#agent#SelectDown	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#SelectDown(world, selected) "{{{3$/;"	f
tlib#agent#SelectUp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#SelectUp(world, selected) "{{{3$/;"	f
tlib#agent#ShiftLeft	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftLeft(world, selected) "{{{3$/;"	f
tlib#agent#ShiftRight	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftRight(world, selected) "{{{3$/;"	f
tlib#agent#ShowInfo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ShowInfo(world, selected)$/;"	f
tlib#agent#Suspend	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Suspend(world, selected) "{{{3$/;"	f
tlib#agent#SuspendToParentWindow	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#SuspendToParentWindow(world, selected) "{{{3$/;"	f
tlib#agent#ToggleRestrictView	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleRestrictView(world, selected) "{{{3$/;"	f
tlib#agent#ToggleScrollbind	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleScrollbind(world, selected) "{{{3$/;"	f
tlib#agent#ToggleStickyList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleStickyList(world, selected) "{{{3$/;"	f
tlib#agent#UnrestrictView	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#UnrestrictView(world, selected) "{{{3$/;"	f
tlib#agent#Up	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Up(world, selected, ...) "{{{3$/;"	f
tlib#agent#UpN	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#UpN(world, selected) "{{{3$/;"	f
tlib#agent#ViewFile	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#ViewFile(world, selected) "{{{3$/;"	f
tlib#agent#Wildcard	.vim_runtime/sources_non_forked/tlib/autoload/tlib/agent.vim	/^function! tlib#agent#Wildcard(world, selected) "{{{3$/;"	f
tlib#arg#CComplete	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! tlib#arg#CComplete(def, ArgLead) abort "{{{3$/;"	f
tlib#arg#Ex	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! tlib#arg#Ex(arg, ...) "{{{3$/;"	f
tlib#arg#Get	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! tlib#arg#Get(n, var, ...) "{{{3$/;"	f
tlib#arg#GetOpts	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! tlib#arg#GetOpts(args, ...) abort "{{{3$/;"	f
tlib#arg#Let	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! tlib#arg#Let(list, ...) "{{{3$/;"	f
tlib#arg#StringAsKeyArgs	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgs(string, ...) "{{{1$/;"	f
tlib#arg#StringAsKeyArgsEqual	.vim_runtime/sources_non_forked/tlib/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgsEqual(string) "{{{1$/;"	f
tlib#assert#All	.vim_runtime/sources_non_forked/tlib/autoload/tlib/assert.vim	/^function! tlib#assert#All(vals) abort "{{{3$/;"	f
tlib#assert#Assert	.vim_runtime/sources_non_forked/tlib/autoload/tlib/assert.vim	/^function! tlib#assert#Assert(caller, check, vals) abort "{{{3$/;"	f
tlib#assert#Disable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/assert.vim	/^function! tlib#assert#Disable() abort "{{{3$/;"	f
tlib#assert#Enable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/assert.vim	/^function! tlib#assert#Enable() abort "{{{3$/;"	f
tlib#assert#Map	.vim_runtime/sources_non_forked/tlib/autoload/tlib/assert.vim	/^function! tlib#assert#Map(vals, expr) abort "{{{3$/;"	f
tlib#autocmdgroup#Init	.vim_runtime/sources_non_forked/tlib/autoload/tlib/autocmdgroup.vim	/^function! tlib#autocmdgroup#Init() "{{{3$/;"	f
tlib#balloon#Expand	.vim_runtime/sources_non_forked/tlib/autoload/tlib/balloon.vim	/^function! tlib#balloon#Expand(expr) abort "{{{3$/;"	f
tlib#balloon#Expr	.vim_runtime/sources_non_forked/tlib/autoload/tlib/balloon.vim	/^function! tlib#balloon#Expr() "{{{3$/;"	f
tlib#balloon#Register	.vim_runtime/sources_non_forked/tlib/autoload/tlib/balloon.vim	/^function! tlib#balloon#Register(expr) "{{{3$/;"	f
tlib#balloon#Remove	.vim_runtime/sources_non_forked/tlib/autoload/tlib/balloon.vim	/^function! tlib#balloon#Remove(expr) "{{{3$/;"	f
tlib#bitwise#AND	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#AND(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#Add	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Add(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#Bits2Num	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Bits2Num(bits, ...) "{{{3$/;"	f
tlib#bitwise#Num2Bits	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Num2Bits(num) "{{{3$/;"	f
tlib#bitwise#OR	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#OR(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#ShiftLeft	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#ShiftLeft(bits, n) "{{{3$/;"	f
tlib#bitwise#ShiftRight	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#ShiftRight(bits, n) "{{{3$/;"	f
tlib#bitwise#Sub	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Sub(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#XOR	.vim_runtime/sources_non_forked/tlib/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#XOR(num1, num2, ...) "{{{3$/;"	f
tlib#buffer#BufDo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#BufDo(exec) "{{{3$/;"	f
tlib#buffer#CurrentByte	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#CurrentByte() "{{{3$/;"	f
tlib#buffer#DeleteRange	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#DeleteRange(line1, line2) "{{{3$/;"	f
tlib#buffer#DisableMRU	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#DisableMRU() "{{{3$/;"	f
tlib#buffer#EnableMRU	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#EnableMRU() "{{{3$/;"	f
tlib#buffer#Eval	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#Eval(buffer, code) "{{{3$/;"	f
tlib#buffer#GetList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#GetList(...)$/;"	f
tlib#buffer#HighlightLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#HighlightLine(...) "{{{3$/;"	f
tlib#buffer#InsertText	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText(text, ...) "{{{3$/;"	f
tlib#buffer#InsertText0	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText0(text, ...) "{{{3$/;"	f
tlib#buffer#KeepCursorPosition	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#KeepCursorPosition(cmd) "{{{3$/;"	f
tlib#buffer#ReplaceRange	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ReplaceRange(line1, line2, lines)$/;"	f
tlib#buffer#ScratchEnd	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchEnd() "{{{3$/;"	f
tlib#buffer#ScratchStart	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchStart() "{{{3$/;"	f
tlib#buffer#Set	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#Set(buffer) "{{{3$/;"	f
tlib#buffer#ViewLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ViewLine(line, ...) "{{{3$/;"	f
tlib#cache#Dir	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#Dir(...) "{{{3$/;"	f
tlib#cache#Filename	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#Filename(type, ...) "{{{3$/;"	f
tlib#cache#Get	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#Get(cfile, ...) "{{{3$/;"	f
tlib#cache#ListFilesInCache	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#ListFilesInCache(...) "{{{3$/;"	f
tlib#cache#MTime	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#MTime(cfile) "{{{3$/;"	f
tlib#cache#MaybePurge	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#MaybePurge() "{{{3$/;"	f
tlib#cache#Purge	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#Purge() "{{{3$/;"	f
tlib#cache#Save	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#Save(cfile, dictionary, ...) "{{{3$/;"	f
tlib#cache#Value	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cache.vim	/^function! tlib#cache#Value(cfile, generator, ftime, ...) "{{{3$/;"	f
tlib#char#Get	.vim_runtime/sources_non_forked/tlib/autoload/tlib/char.vim	/^function! tlib#char#Get(...) "{{{3$/;"	f
tlib#char#GetWithTimeout	.vim_runtime/sources_non_forked/tlib/autoload/tlib/char.vim	/^function! tlib#char#GetWithTimeout(timeout, ...) "{{{3$/;"	f
tlib#char#IsAvailable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/char.vim	/^function! tlib#char#IsAvailable() "{{{3$/;"	f
tlib#cmd#BrowseOutput	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutput(command) "{{{3$/;"	f
tlib#cmd#BrowseOutputWithCallback	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutputWithCallback(callback, command) "{{{3$/;"	f
tlib#cmd#Capture	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#Capture(cmd) "{{{3$/;"	f
tlib#cmd#DefaultBrowseOutput	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#DefaultBrowseOutput(cmd) "{{{3$/;"	f
tlib#cmd#OutputAsList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#OutputAsList(command) "{{{3$/;"	f
tlib#cmd#ParseScriptname	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#ParseScriptname(line) "{{{3$/;"	f
tlib#cmd#TBrowseScriptnames	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#TBrowseScriptnames() abort "{{{3$/;"	f
tlib#cmd#Time	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#Time(cmd) "{{{3$/;"	f
tlib#cmd#UseVertical	.vim_runtime/sources_non_forked/tlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#UseVertical(...) "{{{3$/;"	f
tlib#comments#Comments	.vim_runtime/sources_non_forked/tlib/autoload/tlib/comments.vim	/^function! tlib#comments#Comments(...)$/;"	f
tlib#date#DiffInDays	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^function! tlib#date#DiffInDays(date, ...)$/;"	f
tlib#date#Format	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^function! tlib#date#Format(secs1970) abort "{{{3$/;"	f
tlib#date#IsDate	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^function! tlib#date#IsDate(text) abort "{{{3$/;"	f
tlib#date#Parse	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^function! tlib#date#Parse(date, ...) "{{{3$/;"	f
tlib#date#SecondsSince1970	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^function! tlib#date#SecondsSince1970(date, ...) "{{{3$/;"	f
tlib#date#Shift	.vim_runtime/sources_non_forked/tlib/autoload/tlib/date.vim	/^function! tlib#date#Shift(date, shift) abort "{{{3$/;"	f
tlib#dictionary#Rev	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dictionary.vim	/^function! tlib#dictionary#Rev(dict) abort "{{{3$/;"	f
tlib#dir#CD	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#CD(dir, ...) "{{{3$/;"	f
tlib#dir#CanonicName	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#CanonicName(dirname) "{{{3$/;"	f
tlib#dir#Ensure	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#Ensure(dir) "{{{3$/;"	f
tlib#dir#MyRuntime	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#MyRuntime() "{{{3$/;"	f
tlib#dir#NativeName	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#NativeName(dirname) "{{{3$/;"	f
tlib#dir#PlainName	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#PlainName(dirname) "{{{3$/;"	f
tlib#dir#Pop	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#Pop() "{{{3$/;"	f
tlib#dir#Push	.vim_runtime/sources_non_forked/tlib/autoload/tlib/dir.vim	/^function! tlib#dir#Push(dir, ...) "{{{3$/;"	f
tlib#eval#Extend	.vim_runtime/sources_non_forked/tlib/autoload/tlib/eval.vim	/^function! tlib#eval#Extend(a, b, ...) abort "{{{3$/;"	f
tlib#eval#FormatValue	.vim_runtime/sources_non_forked/tlib/autoload/tlib/eval.vim	/^function! tlib#eval#FormatValue(value, ...) "{{{3$/;"	f
tlib#file#Absolute	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! tlib#file#Absolute(filename, ...) "{{{3$/;"	f
tlib#file#Canonic	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! tlib#file#Canonic(filename, ...) "{{{3$/;"	f
tlib#file#Edit	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! tlib#file#Edit(fileid) "{{{3$/;"	f
tlib#file#Glob	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^    function! tlib#file#Glob(pattern) abort "{{{3$/;"	f
tlib#file#Globpath	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^    function! tlib#file#Globpath(path, pattern) abort "{{{3$/;"	f
tlib#file#Join	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! tlib#file#Join(filename_parts, ...) "{{{3$/;"	f
tlib#file#Relative	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! tlib#file#Relative(filename, basedir) "{{{3$/;"	f
tlib#file#Split	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! tlib#file#Split(filename) "{{{3$/;"	f
tlib#file#With	.vim_runtime/sources_non_forked/tlib/autoload/tlib/file.vim	/^function! tlib#file#With(fcmd, bcmd, files, ...) "{{{3$/;"	f
tlib#fixes#Winpos	.vim_runtime/sources_non_forked/tlib/autoload/tlib/fixes.vim	/^function! tlib#fixes#Winpos() "{{{3$/;"	f
tlib#grep#Do	.vim_runtime/sources_non_forked/tlib/autoload/tlib/grep.vim	/^function! tlib#grep#Do(cmd, rx, files) "{{{3$/;"	f
tlib#grep#List	.vim_runtime/sources_non_forked/tlib/autoload/tlib/grep.vim	/^function! tlib#grep#List(rx, files) "{{{3$/;"	f
tlib#grep#LocList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/grep.vim	/^function! tlib#grep#LocList(rx, files) "{{{3$/;"	f
tlib#grep#QuickFixList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/grep.vim	/^function! tlib#grep#QuickFixList(rx, files) "{{{3$/;"	f
tlib#hash#Adler32	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32(chars) "{{{3$/;"	f
tlib#hash#Adler32_tlib	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32_tlib(chars) "{{{3$/;"	f
tlib#hash#Adler32_vim	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32_vim(chars) "{{{3$/;"	f
tlib#hash#CRC32B	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B(chars) "{{{3$/;"	f
tlib#hash#CRC32B_ruby	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B_ruby(chars) "{{{3$/;"	f
tlib#hash#CRC32B_vim	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B_vim(chars) "{{{3$/;"	f
tlib#hash#CreateCrcTable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hash.vim	/^function! tlib#hash#CreateCrcTable() "{{{3$/;"	f
tlib#hook#Run	.vim_runtime/sources_non_forked/tlib/autoload/tlib/hook.vim	/^function! tlib#hook#Run(hook, ...) "{{{3$/;"	f
tlib#input#CommandSelect	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#CommandSelect(command, ...) "{{{3$/;"	f
tlib#input#Dialog	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#Dialog(text, options, default) "{{{3$/;"	f
tlib#input#Edit	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#Edit(name, value, callback, ...) "{{{3$/;"	f
tlib#input#EditList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#EditList(query, list, ...) "{{{3$/;"	f
tlib#input#List	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#List(type, ...) "{{{3$/;"	f
tlib#input#ListD	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#ListD(dict) "{{{3$/;"	f
tlib#input#ListW	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#ListW(world, ...) "{{{3$/;"	f
tlib#input#Resume	.vim_runtime/sources_non_forked/tlib/autoload/tlib/input.vim	/^function! tlib#input#Resume(name, pick, bufnr) "{{{3$/;"	f
tlib#list#All	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#All(list, expr) "{{{3$/;"	f
tlib#list#Any	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Any(list, expr) "{{{3$/;"	f
tlib#list#Compact	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Compact(list) "{{{3$/;"	f
tlib#list#Find	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Find(list, filter, ...) "{{{3$/;"	f
tlib#list#FindAll	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#FindAll(list, filter, ...) "{{{3$/;"	f
tlib#list#Flatten	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Flatten(list) "{{{3$/;"	f
tlib#list#Inject	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Inject(list, value, Function) "{{{3$/;"	f
tlib#list#Remove	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Remove(list, element) "{{{3$/;"	f
tlib#list#RemoveAll	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#RemoveAll(list, element) "{{{3$/;"	f
tlib#list#ToDictionary	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#ToDictionary(list, default, ...) "{{{3$/;"	f
tlib#list#Uniq	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Uniq(list, ...) "{{{3$/;"	f
tlib#list#Zip	.vim_runtime/sources_non_forked/tlib/autoload/tlib/list.vim	/^function! tlib#list#Zip(lists, ...) "{{{3$/;"	f
tlib#loclist#Browse	.vim_runtime/sources_non_forked/tlib/autoload/tlib/loclist.vim	/^function! tlib#loclist#Browse(...) abort "{{{3$/;"	f
tlib#map#PumAccept	.vim_runtime/sources_non_forked/tlib/autoload/tlib/map.vim	/^function! tlib#map#PumAccept(key) "{{{3$/;"	f
tlib#normal#WithRegister	.vim_runtime/sources_non_forked/tlib/autoload/tlib/normal.vim	/^function! tlib#normal#WithRegister(cmd, ...) "{{{3$/;"	f
tlib#notify#Echo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/notify.vim	/^function! tlib#notify#Echo(text, ...)$/;"	f
tlib#notify#TrimMessage	.vim_runtime/sources_non_forked/tlib/autoload/tlib/notify.vim	/^function! tlib#notify#TrimMessage(message) "{{{3$/;"	f
tlib#number#ConvertBase	.vim_runtime/sources_non_forked/tlib/autoload/tlib/number.vim	/^function! tlib#number#ConvertBase(num, base, ...) "{{{3$/;"	f
tlib#paragraph#GetMetric	.vim_runtime/sources_non_forked/tlib/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#GetMetric() "{{{3$/;"	f
tlib#paragraph#Move	.vim_runtime/sources_non_forked/tlib/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#Move(direction, count)$/;"	f
tlib#persistent#Dir	.vim_runtime/sources_non_forked/tlib/autoload/tlib/persistent.vim	/^function! tlib#persistent#Dir() "{{{3$/;"	f
tlib#persistent#Filename	.vim_runtime/sources_non_forked/tlib/autoload/tlib/persistent.vim	/^function! tlib#persistent#Filename(type, ...) "{{{3$/;"	f
tlib#persistent#Get	.vim_runtime/sources_non_forked/tlib/autoload/tlib/persistent.vim	/^function! tlib#persistent#Get(...) "{{{3$/;"	f
tlib#persistent#MTime	.vim_runtime/sources_non_forked/tlib/autoload/tlib/persistent.vim	/^function! tlib#persistent#MTime(cfile) "{{{3$/;"	f
tlib#persistent#Save	.vim_runtime/sources_non_forked/tlib/autoload/tlib/persistent.vim	/^function! tlib#persistent#Save(cfile, dictionary) "{{{3$/;"	f
tlib#persistent#Value	.vim_runtime/sources_non_forked/tlib/autoload/tlib/persistent.vim	/^function! tlib#persistent#Value(...) "{{{3$/;"	f
tlib#progressbar#Display	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Display(value, ...) "{{{3$/;"	f
tlib#progressbar#Init	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Init(max, ...) "{{{3$/;"	f
tlib#progressbar#Restore	.vim_runtime/sources_non_forked/tlib/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Restore() "{{{3$/;"	f
tlib#qfl#AgentEditLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentEditLine(world, selected) "{{{3$/;"	f
tlib#qfl#AgentEditQFE	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentEditQFE(world, selected, ...) "{{{3$/;"	f
tlib#qfl#AgentGotoQFE	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentGotoQFE(world, selected) "{{{3$/;"	f
tlib#qfl#AgentPreviewQFE	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentPreviewQFE(world, selected) "{{{3$/;"	f
tlib#qfl#AgentSplitBuffer	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentSplitBuffer(world, selected) "{{{3$/;"	f
tlib#qfl#AgentTabBuffer	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentTabBuffer(world, selected) "{{{3$/;"	f
tlib#qfl#AgentVSplitBuffer	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentVSplitBuffer(world, selected) "{{{3$/;"	f
tlib#qfl#AgentWithSelected	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentWithSelected(world, selected, ...) "{{{3$/;"	f
tlib#qfl#Balloon	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#Balloon() "{{{3$/;"	f
tlib#qfl#Browse	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#Browse(...) abort "{{{3$/;"	f
tlib#qfl#EditLine	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#EditLine(lnum) "{{{3$/;"	f
tlib#qfl#FormatQFLE	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#FormatQFLE(qfe) dict abort "{{{3$/;"	f
tlib#qfl#InitListBuffer	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#InitListBuffer(world) "{{{3$/;"	f
tlib#qfl#QfeFilename	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#QfeFilename(qfe) abort "{{{3$/;"	f
tlib#qfl#QflList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#QflList(list, ...) abort "{{{3$/;"	f
tlib#qfl#RunCmdOnSelected	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#RunCmdOnSelected(world, selected, cmd, ...) "{{{3$/;"	f
tlib#qfl#SetFollowCursor	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#SetFollowCursor(world, selected) "{{{3$/;"	f
tlib#qfl#SetSyntax	.vim_runtime/sources_non_forked/tlib/autoload/tlib/qfl.vim	/^function! tlib#qfl#SetSyntax() dict abort "{{{3$/;"	f
tlib#rx#Escape	.vim_runtime/sources_non_forked/tlib/autoload/tlib/rx.vim	/^function! tlib#rx#Escape(text, ...) "{{{3$/;"	f
tlib#rx#EscapeReplace	.vim_runtime/sources_non_forked/tlib/autoload/tlib/rx.vim	/^function! tlib#rx#EscapeReplace(text, ...) "{{{3$/;"	f
tlib#rx#LooksLikeRegexp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/rx.vim	/^function! tlib#rx#LooksLikeRegexp(text) abort "{{{3$/;"	f
tlib#rx#Suffixes	.vim_runtime/sources_non_forked/tlib/autoload/tlib/rx.vim	/^function! tlib#rx#Suffixes(...) "{{{3$/;"	f
tlib#scratch#CloseScratch	.vim_runtime/sources_non_forked/tlib/autoload/tlib/scratch.vim	/^function! tlib#scratch#CloseScratch(keyargs, ...) "{{{3$/;"	f
tlib#scratch#UseScratch	.vim_runtime/sources_non_forked/tlib/autoload/tlib/scratch.vim	/^function! tlib#scratch#UseScratch(...) "{{{3$/;"	f
tlib#signs#ClearAll	.vim_runtime/sources_non_forked/tlib/autoload/tlib/signs.vim	/^function! tlib#signs#ClearAll(sign) "{{{3$/;"	f
tlib#signs#ClearBuffer	.vim_runtime/sources_non_forked/tlib/autoload/tlib/signs.vim	/^function! tlib#signs#ClearBuffer(sign, bufnr) "{{{3$/;"	f
tlib#signs#Mark	.vim_runtime/sources_non_forked/tlib/autoload/tlib/signs.vim	/^function! tlib#signs#Mark(sign, list) "{{{3$/;"	f
tlib#string#Chomp	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#Chomp(string, ...) "{{{3$/;"	f
tlib#string#Count	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#Count(string, rx) "{{{3$/;"	f
tlib#string#Format	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#Format(template, dict) "{{{3$/;"	f
tlib#string#Printf1	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#Printf1(format, string) "{{{3$/;"	f
tlib#string#RemoveBackslashes	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#RemoveBackslashes(text, ...) "{{{3$/;"	f
tlib#string#SplitCommaList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#SplitCommaList(text, ...) abort "{{{3$/;"	f
tlib#string#Strip	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#Strip(string) "{{{3$/;"	f
tlib#string#TrimLeft	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#TrimLeft(string) "{{{3$/;"	f
tlib#string#TrimRight	.vim_runtime/sources_non_forked/tlib/autoload/tlib/string.vim	/^function! tlib#string#TrimRight(string) "{{{3$/;"	f
tlib#syntax#Collect	.vim_runtime/sources_non_forked/tlib/autoload/tlib/syntax.vim	/^function! tlib#syntax#Collect() "{{{3$/;"	f
tlib#syntax#Names	.vim_runtime/sources_non_forked/tlib/autoload/tlib/syntax.vim	/^function! tlib#syntax#Names(...) "{{{3$/;"	f
tlib#sys#ConvertPath	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#ConvertPath(converter, filename) "{{{3$/;"	f
tlib#sys#FileArgs	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#FileArgs(cmd, files) "{{{3$/;"	f
tlib#sys#GetCmd	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#GetCmd(cmd) "{{{3$/;"	f
tlib#sys#IsCygwinBin	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#IsCygwinBin(cmd) "{{{3$/;"	f
tlib#sys#IsExecutable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#IsExecutable(cmd, ...) "{{{3$/;"	f
tlib#sys#IsSpecial	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#IsSpecial(filename) abort "{{{3$/;"	f
tlib#sys#MaybeUseCygpath	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#MaybeUseCygpath(cmd) "{{{3$/;"	f
tlib#sys#Open	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#Open(filename) abort "{{{3$/;"	f
tlib#sys#SystemInDir	.vim_runtime/sources_non_forked/tlib/autoload/tlib/sys.vim	/^function! tlib#sys#SystemInDir(dir, ...) abort "{{{3$/;"	f
tlib#tab#BufMap	.vim_runtime/sources_non_forked/tlib/autoload/tlib/tab.vim	/^function! tlib#tab#BufMap() "{{{3$/;"	f
tlib#tab#Set	.vim_runtime/sources_non_forked/tlib/autoload/tlib/tab.vim	/^function! tlib#tab#Set(tabnr) "{{{3$/;"	f
tlib#tab#TabWinNr	.vim_runtime/sources_non_forked/tlib/autoload/tlib/tab.vim	/^function! tlib#tab#TabWinNr(buffer) "{{{3$/;"	f
tlib#tag#Collect	.vim_runtime/sources_non_forked/tlib/autoload/tlib/tag.vim	/^function! tlib#tag#Collect(constraints, ...) "{{{3$/;"	f
tlib#tag#Format	.vim_runtime/sources_non_forked/tlib/autoload/tlib/tag.vim	/^function! tlib#tag#Format(tag) "{{{3$/;"	f
tlib#tag#Retrieve	.vim_runtime/sources_non_forked/tlib/autoload/tlib/tag.vim	/^function! tlib#tag#Retrieve(rx, ...) "{{{3$/;"	f
tlib#textobjects#Init	.vim_runtime/sources_non_forked/tlib/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#Init() "{{{3$/;"	f
tlib#textobjects#StandardParagraph	.vim_runtime/sources_non_forked/tlib/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#StandardParagraph() "{{{3$/;"	f
tlib#time#Diff	.vim_runtime/sources_non_forked/tlib/autoload/tlib/time.vim	/^function! tlib#time#Diff(a, b, ...) "{{{3$/;"	f
tlib#time#DiffMSecs	.vim_runtime/sources_non_forked/tlib/autoload/tlib/time.vim	/^function! tlib#time#DiffMSecs(a, b, ...) "{{{3$/;"	f
tlib#time#FormatNow	.vim_runtime/sources_non_forked/tlib/autoload/tlib/time.vim	/^function! tlib#time#FormatNow() "{{{3$/;"	f
tlib#time#MSecs	.vim_runtime/sources_non_forked/tlib/autoload/tlib/time.vim	/^function! tlib#time#MSecs() "{{{3$/;"	f
tlib#time#Now	.vim_runtime/sources_non_forked/tlib/autoload/tlib/time.vim	/^function! tlib#time#Now() "{{{3$/;"	f
tlib#trace#Backtrace	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^function! tlib#trace#Backtrace(caller) abort "{{{3$/;"	f
tlib#trace#Disable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^function! tlib#trace#Disable() abort "{{{3$/;"	f
tlib#trace#Enable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^function! tlib#trace#Enable() abort "{{{3$/;"	f
tlib#trace#Print	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^function! tlib#trace#Print(caller, vars, values) abort "{{{3$/;"	f
tlib#trace#PrintToFile	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^function! tlib#trace#PrintToFile(filename) abort "{{{3$/;"	f
tlib#trace#Set	.vim_runtime/sources_non_forked/tlib/autoload/tlib/trace.vim	/^function! tlib#trace#Set(vars) abort "{{{3$/;"	f
tlib#type#Are	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#Are(vals, type) abort "{{{3$/;"	f
tlib#type#Has	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#Has(val, lst) abort "{{{3$/;"	f
tlib#type#Have	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#Have(vals, lst) abort "{{{3$/;"	f
tlib#type#Is	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#Is(val, type) abort "{{{3$/;"	f
tlib#type#IsDictionary	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#IsDictionary(expr)$/;"	f
tlib#type#IsFuncref	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#IsFuncref(expr)$/;"	f
tlib#type#IsList	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#IsList(expr)$/;"	f
tlib#type#IsNumber	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#IsNumber(expr)$/;"	f
tlib#type#IsString	.vim_runtime/sources_non_forked/tlib/autoload/tlib/type.vim	/^function! tlib#type#IsString(expr)$/;"	f
tlib#url#Decode	.vim_runtime/sources_non_forked/tlib/autoload/tlib/url.vim	/^function! tlib#url#Decode(url) "{{{3$/;"	f
tlib#url#DecodeChar	.vim_runtime/sources_non_forked/tlib/autoload/tlib/url.vim	/^function! tlib#url#DecodeChar(char) "{{{3$/;"	f
tlib#url#Encode	.vim_runtime/sources_non_forked/tlib/autoload/tlib/url.vim	/^function! tlib#url#Encode(url, ...) "{{{3$/;"	f
tlib#url#EncodeChar	.vim_runtime/sources_non_forked/tlib/autoload/tlib/url.vim	/^function! tlib#url#EncodeChar(char) "{{{3$/;"	f
tlib#var#EGet	.vim_runtime/sources_non_forked/tlib/autoload/tlib/var.vim	/^function! tlib#var#EGet(var, namespace, ...) "{{{3$/;"	f
tlib#var#Get	.vim_runtime/sources_non_forked/tlib/autoload/tlib/var.vim	/^function! tlib#var#Get(var, namespace, ...) "{{{3$/;"	f
tlib#var#Let	.vim_runtime/sources_non_forked/tlib/autoload/tlib/var.vim	/^function! tlib#var#Let(name, val) "{{{3$/;"	f
tlib#var#List	.vim_runtime/sources_non_forked/tlib/autoload/tlib/var.vim	/^function! tlib#var#List(rx, ...) "{{{3$/;"	f
tlib#vcs#Diff	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^function! tlib#vcs#Diff(filename, ...) "{{{3$/;"	f
tlib#vcs#Executable	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^function! tlib#vcs#Executable(type) "{{{3$/;"	f
tlib#vcs#FindVCS	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^function! tlib#vcs#FindVCS(filename) "{{{3$/;"	f
tlib#vcs#GitLsPostprocess	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^function! tlib#vcs#GitLsPostprocess(filename) abort "{{{3$/;"	f
tlib#vcs#Ls	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vcs.vim	/^function! tlib#vcs#Ls(...) "{{{3$/;"	f
tlib#vim#CopyFunction	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^function! tlib#vim#CopyFunction(old, new, ...) "{{{3$/;"	f
tlib#vim#Maximize	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^    fun! tlib#vim#Maximize(fullscreen) "{{{3$/;"	f
tlib#vim#RestoreWindow	.vim_runtime/sources_non_forked/tlib/autoload/tlib/vim.vim	/^    function! tlib#vim#RestoreWindow() "{{{3$/;"	f
tlib#win#GetLayout	.vim_runtime/sources_non_forked/tlib/autoload/tlib/win.vim	/^function! tlib#win#GetLayout(...) "{{{3$/;"	f
tlib#win#List	.vim_runtime/sources_non_forked/tlib/autoload/tlib/win.vim	/^function! tlib#win#List() "{{{3$/;"	f
tlib#win#Set	.vim_runtime/sources_non_forked/tlib/autoload/tlib/win.vim	/^function! tlib#win#Set(winnr) "{{{3$/;"	f
tlib#win#SetLayout	.vim_runtime/sources_non_forked/tlib/autoload/tlib/win.vim	/^function! tlib#win#SetLayout(layout) "{{{3$/;"	f
tlib#win#Width	.vim_runtime/sources_non_forked/tlib/autoload/tlib/win.vim	/^function! tlib#win#Width(wnr) "{{{3$/;"	f
tlib#win#WinDo	.vim_runtime/sources_non_forked/tlib/autoload/tlib/win.vim	/^function! tlib#win#WinDo(ex) "{{{3$/;"	f
tn	.vim/src/CSParser.cs	/^            static string tn = null;$/;"	f	class:Wangfc.CSParser	file:	access:private
tn	.vim/src/TypeFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.TypeFinder	file:	access:private
tn	.vim/src/UsingFinder.cs	/^        static string tn = null;$/;"	f	class:Wangfc.UsingFinder	file:	access:private
to	.vim/ftplugin/xml.vim	/^	mapping to perform auto completion and auto nesting. For example if$/;"	m
toOut	.vim/src/vjde/completion/Struts2Configure.java	/^	public void toOut() {$/;"	m	class:Struts2Configure	access:public	signature:()
toOut	.vim/src/vjde/completion/Struts2Simple.java	/^	public void toOut() {$/;"	m	class:Struts2Simple	access:public	signature:()
toString	.vim/src/vjde/completion/ClassPathDir.java	/^    public String toString() {$/;"	m	class:ClassPathDir	access:public	signature:()
toString	.vim/src/vjde/completion/ClassPathZip.java	/^    public String toString() {$/;"	m	class:ClassPathZip	access:public	signature:()
toString	rainbow/config.h	/^    virtual std::string toString() = 0;$/;"	p	class:rainbow::ConfigVarBase	access:public	signature:()
toString	tests/test_config.cpp	/^    std::string toString() const {$/;"	f	class:Person	access:public	signature:() const
toYamlString	rainbow/log.cpp	/^std::string FileLogAppender::toYamlString() {$/;"	f	class:rainbow::FileLogAppender	signature:()
toYamlString	rainbow/log.cpp	/^std::string Logger::toYamlString() {$/;"	f	class:rainbow::Logger	signature:()
toYamlString	rainbow/log.cpp	/^std::string LoggerManager::toYamlString() {$/;"	f	class:rainbow::LoggerManager	signature:()
toYamlString	rainbow/log.cpp	/^std::string StdoutLogAppender::toYamlString() {$/;"	f	class:rainbow::StdoutLogAppender	signature:()
toYamlString	rainbow/log.h	/^    std::string toYamlString();$/;"	p	class:rainbow::Logger	access:public	signature:()
toYamlString	rainbow/log.h	/^    std::string toYamlString();$/;"	p	class:rainbow::LoggerManager	access:public	signature:()
toYamlString	rainbow/log.h	/^    virtual std::string toYamlString() = 0;$/;"	p	class:rainbow::LogAppender	access:public	signature:()
to_be_file	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^function! s:to_be_file(expected) abort$/;"	f
to_be_in	.vim_runtime/sources_non_forked/vim-snipmate/t/jumping.vim	/^function! s:to_be_in(item, list) abort$/;"	f
toggleIgnoreFilter	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
toggleShowBookmarks	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
toggleShowFiles	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
toggleShowHidden	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
toggleZoom	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
togglebg#map	.vim_runtime/sources_non_forked/vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
token	.vim_runtime/sources_non_forked/typescript-vim/indent/typescript.vim	/^function s:token()$/;"	f
tokenizeCtor	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer tokenizeCtor(Constructor ctor) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Constructor ctor)
tokenizeField	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer tokenizeField(Field field) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Field field)
tokenizeMethod	.vim/src/vjde/completion/ClassInfo.java	/^  private static StringBuffer tokenizeMethod(Method method) {$/;"	m	class:ClassInfo	file:	access:private	signature:(Method method)
top	.vim/src/lex.yy.c	/^int top ;$/;"	v
top	.vim/src/tipswnd.c	/^int top ;$/;"	v
tovl#scratch_buffer#GetContents	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#GetContents()$/;"	f
tovl#scratch_buffer#Help	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#Help()$/;"	f
tovl#scratch_buffer#KeepIntactLineNr	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#KeepIntactLineNr()$/;"	f
tovl#scratch_buffer#ScratchBuffer	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#ScratchBuffer(opts)$/;"	f
tovl#scratch_buffer#Write	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#Write()$/;"	f
tovl#ui#filter_list#ListTest	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! tovl#ui#filter_list#ListTest()$/;"	f
tovl#ui#filter_list#ListTestGotoLineCurrentBuf	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! tovl#ui#filter_list#ListTestGotoLineCurrentBuf()$/;"	f
tovl#ui#filter_list#ListView	.vim_runtime/sources_non_forked/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! tovl#ui#filter_list#ListView(opts)$/;"	f
trace	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:trace(message) abort$/;"	f
tranquilize	.vim_runtime/sources_non_forked/goyo.vim/autoload/goyo.vim	/^function! s:tranquilize()$/;"	f
trigger_gitgutter	.vim_runtime/sources_non_forked/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
truncate	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:truncate(str, num)$/;"	f
truncate	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:truncate(str, num)$/;"	f
type	.vim/src/vjde/completion/Struts2Configure.java	/^				public String type() {$/;"	m	class:ResultImpl	access:public	signature:()
type	.vim/src/vjde/completion/Struts2Simple.java	/^				public String type() {$/;"	m	class:ResultImpl2	access:public	signature:()
type	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/benchmark_spec.rb	/^def type(string)$/;"	f
type	.vim_runtime/sources_non_forked/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def type(string)$/;"	f
type	rainbow/log.cpp	/^    int type = 0; \/\/ 1 File, 2 Stdout$/;"	m	struct:rainbow::LogAppenderDefine	file:	access:public
u	.vim_runtime/sources_non_forked/vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
u	.vim_runtime/sources_non_forked/vim-yankstack/spec/fixtures/repeat.vim	/^nnoremap <silent> u     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
ulen	.vim_runtime/sources_non_forked/auto-pairs/plugin/auto-pairs.vim	/^func! s:ulen(s)$/;"	f
unc_path	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
undo	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
uniq	.vim/bundle/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
uniq	.vim/bundle/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
uniq	.vim_runtime/my_plugins/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
uniq	.vim_runtime/my_plugins/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
uniq	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
uniq	.vim_runtime/sources_non_forked/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
unknown_coercion	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:unknown_coercion(letter,word)$/;"	f
unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:()
unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:()
unlock	rainbow/thread.h	/^    void unlock() {$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:()
unmapKeys	.vim/ftplugin/xml.vim	/^function! s:unmapKeys()$/;"	f
unmarksigns	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
unput	.vim/src/lex.yy.c	135;"	d	file:
upDirCurrentRootClosed	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
upDirCurrentRootOpen	.vim_runtime/sources_non_forked/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
upconvert	.vim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
upconvert	.vim_runtime/my_plugins/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
upconvert	.vim_runtime/sources_non_forked/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
update	.vim_runtime/update_plugins.py	/^def update(plugin):$/;"	f	access:public
update_GistID	.vim_runtime/sources_non_forked/gist-vim/autoload/gist.vim	/^function! s:update_GistID(id) abort$/;"	f
update_GistID	.vim_runtime/sources_non_forked/vim-gist/autoload/gist.vim	/^function! s:update_GistID(id) abort$/;"	f
update_label	.vim/src/previewwindow.cpp	/^	void update_label() ;$/;"	p	file:	signature:()
update_label	.vim/src/previewwindow.cpp	/^	void update_label()$/;"	f	signature:()
update_visual_markers	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:update_visual_markers(region)$/;"	f
uppercase	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:uppercase(word)$/;"	f
upsert_new_gitgutter_signs	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
url	.vim/src/readtags.c	/^	char *url;$/;"	m	struct:sTagFile::__anon4	file:	access:public
url	.vim/src/readtags.h	/^		const char *url;$/;"	m	struct:__anon7::__anon10	access:public
url	.vim/src/vjde/completion/Struts2Configure.java	/^		public String url;$/;"	f	class:Struts2Configure.MyAction	access:public
url	.vim/src/vjde/completion/Struts2Simple.java	/^		public String url;$/;"	f	class:Struts2Simple.MyAction	access:public
useHTML	.vim/src/vjde/completion/Document.java	/^        boolean useHTML = true;$/;"	f	class:Document	access:default
useShort	.vim/src/previewwindow.cpp	/^	gboolean useShort = FALSE;$/;"	v
use_doc	.vim/src/previewwindow.cpp	/^	gboolean use_doc=FALSE;$/;"	v
use_known_shell	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
useful_diff_colours	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:useful_diff_colours()$/;"	f
user_input	.vim/src/previewwindow.cpp	/^	string user_input;$/;"	v
usrign	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
v	.vim_runtime/sources_non_forked/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> v <NOP>$/;"	m
vacantdict	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
val	.vim_runtime/sources_non_forked/vim-markdown/ftplugin/markdown.vim	/^        let val = matchstr(s:filetype, "[^=]*$")$/;"	v
validfile	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
value	.vim/src/readtags.h	/^	const char *value;$/;"	m	struct:__anon11	access:public
value	.vim/src/vjde/completion/Struts2Configure.java	/^				public String value() {$/;"	m	class:ActionImpl	access:public	signature:()
value	.vim/src/vjde/completion/Struts2Simple.java	/^				public String value() {$/;"	m	class:ActionImpl2	access:public	signature:()
value	.vim/src/vjde/completion/Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Action	access:public	signature:()
value	.vim/src/vjde/completion/Struts2Simple.java	/^        public String value() ;$/;"	m	interface:Result	access:public	signature:()
value	.vim/src/vjde/completion/Struts2Simple.java	/^    public String value() {$/;"	m	class:ResultImpl2	access:public	signature:()
version	.vim/src/readtags.c	/^	char *version;$/;"	m	struct:sTagFile::__anon4	file:	access:public
version	.vim/src/readtags.h	/^		const char *version;$/;"	m	struct:__anon7::__anon10	access:public
view_changelog	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vim_markdown_folding_disabled	.vim_runtime/vimrcs/filetypes.vim	/^let vim_markdown_folding_disabled = 1$/;"	v
vim_snippets#Filename	.vim_runtime/sources_non_forked/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vim_version	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
visual_placeholder	.vim_runtime/sources_non_forked/vim-snipmate/autoload/snipmate/parse.vim	/^function! s:visual_placeholder(var, indent) abort$/;"	f
vjde.completion	.vim/src/vjde/completion/ClassInfo.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/ClassPathDir.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/ClassPathEntry.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/ClassPathZip.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/ClassesByName.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/Completion.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/Document.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/DynamicClassLoader.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/MultiValueMap.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/PackageClasses.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/PackageCompletion.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/SourceDocReader.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/Struts2Configure.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/Struts2ConfigureMain.java	/^package vjde.completion;$/;"	p
vjde.completion	.vim/src/vjde/completion/Struts2Simple.java	/^package vjde.completion;$/;"	p
vlistitem	.vim/ftplugin/xml.vim	/^fun! s:vlistitem()$/;"	f
vstring	.vim/src/readtags.c	/^} vstring;$/;"	t	typeref:struct:__anon1	file:
vundle#begin	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#begin(...) abort$/;"	f
vundle#bundle_dir	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#bundle_dir = expand('$HOME\/.vim\/bundle', 1)$/;"	v
vundle#bundles	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#bundles = []$/;"	v
vundle#config#activate_bundles	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#activate_bundles()$/;"	f
vundle#config#bundle	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#end	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#end(...) abort$/;"	f
vundle#installer#clean	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#installer#shellesc	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc(cmd) abort$/;"	f
vundle#installer#shellesc_cd	.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc_cd(cmd) abort$/;"	f
vundle#lazy_load	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#lazy_load = 0$/;"	v
vundle#log	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#log = []$/;"	v
vundle#rc	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
vundle#updated_bundles	.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#updated_bundles = []$/;"	v
wait	rainbow/thread.cpp	/^void Semaphore::wait() {$/;"	f	class:rainbow::Semaphore	signature:()
wait	rainbow/thread.h	/^    void wait();$/;"	p	class:rainbow::Semaphore	access:public	signature:()
wait_for_user_input	.vim_runtime/sources_non_forked/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:wait_for_user_input(mode)$/;"	f
walker	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warn	.vim_runtime/autoload/pathogen.vim	/^function! s:warn(msg) abort$/;"	f
warn	rainbow/log.cpp	/^void Logger::warn(LogEvent::ptr event) { log(LogLevel::WARN, event); }$/;"	f	class:rainbow::Logger	signature:(LogEvent::ptr event)
warn	rainbow/log.h	/^    void warn(LogEvent::ptr event);$/;"	p	class:rainbow::Logger	access:public	signature:(LogEvent::ptr event)
webapp	.vim/src/vjde/completion/Struts2Configure.java	/^	String webapp;$/;"	f	class:Struts2Configure	access:default
webapp	.vim/src/vjde/completion/Struts2Simple.java	/^	String webapp;$/;"	f	class:Struts2Simple	access:default
width	.vim/src/previewwindow.cpp	/^		int width;$/;"	m	struct:_Rectangle	file:	access:public
window	.vim/src/previewwindow.cpp	/^	GtkWidget *window=NULL;$/;"	v
winposx	.vim/src/previewwindow.cpp	/^	int winposx = 0;$/;"	v
winposy	.vim/src/previewwindow.cpp	/^	int winposy = 0;$/;"	v
winshell	.vim_runtime/sources_non_forked/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
winshell	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
words	.vim_runtime/sources_non_forked/vim-abolish/plugin/abolish.vim	/^function! s:words()$/;"	f
wrap	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrap_a	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
wrap_i	.vim_runtime/sources_non_forked/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
wrapreg	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
write_buffer	.vim_runtime/sources_non_forked/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
writecache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	.vim_runtime/sources_non_forked/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
wrlock	rainbow/thread.h	/^    void wrlock() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
x	.vim/src/previewwindow.cpp	/^		int x;$/;"	m	struct:_Rectangle	file:	access:public
xml_tag_completion_map	.vim/ftplugin/xml.vim	/^            let xml_tag_completion_map = "<C-l>"$/;"	v
xpath	.vim/src/vjde/completion/Struts2Configure.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Configure	access:default
xpath	.vim/src/vjde/completion/Struts2Simple.java	/^	static XPath xpath = factory.newXPath();$/;"	f	class:Struts2Simple	access:default
y	.vim/src/previewwindow.cpp	/^		int y;$/;"	m	struct:_Rectangle	file:	access:public
yS	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yank_entries	.vim_runtime/sources_non_forked/vim-yankstack/spec/yankstack/yankstack_spec.rb	/^  def yank_entries$/;"	f
yank_with_key	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:yank_with_key(key)$/;"	f
yankstack#setup	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! yankstack#setup()$/;"	f
yankstack_rotate	.vim_runtime/sources_non_forked/vim-yankstack/autoload/yankstack.vim	/^function! s:yankstack_rotate(offset)$/;"	f
youtube_video	.vim_runtime/sources_non_forked/vim-ruby/spec/syntax/strings/heredoc_spec.rb	/^        def youtube_video(token, width = 360, height = 215)$/;"	f
ys	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	.vim_runtime/sources_non_forked/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
yy_accept	.vim/src/lex.yy.c	/^static yyconst short int yy_accept[367] =$/;"	v	file:
yy_at_bol	.vim/src/lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_base	.vim/src/lex.yy.c	/^static yyconst short int yy_base[378] =$/;"	v	file:
yy_buf_pos	.vim/src/lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_size	.vim/src/lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state	.vim/src/lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state::yy_at_bol	.vim/src/lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_pos	.vim/src/lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_size	.vim/src/lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buffer_status	.vim/src/lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_ch_buf	.vim/src/lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_fill_buffer	.vim/src/lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_input_file	.vim/src/lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_interactive	.vim/src/lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_our_buffer	.vim/src/lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_n_chars	.vim/src/lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_status	.vim/src/lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_c_buf_p	.vim/src/lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	.vim/src/lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_chk	.vim/src/lex.yy.c	/^static yyconst short int yy_chk[951] =$/;"	v	file:
yy_create_buffer	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));$/;"	p	file:	signature:( FILE *file, int size )
yy_create_buffer	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )$/;"	f	signature:( FILE *file, int size )
yy_current_buffer	.vim/src/lex.yy.c	/^static YY_BUFFER_STATE yy_current_buffer = 0;$/;"	v	file:
yy_def	.vim/src/lex.yy.c	/^static yyconst short int yy_def[378] =$/;"	v	file:
yy_delete_buffer	.vim/src/lex.yy.c	/^void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));$/;"	p	file:	signature:( YY_BUFFER_STATE b )
yy_delete_buffer	.vim/src/lex.yy.c	/^void yy_delete_buffer( YY_BUFFER_STATE b )$/;"	f	signature:( YY_BUFFER_STATE b )
yy_did_buffer_switch_on_eof	.vim/src/lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	.vim/src/lex.yy.c	/^static yyconst int yy_ec[256] =$/;"	v	file:
yy_fatal_error	.vim/src/lex.yy.c	/^static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));$/;"	p	file:	signature:( yyconst char msg[] )
yy_fatal_error	.vim/src/lex.yy.c	/^static void yy_fatal_error( yyconst char msg[] )$/;"	f	file:	signature:( yyconst char msg[] )
yy_fill_buffer	.vim/src/lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_flex_alloc	.vim/src/lex.yy.c	/^static void *yy_flex_alloc YY_PROTO(( yy_size_t ));$/;"	p	file:	signature:( yy_size_t )
yy_flex_alloc	.vim/src/lex.yy.c	/^static void *yy_flex_alloc( yy_size_t size )$/;"	f	file:	signature:( yy_size_t size )
yy_flex_free	.vim/src/lex.yy.c	/^static void yy_flex_free YY_PROTO(( void * ));$/;"	p	file:	signature:( void * )
yy_flex_free	.vim/src/lex.yy.c	/^static void yy_flex_free( void *ptr )$/;"	f	file:	signature:( void *ptr )
yy_flex_realloc	.vim/src/lex.yy.c	/^static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));$/;"	p	file:	signature:( void *, yy_size_t )
yy_flex_realloc	.vim/src/lex.yy.c	/^static void *yy_flex_realloc( void *ptr, yy_size_t size )$/;"	f	file:	signature:( void *ptr, yy_size_t size )
yy_flex_strlen	.vim/src/lex.yy.c	/^static int yy_flex_strlen YY_PROTO(( yyconst char * ));$/;"	p	file:	signature:( yyconst char * )
yy_flex_strlen	.vim/src/lex.yy.c	/^static int yy_flex_strlen( yyconst char *s )$/;"	f	file:	signature:( yyconst char *s )
yy_flex_strncpy	.vim/src/lex.yy.c	/^static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));$/;"	p	file:	signature:( char *, yyconst char *, int )
yy_flex_strncpy	.vim/src/lex.yy.c	/^static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )$/;"	f	file:	signature:( char *s1, yyconst char *s2, int n )
yy_flush_buffer	.vim/src/lex.yy.c	/^void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));$/;"	p	file:	signature:( YY_BUFFER_STATE b )
yy_flush_buffer	.vim/src/lex.yy.c	/^void yy_flush_buffer( YY_BUFFER_STATE b )$/;"	f	signature:( YY_BUFFER_STATE b )
yy_get_next_buffer	.vim/src/lex.yy.c	/^static int yy_get_next_buffer YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_get_next_buffer	.vim/src/lex.yy.c	/^static int yy_get_next_buffer()$/;"	f	file:
yy_get_previous_state	.vim/src/lex.yy.c	/^static yy_state_type yy_get_previous_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_get_previous_state	.vim/src/lex.yy.c	/^static yy_state_type yy_get_previous_state()$/;"	f	file:
yy_hold_char	.vim/src/lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	.vim/src/lex.yy.c	/^static int yy_init = 1;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	.vim/src/lex.yy.c	/^void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));$/;"	p	file:	signature:( YY_BUFFER_STATE b, FILE *file )
yy_init_buffer	.vim/src/lex.yy.c	/^void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )$/;"	f	signature:( YY_BUFFER_STATE b, FILE *file )
yy_input_file	.vim/src/lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_interactive	.vim/src/lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_our_buffer	.vim/src/lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_last_accepting_cpos	.vim/src/lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	.vim/src/lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	.vim/src/lex.yy.c	/^void yy_load_buffer_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_load_buffer_state	.vim/src/lex.yy.c	/^void yy_load_buffer_state( void )$/;"	f	signature:( void )
yy_meta	.vim/src/lex.yy.c	/^static yyconst int yy_meta[35] =$/;"	v	file:
yy_n_chars	.vim/src/lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_n_chars	.vim/src/lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	.vim/src/lex.yy.c	246;"	d	file:
yy_nxt	.vim/src/lex.yy.c	/^static yyconst short int yy_nxt[951] =$/;"	v	file:
yy_pop_state	.vim/src/lex.yy.c	/^static void yy_pop_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_pop_state	.vim/src/lex.yy.c	/^static void yy_pop_state()$/;"	f	file:
yy_push_state	.vim/src/lex.yy.c	/^static void yy_push_state YY_PROTO(( int new_state ));$/;"	p	file:	signature:( int new_state )
yy_push_state	.vim/src/lex.yy.c	/^static void yy_push_state( int new_state )$/;"	f	file:	signature:( int new_state )
yy_scan_buffer	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));$/;"	p	file:	signature:( char *base, yy_size_t size )
yy_scan_buffer	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )$/;"	f	signature:( char *base, yy_size_t size )
yy_scan_bytes	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));$/;"	p	file:	signature:( yyconst char *bytes, int len )
yy_scan_bytes	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )$/;"	f	signature:( yyconst char *bytes, int len )
yy_scan_string	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));$/;"	p	file:	signature:( yyconst char *yy_str )
yy_scan_string	.vim/src/lex.yy.c	/^YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )$/;"	f	signature:( yyconst char *yy_str )
yy_set_bol	.vim/src/lex.yy.c	255;"	d	file:
yy_set_interactive	.vim/src/lex.yy.c	248;"	d	file:
yy_size_t	.vim/src/lex.yy.c	/^typedef unsigned int yy_size_t;$/;"	t	file:
yy_start	.vim/src/lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_start_stack	.vim/src/lex.yy.c	/^static int *yy_start_stack = 0;$/;"	v	file:
yy_start_stack_depth	.vim/src/lex.yy.c	/^static int yy_start_stack_depth = 0;$/;"	v	file:
yy_start_stack_ptr	.vim/src/lex.yy.c	/^static int yy_start_stack_ptr = 0;$/;"	v	file:
yy_state_type	.vim/src/lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	.vim/src/lex.yy.c	/^void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));$/;"	p	file:	signature:( YY_BUFFER_STATE new_buffer )
yy_switch_to_buffer	.vim/src/lex.yy.c	/^void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )$/;"	f	signature:( YY_BUFFER_STATE new_buffer )
yy_top_state	.vim/src/lex.yy.c	/^static int yy_top_state YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yy_top_state	.vim/src/lex.yy.c	/^static int yy_top_state()$/;"	f	file:
yy_try_NUL_trans	.vim/src/lex.yy.c	/^static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));$/;"	p	file:	signature:( yy_state_type current_state )
yy_try_NUL_trans	.vim/src/lex.yy.c	/^static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )$/;"	f	file:	signature:( yy_state_type yy_current_state )
yyconst	.vim/src/lex.yy.c	53;"	d	file:
yyconst	.vim/src/lex.yy.c	55;"	d	file:
yyin	.vim/src/lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	.vim/src/lex.yy.c	/^static int yyinput YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yyinput	.vim/src/lex.yy.c	/^static int yyinput()$/;"	f	file:
yyleng	.vim/src/lex.yy.c	/^int yyleng;$/;"	v
yyless	.vim/src/lex.yy.c	124;"	d	file:
yyless	.vim/src/lex.yy.c	1974;"	d	file:
yyless	.vim/src/lex.yy.c	1975;"	d	file:
yymore	.vim/src/lex.yy.c	684;"	d	file:
yyout	.vim/src/lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyrestart	.vim/src/lex.yy.c	/^void yyrestart YY_PROTO(( FILE *input_file ));$/;"	p	file:	signature:( FILE *input_file )
yyrestart	.vim/src/lex.yy.c	/^void yyrestart( FILE *input_file )$/;"	f	signature:( FILE *input_file )
yyterminate	.vim/src/lex.yy.c	846;"	d	file:
yytext	.vim/src/lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	.vim/src/lex.yy.c	268;"	d	file:
yyunput	.vim/src/lex.yy.c	/^static void yyunput YY_PROTO(( int c, char *buf_ptr ));$/;"	p	file:	signature:( int c, char *buf_ptr )
yyunput	.vim/src/lex.yy.c	/^static void yyunput( int c, register char *yy_bp )$/;"	f	file:	signature:( int c, register char *yy_bp )
yywrap	.vim/src/lex.yy.c	/^extern "C" int yywrap YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yywrap	.vim/src/lex.yy.c	/^extern int yywrap YY_PROTO(( void ));$/;"	p	file:	signature:( void )
yywrap	.vim/src/lex.yy.c	/^int yywrap()$/;"	f
zenroom_goyo_after	.vim_runtime/sources_non_forked/vim-zenroom2/plugin/zenroom2.vim	/^function! s:zenroom_goyo_after()$/;"	f
zenroom_goyo_before	.vim_runtime/sources_non_forked/vim-zenroom2/plugin/zenroom2.vim	/^function! s:zenroom_goyo_before()$/;"	f
zipOrJar	.vim/src/vjde/completion/ClassPathZip.java	/^    private File zipOrJar;$/;"	f	class:ClassPathZip	file:	access:private
~ConfigVarBase	rainbow/config.h	/^    virtual ~ConfigVarBase() {}$/;"	f	class:rainbow::ConfigVarBase	access:public	signature:()
~FormatItem	rainbow/log.h	/^        virtual ~FormatItem() {}$/;"	f	class:rainbow::LogFormatter::FormatItem	access:public	signature:()
~LogAppender	rainbow/log.h	/^    virtual ~LogAppender() {}$/;"	f	class:rainbow::LogAppender	access:public	signature:()
~LogEvent	rainbow/log.h	/^    ~LogEvent() {}$/;"	f	class:rainbow::LogEvent	access:public	signature:()
~LogEventWrap	rainbow/log.cpp	/^LogEventWrap::~LogEventWrap() {$/;"	f	class:rainbow::LogEventWrap	signature:()
~LogEventWrap	rainbow/log.h	/^    ~LogEventWrap();$/;"	p	class:rainbow::LogEventWrap	access:public	signature:()
~RWMutex	rainbow/thread.h	/^    ~RWMutex() {$/;"	f	class:rainbow::RWMutex	access:public	signature:()
~ReadScopedLockImpl	rainbow/thread.h	/^    ~ReadScopedLockImpl() {$/;"	f	struct:rainbow::ReadScopedLockImpl	access:public	signature:()
~ScopedLockImpl	rainbow/thread.h	/^    ~ScopedLockImpl() {$/;"	f	struct:rainbow::ScopedLockImpl	access:public	signature:()
~Semaphore	rainbow/thread.cpp	/^Semaphore::~Semaphore() {$/;"	f	class:rainbow::Semaphore	signature:()
~Semaphore	rainbow/thread.h	/^    ~Semaphore();$/;"	p	class:rainbow::Semaphore	access:public	signature:()
~Thread	rainbow/thread.cpp	/^Thread::~Thread() {$/;"	f	class:rainbow::Thread	signature:()
~Thread	rainbow/thread.h	/^    ~Thread();$/;"	p	class:rainbow::Thread	access:public	signature:()
~WriteScopedLockImpl	rainbow/thread.h	/^    ~WriteScopedLockImpl() {$/;"	f	struct:rainbow::WriteScopedLockImpl	access:public	signature:()
¬Ω	.vim_runtime/vimrcs/extended.vim	/^cmap ¬Ω \$$/;"	m
¬Ω	.vim_runtime/vimrcs/extended.vim	/^imap ¬Ω \$$/;"	m
¬Ω	.vim_runtime/vimrcs/extended.vim	/^map ¬Ω \$$/;"	m
